

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Wed Feb 25 14:48:13 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F45K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    45                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    50                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    51  0000                     _ADCON0bits	set	4034
    52  0000                     _ADCON1	set	4033
    53  0000                     _ADCON1bits	set	4033
    54  0000                     _ADCON2bits	set	4032
    55  0000                     _ADRESH	set	4036
    56  0000                     _ADRESL	set	4035
    57  0000                     _ANCON0	set	3933
    58  0000                     _ANCON1	set	3932
    59  0000                     _BRGCON1	set	3651
    60  0000                     _BRGCON2	set	3652
    61  0000                     _BRGCON3	set	3653
    62  0000                     _CANCON	set	3951
    63  0000                     _CANSTAT	set	3950
    64  0000                     _CIOCON	set	3952
    65  0000                     _INTCON	set	4082
    66  0000                     _INTCON2	set	4081
    67  0000                     _INTCON3	set	4080
    68  0000                     _INTCONbits	set	4082
    69  0000                     _IPR1	set	3999
    70  0000                     _IPR2	set	4002
    71  0000                     _IPR3	set	4005
    72  0000                     _IPR4	set	4024
    73  0000                     _IPR5	set	3960
    74  0000                     _LATBbits	set	3978
    75  0000                     _LATCbits	set	3979
    76  0000                     _LATDbits	set	3980
    77  0000                     _LATE	set	3981
    78  0000                     _OSCCONbits	set	4051
    79  0000                     _PIE1	set	3997
    80  0000                     _PIE2	set	4000
    81  0000                     _PIE3	set	4003
    82  0000                     _PIE4	set	4022
    83  0000                     _PIE5	set	3958
    84  0000                     _PIR1	set	3998
    85  0000                     _PIR2	set	4001
    86  0000                     _PIR3	set	4004
    87  0000                     _PIR4	set	4023
    88  0000                     _PIR5	set	3959
    89  0000                     _PIR5bits	set	3959
    90  0000                     _PORTA	set	3968
    91  0000                     _PORTCbits	set	3970
    92  0000                     _RCONbits	set	4048
    93  0000                     _RXF0SIDH	set	3808
    94  0000                     _RXF0SIDL	set	3809
    95  0000                     _RXF1SIDH	set	3812
    96  0000                     _RXF1SIDL	set	3813
    97  0000                     _RXF2SIDH	set	3816
    98  0000                     _RXF2SIDL	set	3817
    99  0000                     _RXF3SIDH	set	3820
   100  0000                     _RXF3SIDL	set	3821
   101  0000                     _RXF4SIDH	set	3824
   102  0000                     _RXF4SIDL	set	3825
   103  0000                     _RXF5SIDH	set	3828
   104  0000                     _RXF5SIDL	set	3829
   105  0000                     _RXM0SIDH	set	3832
   106  0000                     _RXM0SIDL	set	3833
   107  0000                     _RXM1SIDH	set	3836
   108  0000                     _RXM1SIDL	set	3837
   109  0000                     _SSPADD	set	4040
   110  0000                     _SSPBUF	set	4041
   111  0000                     _SSPCON1	set	4038
   112  0000                     _SSPCON1bits	set	4038
   113  0000                     _SSPCON2	set	4037
   114  0000                     _SSPCON2bits	set	4037
   115  0000                     _SSPSTAT	set	4039
   116  0000                     _SSPSTATbits	set	4039
   117  0000                     _T0CONbits	set	4053
   118  0000                     _TMR0H	set	4055
   119  0000                     _TMR0L	set	4054
   120  0000                     _TRISA	set	3986
   121  0000                     _TRISB	set	3987
   122  0000                     _TRISC	set	3988
   123  0000                     _TRISD	set	3989
   124  0000                     _TRISE	set	3990
   125  0000                     _TXB0CONbits	set	3872
   126                           
   127 ;; *************** function _low_isr *****************
   128 ;; Defined at:
   129 ;;		line 68 in file "interrupts.c"
   130 ;; Parameters:    Size  Location     Type
   131 ;;		None
   132 ;; Auto vars:     Size  Location     Type
   133 ;;  temp            1    0        unsigned char 
   134 ;; Return value:  Size  Location     Type
   135 ;;		None               void
   136 ;; Registers used:
   137 ;;		wreg, status,2, status,0
   138 ;; Tracked objects:
   139 ;;		On entry : 0/0
   140 ;;		On exit  : 0/0
   141 ;;		Unchanged: 0/0
   142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   145 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   146 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   147 ;;Total ram usage:       17 bytes
   148 ;; Hardware stack levels used:    1
   149 ;; Hardware stack levels required when called:    3
   150 ;; This function calls:
   151 ;;		Nothing
   152 ;; This function is called by:
   153 ;;		Interrupt level 1
   154 ;; This function uses a non-reentrant model
   155 ;;
   156                           
   157                           	psect	intcodelo
   158  000018                     __pintcodelo:
   159                           	opt stack 0
   160  0000                     _TXB2CON	set	3840
   161  0000                     _TXB1CON	set	3856
   162  0000                     _TXB0CON	set	3872
   163  0000                     _RXB1CON	set	3888
   164  0000                     _RXB0CON	set	3936
   165  0000                     _RXM1EXIDEN	set	30699
   166  0000                     _RXM0EXIDM	set	30667
   167  0000                     _RXB1OVFL	set	31630
   168  0000                     _RXB1IF	set	31673
   169  0000                     _RXB1FUL	set	31111
   170  0000                     _RXB0OVFL	set	31631
   171  0000                     _RXB0IF	set	31672
   172  0000                     _RXB0FUL	set	31495
   173  0000                     _RXB0FILHIT0	set	31488
   174  0000                     _MDSEL1	set	31639
   175  0000                     _MDSEL0	set	31638
   176  0000                     _IRXIF	set	31679
   177  0000                     
   178                           ; #config settings
   179  000018                     _low_isr:
   180                           	opt stack 23
   181                           
   182                           ; BSR set to: 0
   183                           ;incstack = 0
   184  000018  CFD8 F001          	movff	status,??_low_isr
   185  00001C  CFE8 F002          	movff	wreg,??_low_isr+1
   186  000020  CFE0 F003          	movff	bsr,??_low_isr+2
   187  000024  CFFA F004          	movff	pclath,??_low_isr+3
   188  000028  CFFB F005          	movff	pclatu,??_low_isr+4
   189  00002C  CFE9 F006          	movff	fsr0l,??_low_isr+5
   190  000030  CFEA F007          	movff	fsr0h,??_low_isr+6
   191  000034  CFE1 F008          	movff	fsr1l,??_low_isr+7
   192  000038  CFE2 F009          	movff	fsr1h,??_low_isr+8
   193  00003C  CFD9 F00A          	movff	fsr2l,??_low_isr+9
   194  000040  CFDA F00B          	movff	fsr2h,??_low_isr+10
   195  000044  CFF3 F00C          	movff	prodl,??_low_isr+11
   196  000048  CFF4 F00D          	movff	prodh,??_low_isr+12
   197  00004C  CFF6 F00E          	movff	tblptrl,??_low_isr+13
   198  000050  CFF7 F00F          	movff	tblptrh,??_low_isr+14
   199  000054  CFF8 F010          	movff	tblptru,??_low_isr+15
   200  000058  CFF5 F011          	movff	tablat,??_low_isr+16
   201                           
   202                           ;interrupts.c: 78: unsigned char temp;
   203                           ;interrupts.c: 80: if(INTCONbits.TMR0IF)
   204  00005C  A4F2               	btfss	intcon,2,c	;volatile
   205  00005E  D008               	goto	i1l24
   206                           
   207                           ;interrupts.c: 81: {
   208                           ;interrupts.c: 82: INTCONbits.TMR0IF=0;
   209  000060  94F2               	bcf	intcon,2,c	;volatile
   210                           
   211                           ;interrupts.c: 84: TickCounter ++;
   212  000062  0100               	movlb	0	; () banked
   213  000064  0100               	movlb	0	; () banked
   214  000066  2BC4               	incf	_TickCounter& (0+255),f,b
   215                           
   216                           ; BSR set to: 0
   217                           ;interrupts.c: 86: TMR0H = 0xFB;
   218  000068  0EFB               	movlw	251
   219  00006A  6ED7               	movwf	4055,c	;volatile
   220                           
   221                           ; BSR set to: 0
   222                           ;interrupts.c: 87: TMR0L = 0x1E;
   223  00006C  0E1E               	movlw	30
   224  00006E  6ED6               	movwf	4054,c	;volatile
   225  000070                     i1l24:
   226  000070  C011  FFF5         	movff	??_low_isr+16,tablat
   227  000074  C010  FFF8         	movff	??_low_isr+15,tblptru
   228  000078  C00F  FFF7         	movff	??_low_isr+14,tblptrh
   229  00007C  C00E  FFF6         	movff	??_low_isr+13,tblptrl
   230  000080  C00D  FFF4         	movff	??_low_isr+12,prodh
   231  000084  C00C  FFF3         	movff	??_low_isr+11,prodl
   232  000088  C00B  FFDA         	movff	??_low_isr+10,fsr2h
   233  00008C  C00A  FFD9         	movff	??_low_isr+9,fsr2l
   234  000090  C009  FFE2         	movff	??_low_isr+8,fsr1h
   235  000094  C008  FFE1         	movff	??_low_isr+7,fsr1l
   236  000098  C007  FFEA         	movff	??_low_isr+6,fsr0h
   237  00009C  C006  FFE9         	movff	??_low_isr+5,fsr0l
   238  0000A0  C005  FFFB         	movff	??_low_isr+4,pclatu
   239  0000A4  C004  FFFA         	movff	??_low_isr+3,pclath
   240  0000A8  C003  FFE0         	movff	??_low_isr+2,bsr
   241  0000AC  C002  FFE8         	movff	??_low_isr+1,wreg
   242  0000B0  C001  FFD8         	movff	??_low_isr,status
   243  0000B4  0010               	retfie	
   244  0000B6                     __end_of_low_isr:
   245                           	opt stack 0
   246                           pclatu	equ	0xFFB
   247                           pclath	equ	0xFFA
   248                           tblptru	equ	0xFF8
   249                           tblptrh	equ	0xFF7
   250                           tblptrl	equ	0xFF6
   251                           tablat	equ	0xFF5
   252                           prodh	equ	0xFF4
   253                           prodl	equ	0xFF3
   254                           intcon	equ	0xFF2
   255                           fsr0h	equ	0xFEA
   256                           fsr0l	equ	0xFE9
   257                           wreg	equ	0xFE8
   258                           fsr1h	equ	0xFE2
   259                           fsr1l	equ	0xFE1
   260                           bsr	equ	0xFE0
   261                           fsr2h	equ	0xFDA
   262                           fsr2l	equ	0xFD9
   263                           status	equ	0xFD8
   264                           
   265                           	psect	cinit
   266  001FFC                     __pcinit:
   267                           	opt stack 0
   268  001FFC                     start_initialization:
   269                           	opt stack 0
   270  001FFC                     __initialization:
   271                           	opt stack 0
   272                           
   273                           ; Clear objects allocated to BANK2 (144 bytes)
   274  001FFC  EE02  F000         	lfsr	0,__pbssBANK2
   275  002000  0E90               	movlw	144
   276  002002                     clear_0:
   277  002002  6AEE               	clrf	postinc0,c
   278  002004  06E8               	decf	wreg,f,c
   279  002006  E1FD               	bnz	clear_0
   280                           
   281                           ; Clear objects allocated to BANK1 (144 bytes)
   282  002008  EE01  F000         	lfsr	0,__pbssBANK1
   283  00200C  0E90               	movlw	144
   284  00200E                     clear_1:
   285  00200E  6AEE               	clrf	postinc0,c
   286  002010  06E8               	decf	wreg,f,c
   287  002012  E1FD               	bnz	clear_1
   288                           
   289                           ; Clear objects allocated to BANK0 (13 bytes)
   290  002014  EE00  F0B8         	lfsr	0,__pbssBANK0
   291  002018  0E0D               	movlw	13
   292  00201A                     clear_2:
   293  00201A  6AEE               	clrf	postinc0,c
   294  00201C  06E8               	decf	wreg,f,c
   295  00201E  E1FD               	bnz	clear_2
   296                           
   297                           ; Clear objects allocated to COMRAM (1 bytes)
   298  002020  6A46               	clrf	__pbssCOMRAM& (0+255),c
   299  002022                     end_of_initialization:
   300                           	opt stack 0
   301  002022                     __end_of__initialization:
   302                           	opt stack 0
   303  002022  0100               	movlb	0
   304  002024  EF5D  F000         	goto	_main	;jump to C main() function
   305                           pclatu	equ	0xFFB
   306                           pclath	equ	0xFFA
   307                           tblptru	equ	0xFF8
   308                           tblptrh	equ	0xFF7
   309                           tblptrl	equ	0xFF6
   310                           tablat	equ	0xFF5
   311                           prodh	equ	0xFF4
   312                           prodl	equ	0xFF3
   313                           intcon	equ	0xFF2
   314                           postinc0	equ	0xFEE
   315                           fsr0h	equ	0xFEA
   316                           fsr0l	equ	0xFE9
   317                           wreg	equ	0xFE8
   318                           fsr1h	equ	0xFE2
   319                           fsr1l	equ	0xFE1
   320                           bsr	equ	0xFE0
   321                           fsr2h	equ	0xFDA
   322                           fsr2l	equ	0xFD9
   323                           status	equ	0xFD8
   324                           
   325                           	psect	bssCOMRAM
   326  000046                     __pbssCOMRAM:
   327                           	opt stack 0
   328  000046                     __ECANRxFilterHitInfo:
   329                           	opt stack 0
   330  000046                     	ds	1
   331                           pclatu	equ	0xFFB
   332                           pclath	equ	0xFFA
   333                           tblptru	equ	0xFF8
   334                           tblptrh	equ	0xFF7
   335                           tblptrl	equ	0xFF6
   336                           tablat	equ	0xFF5
   337                           prodh	equ	0xFF4
   338                           prodl	equ	0xFF3
   339                           intcon	equ	0xFF2
   340                           postinc0	equ	0xFEE
   341                           fsr0h	equ	0xFEA
   342                           fsr0l	equ	0xFE9
   343                           wreg	equ	0xFE8
   344                           fsr1h	equ	0xFE2
   345                           fsr1l	equ	0xFE1
   346                           bsr	equ	0xFE0
   347                           fsr2h	equ	0xFDA
   348                           fsr2l	equ	0xFD9
   349                           status	equ	0xFD8
   350                           
   351                           	psect	bssBANK0
   352  0000B8                     __pbssBANK0:
   353                           	opt stack 0
   354  0000B8                     _BoardVoltage:
   355                           	opt stack 0
   356  0000B8                     	ds	12
   357  0000C4                     _TickCounter:
   358                           	opt stack 0
   359  0000C4                     	ds	1
   360                           pclatu	equ	0xFFB
   361                           pclath	equ	0xFFA
   362                           tblptru	equ	0xFF8
   363                           tblptrh	equ	0xFF7
   364                           tblptrl	equ	0xFF6
   365                           tablat	equ	0xFF5
   366                           prodh	equ	0xFF4
   367                           prodl	equ	0xFF3
   368                           intcon	equ	0xFF2
   369                           postinc0	equ	0xFEE
   370                           fsr0h	equ	0xFEA
   371                           fsr0l	equ	0xFE9
   372                           wreg	equ	0xFE8
   373                           fsr1h	equ	0xFE2
   374                           fsr1l	equ	0xFE1
   375                           bsr	equ	0xFE0
   376                           fsr2h	equ	0xFDA
   377                           fsr2l	equ	0xFD9
   378                           status	equ	0xFD8
   379                           
   380                           	psect	bssBANK1
   381  000100                     __pbssBANK1:
   382                           	opt stack 0
   383  000100                     _CANTxFifo:
   384                           	opt stack 0
   385  000100                     	ds	144
   386                           pclatu	equ	0xFFB
   387                           pclath	equ	0xFFA
   388                           tblptru	equ	0xFF8
   389                           tblptrh	equ	0xFF7
   390                           tblptrl	equ	0xFF6
   391                           tablat	equ	0xFF5
   392                           prodh	equ	0xFF4
   393                           prodl	equ	0xFF3
   394                           intcon	equ	0xFF2
   395                           postinc0	equ	0xFEE
   396                           fsr0h	equ	0xFEA
   397                           fsr0l	equ	0xFE9
   398                           wreg	equ	0xFE8
   399                           fsr1h	equ	0xFE2
   400                           fsr1l	equ	0xFE1
   401                           bsr	equ	0xFE0
   402                           fsr2h	equ	0xFDA
   403                           fsr2l	equ	0xFD9
   404                           status	equ	0xFD8
   405                           
   406                           	psect	bssBANK2
   407  000200                     __pbssBANK2:
   408                           	opt stack 0
   409  000200                     _CANRxFifo:
   410                           	opt stack 0
   411  000200                     	ds	144
   412                           pclatu	equ	0xFFB
   413                           pclath	equ	0xFFA
   414                           tblptru	equ	0xFF8
   415                           tblptrh	equ	0xFF7
   416                           tblptrl	equ	0xFF6
   417                           tablat	equ	0xFF5
   418                           prodh	equ	0xFF4
   419                           prodl	equ	0xFF3
   420                           intcon	equ	0xFF2
   421                           postinc0	equ	0xFEE
   422                           fsr0h	equ	0xFEA
   423                           fsr0l	equ	0xFE9
   424                           wreg	equ	0xFE8
   425                           fsr1h	equ	0xFE2
   426                           fsr1l	equ	0xFE1
   427                           bsr	equ	0xFE0
   428                           fsr2h	equ	0xFDA
   429                           fsr2l	equ	0xFD9
   430                           status	equ	0xFD8
   431                           
   432                           	psect	cstackBANK0
   433  000060                     __pcstackBANK0:
   434                           	opt stack 0
   435  000060                     ??_ECANFiltersInit:
   436  000060                     ??_CANTxFifoInit:
   437  000060                     ??_CANRxFifoInit:
   438  000060                     ??_Idle_I2C:
   439  000060                     ?___lwdiv:
   440                           	opt stack 0
   441  000060                     ?___ftpack:
   442                           	opt stack 0
   443  000060                     ?_GetCANRxFifo:
   444                           	opt stack 0
   445  000060                     ?_GetCANTxFifo:
   446                           	opt stack 0
   447  000060                     ECANSetOperationMode@mode:
   448                           	opt stack 0
   449  000060                     __CANIDToRegs@ptr:
   450                           	opt stack 0
   451  000060                     ___lwdiv@dividend:
   452                           	opt stack 0
   453  000060                     ___ftpack@arg:
   454                           	opt stack 0
   455  000060                     PutCANTxFifo@PutMessage:
   456                           	opt stack 0
   457                           
   458                           ; 14 bytes @ 0x0
   459  000060                     	ds	1
   460  000061                     Write_I2C@data_out:
   461                           	opt stack 0
   462                           
   463                           ; 1 bytes @ 0x1
   464  000061                     	ds	1
   465  000062                     ReadISPPACRegister@LocalAdress:
   466                           	opt stack 0
   467  000062                     WriteISPPACRegister@LocalData:
   468                           	opt stack 0
   469  000062                     ECANFiltersInit@mask:
   470                           	opt stack 0
   471  000062                     ___lwdiv@divisor:
   472                           	opt stack 0
   473  000062                     __CANIDToRegs@val:
   474                           	opt stack 0
   475                           
   476                           ; 4 bytes @ 0x2
   477  000062                     	ds	1
   478  000063                     ReadISPPACRegister@I2CData:
   479                           	opt stack 0
   480  000063                     WriteISPPACRegister@LocalAdress:
   481                           	opt stack 0
   482  000063                     ___ftpack@exp:
   483                           	opt stack 0
   484                           
   485                           ; 1 bytes @ 0x3
   486  000063                     	ds	1
   487  000064                     ??___lwdiv:
   488  000064                     ___ftpack@sign:
   489                           	opt stack 0
   490                           
   491                           ; 1 bytes @ 0x4
   492  000064                     	ds	1
   493  000065                     ??___ftpack:
   494  000065                     ___lwdiv@quotient:
   495                           	opt stack 0
   496                           
   497                           ; 2 bytes @ 0x5
   498  000065                     	ds	1
   499  000066                     __CANIDToRegs@type:
   500                           	opt stack 0
   501                           
   502                           ; 1 bytes @ 0x6
   503  000066                     	ds	1
   504  000067                     ??__CANIDToRegs:
   505  000067                     ___lwdiv@counter:
   506                           	opt stack 0
   507                           
   508                           ; 1 bytes @ 0x7
   509  000067                     	ds	1
   510  000068                     ?___lwtoft:
   511                           	opt stack 0
   512  000068                     GetActuatorPosition@adc_result:
   513                           	opt stack 0
   514  000068                     ___lwtoft@c:
   515                           	opt stack 0
   516                           
   517                           ; 2 bytes @ 0x8
   518  000068                     	ds	1
   519  000069                     __CANIDToRegs@Value:
   520                           	opt stack 0
   521                           
   522                           ; 2 bytes @ 0x9
   523  000069                     	ds	2
   524  00006B                     ??___lwtoft:
   525  00006B                     ECANSendMessage@id:
   526                           	opt stack 0
   527                           
   528                           ; 4 bytes @ 0xB
   529  00006B                     	ds	2
   530  00006D                     ?___ftmul:
   531                           	opt stack 0
   532  00006D                     ___ftmul@f1:
   533                           	opt stack 0
   534                           
   535                           ; 3 bytes @ 0xD
   536  00006D                     	ds	1
   537  00006E                     ??_PutCANTxFifo:
   538  00006E                     ??_GetCANRxFifo:
   539  00006E                     ??_GetCANTxFifo:
   540                           
   541                           ; 0 bytes @ 0xE
   542  00006E                     	ds	1
   543  00006F                     ECANSendMessage@data:
   544                           	opt stack 0
   545                           
   546                           ; 2 bytes @ 0xF
   547  00006F                     	ds	1
   548  000070                     ___ftmul@f2:
   549                           	opt stack 0
   550  000070                     GetCANTxFifo@LocalCANTXMsg:
   551                           	opt stack 0
   552  000070                     GetCANRxFifo@LocalCANRXMsg:
   553                           	opt stack 0
   554                           
   555                           ; 14 bytes @ 0x10
   556  000070                     	ds	1
   557  000071                     ECANSendMessage@dataLen:
   558                           	opt stack 0
   559                           
   560                           ; 1 bytes @ 0x11
   561  000071                     	ds	1
   562  000072                     ECANSendMessage@msgFlags:
   563                           	opt stack 0
   564                           
   565                           ; 1 bytes @ 0x12
   566  000072                     	ds	1
   567  000073                     ??_ECANSendMessage:
   568  000073                     ??___ftmul:
   569                           
   570                           ; 0 bytes @ 0x13
   571  000073                     	ds	1
   572  000074                     ECANSendMessage@pb:
   573                           	opt stack 0
   574                           
   575                           ; 18 bytes @ 0x14
   576  000074                     	ds	2
   577  000076                     ___ftmul@exp:
   578                           	opt stack 0
   579                           
   580                           ; 1 bytes @ 0x16
   581  000076                     	ds	1
   582  000077                     ___ftmul@f3_as_product:
   583                           	opt stack 0
   584                           
   585                           ; 3 bytes @ 0x17
   586  000077                     	ds	3
   587  00007A                     ___ftmul@cntr:
   588                           	opt stack 0
   589                           
   590                           ; 1 bytes @ 0x1A
   591  00007A                     	ds	1
   592  00007B                     ___ftmul@sign:
   593                           	opt stack 0
   594                           
   595                           ; 1 bytes @ 0x1B
   596  00007B                     	ds	1
   597  00007C                     ?___fttol:
   598                           	opt stack 0
   599  00007C                     ___fttol@f1:
   600                           	opt stack 0
   601                           
   602                           ; 3 bytes @ 0x1C
   603  00007C                     	ds	4
   604  000080                     ??___fttol:
   605                           
   606                           ; 0 bytes @ 0x20
   607  000080                     	ds	5
   608  000085                     ___fttol@sign1:
   609                           	opt stack 0
   610                           
   611                           ; 1 bytes @ 0x25
   612  000085                     	ds	1
   613  000086                     ECANSendMessage@j:
   614                           	opt stack 0
   615  000086                     ___fttol@lval:
   616                           	opt stack 0
   617                           
   618                           ; 4 bytes @ 0x26
   619  000086                     	ds	1
   620  000087                     ECANSendMessage@tempPtr:
   621                           	opt stack 0
   622                           
   623                           ; 2 bytes @ 0x27
   624  000087                     	ds	2
   625  000089                     ECANSendMessage@temp:
   626                           	opt stack 0
   627                           
   628                           ; 1 bytes @ 0x29
   629  000089                     	ds	1
   630  00008A                     ECANSendMessage@i:
   631                           	opt stack 0
   632  00008A                     ___fttol@exp1:
   633                           	opt stack 0
   634                           
   635                           ; 1 bytes @ 0x2A
   636  00008A                     	ds	1
   637  00008B                     ??_UpdateBoardVoltages:
   638  00008B                     ECANSendMessage@ptr:
   639                           	opt stack 0
   640                           
   641                           ; 2 bytes @ 0x2B
   642  00008B                     	ds	4
   643  00008F                     ??_main:
   644                           
   645                           ; 0 bytes @ 0x2F
   646  00008F                     	ds	7
   647  000096                     main@NewReqPosition:
   648                           	opt stack 0
   649                           
   650                           ; 1 bytes @ 0x36
   651  000096                     	ds	1
   652  000097                     main@MotorMoving:
   653                           	opt stack 0
   654                           
   655                           ; 1 bytes @ 0x37
   656  000097                     	ds	1
   657  000098                     main@MotorOrder:
   658                           	opt stack 0
   659                           
   660                           ; 1 bytes @ 0x38
   661  000098                     	ds	1
   662  000099                     main@NewReqOrder:
   663                           	opt stack 0
   664                           
   665                           ; 1 bytes @ 0x39
   666  000099                     	ds	1
   667  00009A                     main@MotorReqPosition:
   668                           	opt stack 0
   669                           
   670                           ; 1 bytes @ 0x3A
   671  00009A                     	ds	1
   672  00009B                     main@TempVar:
   673                           	opt stack 0
   674                           
   675                           ; 1 bytes @ 0x3B
   676  00009B                     	ds	1
   677  00009C                     main@TempCANRxMsg:
   678                           	opt stack 0
   679                           
   680                           ; 14 bytes @ 0x3C
   681  00009C                     	ds	14
   682  0000AA                     main@TempCANTxMsg:
   683                           	opt stack 0
   684                           
   685                           ; 14 bytes @ 0x4A
   686  0000AA                     	ds	14
   687                           pclatu	equ	0xFFB
   688                           pclath	equ	0xFFA
   689                           tblptru	equ	0xFF8
   690                           tblptrh	equ	0xFF7
   691                           tblptrl	equ	0xFF6
   692                           tablat	equ	0xFF5
   693                           prodh	equ	0xFF4
   694                           prodl	equ	0xFF3
   695                           intcon	equ	0xFF2
   696                           postinc0	equ	0xFEE
   697                           fsr0h	equ	0xFEA
   698                           fsr0l	equ	0xFE9
   699                           wreg	equ	0xFE8
   700                           fsr1h	equ	0xFE2
   701                           fsr1l	equ	0xFE1
   702                           bsr	equ	0xFE0
   703                           fsr2h	equ	0xFDA
   704                           fsr2l	equ	0xFD9
   705                           status	equ	0xFD8
   706                           
   707                           	psect	cstackCOMRAM
   708  000001                     __pcstackCOMRAM:
   709                           	opt stack 0
   710  000001                     ??_low_isr:
   711  000001                     
   712                           ; 1 bytes @ 0x0
   713  000001                     	ds	17
   714  000012                     __RegsToCANID@ptr:
   715                           	opt stack 0
   716  000012                     PutCANRxFifo@PutMessage:
   717                           	opt stack 0
   718                           
   719                           ; 14 bytes @ 0x11
   720  000012                     	ds	2
   721  000014                     __RegsToCANID@val:
   722                           	opt stack 0
   723                           
   724                           ; 2 bytes @ 0x13
   725  000014                     	ds	2
   726  000016                     __RegsToCANID@type:
   727                           	opt stack 0
   728                           
   729                           ; 1 bytes @ 0x15
   730  000016                     	ds	1
   731  000017                     ??__RegsToCANID:
   732                           
   733                           ; 0 bytes @ 0x16
   734  000017                     	ds	2
   735  000019                     __RegsToCANID@Value:
   736                           	opt stack 0
   737                           
   738                           ; 2 bytes @ 0x18
   739  000019                     	ds	2
   740  00001B                     ECANReceiveMessage@id:
   741                           	opt stack 0
   742                           
   743                           ; 2 bytes @ 0x1A
   744  00001B                     	ds	2
   745  00001D                     ECANReceiveMessage@data:
   746                           	opt stack 0
   747                           
   748                           ; 2 bytes @ 0x1C
   749  00001D                     	ds	2
   750  00001F                     ECANReceiveMessage@dataLen:
   751                           	opt stack 0
   752                           
   753                           ; 2 bytes @ 0x1E
   754  00001F                     	ds	1
   755  000020                     ??_PutCANRxFifo:
   756                           
   757                           ; 0 bytes @ 0x1F
   758  000020                     	ds	1
   759  000021                     ECANReceiveMessage@msgFlags:
   760                           	opt stack 0
   761                           
   762                           ; 2 bytes @ 0x20
   763  000021                     	ds	2
   764  000023                     ??_ECANReceiveMessage:
   765                           
   766                           ; 0 bytes @ 0x22
   767  000023                     	ds	1
   768  000024                     ECANReceiveMessage@savedPtr:
   769                           	opt stack 0
   770                           
   771                           ; 2 bytes @ 0x23
   772  000024                     	ds	2
   773  000026                     ECANReceiveMessage@i:
   774                           	opt stack 0
   775                           
   776                           ; 1 bytes @ 0x25
   777  000026                     	ds	1
   778  000027                     ECANReceiveMessage@ptr:
   779                           	opt stack 0
   780                           
   781                           ; 2 bytes @ 0x26
   782  000027                     	ds	2
   783  000029                     ECANReceiveMessage@temp:
   784                           	opt stack 0
   785                           
   786                           ; 1 bytes @ 0x28
   787  000029                     	ds	1
   788  00002A                     ??_high_isr:
   789                           
   790                           ; 0 bytes @ 0x29
   791  00002A                     	ds	14
   792  000038                     high_isr@CANRxNewMessage:
   793                           	opt stack 0
   794                           
   795                           ; 14 bytes @ 0x37
   796  000038                     	ds	14
   797                           pclatu	equ	0xFFB
   798                           pclath	equ	0xFFA
   799                           tblptru	equ	0xFF8
   800                           tblptrh	equ	0xFF7
   801                           tblptrl	equ	0xFF6
   802                           tablat	equ	0xFF5
   803                           prodh	equ	0xFF4
   804                           prodl	equ	0xFF3
   805                           intcon	equ	0xFF2
   806                           postinc0	equ	0xFEE
   807                           fsr0h	equ	0xFEA
   808                           fsr0l	equ	0xFE9
   809                           wreg	equ	0xFE8
   810                           fsr1h	equ	0xFE2
   811                           fsr1l	equ	0xFE1
   812                           bsr	equ	0xFE0
   813                           fsr2h	equ	0xFDA
   814                           fsr2l	equ	0xFD9
   815                           status	equ	0xFD8
   816                           
   817 ;;
   818 ;;Main: autosize = 0, tempsize = 7, incstack = 0, save=0
   819 ;;
   820 ;; *************** function _main *****************
   821 ;; Defined at:
   822 ;;		line 48 in file "main.c"
   823 ;; Parameters:    Size  Location     Type
   824 ;;		None
   825 ;; Auto vars:     Size  Location     Type
   826 ;;  TempCANTxMsg   14   74[BANK0 ] struct CANTxMsg
   827 ;;  TempCANRxMsg   14   60[BANK0 ] struct CANRxMsg
   828 ;;  TempVar         1   59[BANK0 ] unsigned char 
   829 ;;  MotorReqPosi    1   58[BANK0 ] unsigned char 
   830 ;;  NewReqOrder     1   57[BANK0 ] unsigned char 
   831 ;;  MotorOrder      1   56[BANK0 ] unsigned char 
   832 ;;  MotorMoving     1   55[BANK0 ] unsigned char 
   833 ;;  NewReqPositi    1   54[BANK0 ] unsigned char 
   834 ;;  I2CData         1    0        unsigned char 
   835 ;;  MotorCurrent    1    0        unsigned char 
   836 ;; Return value:  Size  Location     Type
   837 ;;		None               void
   838 ;; Registers used:
   839 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   840 ;; Tracked objects:
   841 ;;		On entry : 0/0
   842 ;;		On exit  : 0/0
   843 ;;		Unchanged: 0/0
   844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   846 ;;      Locals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   847 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   848 ;;      Totals:         0      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   849 ;;Total ram usage:       41 bytes
   850 ;; Hardware stack levels required when called:    8
   851 ;; This function calls:
   852 ;;		_CANRxFifoInit
   853 ;;		_CANTxFifoInit
   854 ;;		_ConfigureGPIO
   855 ;;		_ConfigureInterrupts
   856 ;;		_ConfigureOscillator
   857 ;;		_ConfigureTimers
   858 ;;		_ECANFiltersInit
   859 ;;		_ECANInitialize
   860 ;;		_ECANSendMessage
   861 ;;		_GetActuatorPosition
   862 ;;		_GetCANRxFifo
   863 ;;		_GetCANTxFifo
   864 ;;		_PutCANTxFifo
   865 ;;		_UpdateBoardVoltages
   866 ;; This function is called by:
   867 ;;		Startup code after reset
   868 ;; This function uses a non-reentrant model
   869 ;;
   870                           
   871                           	psect	text0
   872  0000BA                     __ptext0:
   873                           	opt stack 0
   874  0000BA                     _main:
   875                           	opt stack 23
   876                           
   877                           ;main.c: 50: char TempVar;
   878                           ;main.c: 53: struct CANTxMsg TempCANTxMsg;
   879                           ;main.c: 56: struct CANRxMsg TempCANRxMsg;
   880                           ;main.c: 59: unsigned char MotorCurrentPosition;
   881                           ;main.c: 61: unsigned char MotorOrder;
   882                           ;main.c: 62: unsigned char NewReqOrder;
   883                           ;main.c: 64: unsigned char MotorReqPosition;
   884                           ;main.c: 65: unsigned char NewReqPosition;
   885                           ;main.c: 67: unsigned char MotorMoving;
   886                           ;main.c: 69: unsigned char I2CData;
   887                           ;main.c: 78: ConfigureOscillator();
   888                           
   889                           ;incstack = 0
   890  0000BA  EC5B  F010         	call	_ConfigureOscillator	;wreg free
   891                           
   892                           ;main.c: 79: _delay((unsigned long)((10)*(64000000/4000.0)));
   893  0000BE  0ED0               	movlw	208
   894  0000C0  0100               	movlb	0	; () banked
   895  0000C2  6F8F               	movwf	??_main& (0+255),b
   896  0000C4  0ECA               	movlw	202
   897  0000C6                     u2517:
   898  0000C6  2EE8               	decfsz	wreg,f,c
   899  0000C8  D7FE               	goto	u2517
   900  0000CA  2F8F               	decfsz	??_main& (0+255),f,b
   901  0000CC  D7FC               	goto	u2517
   902                           
   903                           ;main.c: 80: _delay((unsigned long)((10)*(64000000/4000.0)));
   904  0000CE  0ED0               	movlw	208
   905  0000D0  0100               	movlb	0	; () banked
   906  0000D2  6F8F               	movwf	??_main& (0+255),b
   907  0000D4  0ECA               	movlw	202
   908  0000D6                     u2527:
   909  0000D6  2EE8               	decfsz	wreg,f,c
   910  0000D8  D7FE               	goto	u2527
   911  0000DA  2F8F               	decfsz	??_main& (0+255),f,b
   912  0000DC  D7FC               	goto	u2527
   913                           
   914                           ;main.c: 81: _delay((unsigned long)((10)*(64000000/4000.0)));
   915  0000DE  0ED0               	movlw	208
   916  0000E0  0100               	movlb	0	; () banked
   917  0000E2  6F8F               	movwf	??_main& (0+255),b
   918  0000E4  0ECA               	movlw	202
   919  0000E6                     u2537:
   920  0000E6  2EE8               	decfsz	wreg,f,c
   921  0000E8  D7FE               	goto	u2537
   922  0000EA  2F8F               	decfsz	??_main& (0+255),f,b
   923  0000EC  D7FC               	goto	u2537
   924                           
   925                           ;main.c: 82: _delay((unsigned long)((10)*(64000000/4000.0)));
   926  0000EE  0ED0               	movlw	208
   927  0000F0  0100               	movlb	0	; () banked
   928  0000F2  6F8F               	movwf	??_main& (0+255),b
   929  0000F4  0ECA               	movlw	202
   930  0000F6                     u2547:
   931  0000F6  2EE8               	decfsz	wreg,f,c
   932  0000F8  D7FE               	goto	u2547
   933  0000FA  2F8F               	decfsz	??_main& (0+255),f,b
   934  0000FC  D7FC               	goto	u2547
   935                           
   936                           ;main.c: 86: ConfigureGPIO();
   937  0000FE  EC1E  F00F         	call	_ConfigureGPIO	;wreg free
   938                           
   939                           ;main.c: 89: ECANInitialize();
   940  000102  ECA5  F00C         	call	_ECANInitialize	;wreg free
   941                           
   942                           ;main.c: 91: ECANFiltersInit();
   943  000106  EC08  F00D         	call	_ECANFiltersInit	;wreg free
   944                           
   945                           ;main.c: 94: ConfigureTimers();
   946  00010A  EC32  F010         	call	_ConfigureTimers	;wreg free
   947                           
   948                           ;main.c: 103: CANTxFifoInit();
   949  00010E  ECBC  F00F         	call	_CANTxFifoInit	;wreg free
   950                           
   951                           ;main.c: 104: CANRxFifoInit();
   952  000112  ECDD  F00F         	call	_CANRxFifoInit	;wreg free
   953                           
   954                           ;main.c: 106: TickCounter=0;
   955  000116  0100               	movlb	0	; () banked
   956  000118  6F8F               	movwf	??_main& (0+255),b
   957  00011A  0E00               	movlw	0
   958  00011C  0100               	movlb	0	; () banked
   959  00011E  0100               	movlb	0	; () banked
   960  000120  6FC4               	movwf	_TickCounter& (0+255),b
   961  000122  0100               	movlb	0	; () banked
   962  000124  518F               	movf	??_main& (0+255),w,b
   963                           
   964                           ; BSR set to: 0
   965                           ;main.c: 108: MotorOrder=0;
   966  000126  0100               	movlb	0	; () banked
   967  000128  6F8F               	movwf	??_main& (0+255),b
   968  00012A  0E00               	movlw	0
   969  00012C  0100               	movlb	0	; () banked
   970  00012E  0100               	movlb	0	; () banked
   971  000130  6F98               	movwf	main@MotorOrder& (0+255),b
   972  000132  0100               	movlb	0	; () banked
   973  000134  518F               	movf	??_main& (0+255),w,b
   974                           
   975                           ; BSR set to: 0
   976                           ;main.c: 109: NewReqOrder=0;
   977  000136  0100               	movlb	0	; () banked
   978  000138  6F8F               	movwf	??_main& (0+255),b
   979  00013A  0E00               	movlw	0
   980  00013C  0100               	movlb	0	; () banked
   981  00013E  0100               	movlb	0	; () banked
   982  000140  6F99               	movwf	main@NewReqOrder& (0+255),b
   983  000142  0100               	movlb	0	; () banked
   984  000144  518F               	movf	??_main& (0+255),w,b
   985                           
   986                           ; BSR set to: 0
   987                           ;main.c: 111: MotorReqPosition=0;
   988  000146  0100               	movlb	0	; () banked
   989  000148  6F8F               	movwf	??_main& (0+255),b
   990  00014A  0E00               	movlw	0
   991  00014C  0100               	movlb	0	; () banked
   992  00014E  0100               	movlb	0	; () banked
   993  000150  6F9A               	movwf	main@MotorReqPosition& (0+255),b
   994  000152  0100               	movlb	0	; () banked
   995  000154  518F               	movf	??_main& (0+255),w,b
   996                           
   997                           ; BSR set to: 0
   998                           ;main.c: 112: NewReqPosition=0;
   999  000156  0100               	movlb	0	; () banked
  1000  000158  6F8F               	movwf	??_main& (0+255),b
  1001  00015A  0E00               	movlw	0
  1002  00015C  0100               	movlb	0	; () banked
  1003  00015E  0100               	movlb	0	; () banked
  1004  000160  6F96               	movwf	main@NewReqPosition& (0+255),b
  1005  000162  0100               	movlb	0	; () banked
  1006  000164  518F               	movf	??_main& (0+255),w,b
  1007                           
  1008                           ; BSR set to: 0
  1009                           ;main.c: 114: MotorMoving=0;
  1010  000166  0100               	movlb	0	; () banked
  1011  000168  6F8F               	movwf	??_main& (0+255),b
  1012  00016A  0E00               	movlw	0
  1013  00016C  0100               	movlb	0	; () banked
  1014  00016E  0100               	movlb	0	; () banked
  1015  000170  6F97               	movwf	main@MotorMoving& (0+255),b
  1016  000172  0100               	movlb	0	; () banked
  1017  000174  518F               	movf	??_main& (0+255),w,b
  1018                           
  1019                           ; BSR set to: 0
  1020                           ;main.c: 128: ConfigureInterrupts();
  1021  000176  EC4C  F00F         	call	_ConfigureInterrupts	;wreg free
  1022  00017A                     l2243:
  1023                           
  1024                           ;main.c: 136: {
  1025                           ;main.c: 142: if(TickCounter>1)
  1026  00017A  0E01               	movlw	1
  1027  00017C  0100               	movlb	0	; () banked
  1028  00017E  0100               	movlb	0	; () banked
  1029  000180  65C4               	cpfsgt	_TickCounter& (0+255),b
  1030  000182  D123               	goto	l2313
  1031                           
  1032                           ; BSR set to: 0
  1033  000184  0004               	clrwdt		;# 
  1034                           
  1035                           ;main.c: 146: UpdateBoardVoltages();
  1036  000186  EC0E  F004         	call	_UpdateBoardVoltages	;wreg free
  1037                           
  1038                           ;main.c: 148: TickCounter=0;
  1039  00018A  0100               	movlb	0	; () banked
  1040  00018C  6F8F               	movwf	??_main& (0+255),b
  1041  00018E  0E00               	movlw	0
  1042  000190  0100               	movlb	0	; () banked
  1043  000192  0100               	movlb	0	; () banked
  1044  000194  6FC4               	movwf	_TickCounter& (0+255),b
  1045  000196  0100               	movlb	0	; () banked
  1046  000198  518F               	movf	??_main& (0+255),w,b
  1047                           
  1048                           ; BSR set to: 0
  1049                           ;main.c: 151: TempVar =(PORTA>>1) & 0b111;
  1050  00019A  90D8               	bcf	status,0,c
  1051  00019C  3080               	rrcf	3968,w,c	;volatile
  1052  00019E  0B07               	andlw	7
  1053  0001A0  0100               	movlb	0	; () banked
  1054  0001A2  0100               	movlb	0	; () banked
  1055  0001A4  6F9B               	movwf	main@TempVar& (0+255),b
  1056                           
  1057                           ; BSR set to: 0
  1058                           ;main.c: 152: TempVar = TempVar | ((PORTA>>2)&0b1000);
  1059  0001A6  4080               	rrncf	3968,w,c	;volatile
  1060  0001A8  42E8               	rrncf	wreg,f,c
  1061  0001AA  0B3F               	andlw	63
  1062  0001AC  0B08               	andlw	8
  1063  0001AE  0100               	movlb	0	; () banked
  1064  0001B0  0100               	movlb	0	; () banked
  1065  0001B2  119B               	iorwf	main@TempVar& (0+255),w,b
  1066  0001B4  0100               	movlb	0	; () banked
  1067  0001B6  0100               	movlb	0	; () banked
  1068  0001B8  6F9B               	movwf	main@TempVar& (0+255),b
  1069                           
  1070                           ; BSR set to: 0
  1071                           ;main.c: 154: TempCANTxMsg.data_TX[0]=TempVar;
  1072  0001BA  C09B  F0AE         	movff	main@TempVar,main@TempCANTxMsg+4
  1073                           
  1074                           ; BSR set to: 0
  1075                           ;main.c: 156: TempCANTxMsg.dataLen= 1;
  1076  0001BE  0100               	movlb	0	; () banked
  1077  0001C0  6F8F               	movwf	??_main& (0+255),b
  1078  0001C2  0E01               	movlw	1
  1079  0001C4  0100               	movlb	0	; () banked
  1080  0001C6  0100               	movlb	0	; () banked
  1081  0001C8  6FB6               	movwf	(main@TempCANTxMsg+12)& (0+255),b
  1082  0001CA  0100               	movlb	0	; () banked
  1083  0001CC  518F               	movf	??_main& (0+255),w,b
  1084                           
  1085                           ; BSR set to: 0
  1086                           ;main.c: 157: TempCANTxMsg.id = (8 << 7 | 0 <<4 | 0x3 );
  1087  0001CE  0E03               	movlw	3
  1088  0001D0  0100               	movlb	0	; () banked
  1089  0001D2  0100               	movlb	0	; () banked
  1090  0001D4  6FAA               	movwf	main@TempCANTxMsg& (0+255),b
  1091  0001D6  0E04               	movlw	4
  1092  0001D8  0100               	movlb	0	; () banked
  1093  0001DA  6FAB               	movwf	(main@TempCANTxMsg+1)& (0+255),b
  1094  0001DC  0E00               	movlw	0
  1095  0001DE  0100               	movlb	0	; () banked
  1096  0001E0  6FAC               	movwf	(main@TempCANTxMsg+2)& (0+255),b
  1097  0001E2  0E00               	movlw	0
  1098  0001E4  0100               	movlb	0	; () banked
  1099  0001E6  6FAD               	movwf	(main@TempCANTxMsg+3)& (0+255),b
  1100                           
  1101                           ; BSR set to: 0
  1102                           ;main.c: 158: TempCANTxMsg.flags = ECAN_TX_STD_FRAME;
  1103  0001E8  0100               	movlb	0	; () banked
  1104  0001EA  6F8F               	movwf	??_main& (0+255),b
  1105  0001EC  0E00               	movlw	0
  1106  0001EE  0100               	movlb	0	; () banked
  1107  0001F0  0100               	movlb	0	; () banked
  1108  0001F2  6FB7               	movwf	(main@TempCANTxMsg+13)& (0+255),b
  1109  0001F4  0100               	movlb	0	; () banked
  1110  0001F6  518F               	movf	??_main& (0+255),w,b
  1111                           
  1112                           ; BSR set to: 0
  1113                           ;main.c: 159: PutCANTxFifo(TempCANTxMsg);
  1114  0001F8  EE20  F0AA         	lfsr	2,main@TempCANTxMsg
  1115  0001FC  EE10  F060         	lfsr	1,PutCANTxFifo@PutMessage
  1116  000200  0E0E               	movlw	14
  1117  000202                     u1411:
  1118  000202  CFDE FFE6          	movff	postinc2,postinc1
  1119  000206  2EE8               	decfsz	wreg,f,c
  1120  000208  D7FC               	goto	u1411
  1121  00020A  EC17  F00E         	call	_PutCANTxFifo	;wreg free
  1122                           
  1123                           ;main.c: 164: if(MotorOrder==0 && NewReqOrder==1)
  1124  00020E  0100               	movlb	0	; () banked
  1125  000210  0100               	movlb	0	; () banked
  1126  000212  6798               	tstfsz	main@MotorOrder& (0+255),b
  1127  000214  D017               	goto	l2273
  1128                           
  1129                           ; BSR set to: 0
  1130  000216  0100               	movlb	0	; () banked
  1131  000218  0100               	movlb	0	; () banked
  1132  00021A  0599               	decf	main@NewReqOrder& (0+255),w,b
  1133  00021C  A4D8               	btfss	status,2,c
  1134  00021E  D012               	goto	l2273
  1135                           
  1136                           ; BSR set to: 0
  1137                           ;main.c: 165: {
  1138                           ;main.c: 166: LATCbits.LATC2=0;
  1139  000220  948B               	bcf	3979,2,c	;volatile
  1140                           
  1141                           ;main.c: 167: LATCbits.LATC6=0;
  1142  000222  9C8B               	bcf	3979,6,c	;volatile
  1143                           
  1144                           ; BSR set to: 0
  1145                           ;main.c: 168: NewReqOrder=0;
  1146  000224  0100               	movlb	0	; () banked
  1147  000226  6F8F               	movwf	??_main& (0+255),b
  1148  000228  0E00               	movlw	0
  1149  00022A  0100               	movlb	0	; () banked
  1150  00022C  0100               	movlb	0	; () banked
  1151  00022E  6F99               	movwf	main@NewReqOrder& (0+255),b
  1152  000230  0100               	movlb	0	; () banked
  1153  000232  518F               	movf	??_main& (0+255),w,b
  1154                           
  1155                           ;main.c: 169: MotorMoving=0;
  1156  000234  0100               	movlb	0	; () banked
  1157  000236  6F8F               	movwf	??_main& (0+255),b
  1158  000238  0E00               	movlw	0
  1159  00023A  0100               	movlb	0	; () banked
  1160  00023C  0100               	movlb	0	; () banked
  1161  00023E  6F97               	movwf	main@MotorMoving& (0+255),b
  1162  000240  0100               	movlb	0	; () banked
  1163  000242  518F               	movf	??_main& (0+255),w,b
  1164  000244                     l2273:
  1165                           
  1166                           ; BSR set to: 0
  1167                           ;main.c: 170: }
  1168                           ;main.c: 171: if(MotorOrder==2 && NewReqOrder==1)
  1169  000244  0100               	movlb	0	; () banked
  1170  000246  0100               	movlb	0	; () banked
  1171  000248  5198               	movf	main@MotorOrder& (0+255),w,b
  1172  00024A  0A02               	xorlw	2
  1173  00024C  A4D8               	btfss	status,2,c
  1174  00024E  D017               	goto	l2281
  1175                           
  1176                           ; BSR set to: 0
  1177  000250  0100               	movlb	0	; () banked
  1178  000252  0100               	movlb	0	; () banked
  1179  000254  0599               	decf	main@NewReqOrder& (0+255),w,b
  1180  000256  A4D8               	btfss	status,2,c
  1181  000258  D012               	goto	l2281
  1182                           
  1183                           ; BSR set to: 0
  1184                           ;main.c: 172: {
  1185                           ;main.c: 173: LATCbits.LATC2=1;
  1186  00025A  848B               	bsf	3979,2,c	;volatile
  1187                           
  1188                           ;main.c: 174: LATCbits.LATC6=0;
  1189  00025C  9C8B               	bcf	3979,6,c	;volatile
  1190                           
  1191                           ; BSR set to: 0
  1192                           ;main.c: 175: NewReqOrder=0;
  1193  00025E  0100               	movlb	0	; () banked
  1194  000260  6F8F               	movwf	??_main& (0+255),b
  1195  000262  0E00               	movlw	0
  1196  000264  0100               	movlb	0	; () banked
  1197  000266  0100               	movlb	0	; () banked
  1198  000268  6F99               	movwf	main@NewReqOrder& (0+255),b
  1199  00026A  0100               	movlb	0	; () banked
  1200  00026C  518F               	movf	??_main& (0+255),w,b
  1201                           
  1202                           ;main.c: 176: MotorMoving=1;
  1203  00026E  0100               	movlb	0	; () banked
  1204  000270  6F8F               	movwf	??_main& (0+255),b
  1205  000272  0E01               	movlw	1
  1206  000274  0100               	movlb	0	; () banked
  1207  000276  0100               	movlb	0	; () banked
  1208  000278  6F97               	movwf	main@MotorMoving& (0+255),b
  1209  00027A  0100               	movlb	0	; () banked
  1210  00027C  518F               	movf	??_main& (0+255),w,b
  1211  00027E                     l2281:
  1212                           
  1213                           ; BSR set to: 0
  1214                           ;main.c: 177: }
  1215                           ;main.c: 178: if(MotorOrder==1 && NewReqOrder==1)
  1216  00027E  0100               	movlb	0	; () banked
  1217  000280  0100               	movlb	0	; () banked
  1218  000282  0598               	decf	main@MotorOrder& (0+255),w,b
  1219  000284  A4D8               	btfss	status,2,c
  1220  000286  D017               	goto	l2289
  1221                           
  1222                           ; BSR set to: 0
  1223  000288  0100               	movlb	0	; () banked
  1224  00028A  0100               	movlb	0	; () banked
  1225  00028C  0599               	decf	main@NewReqOrder& (0+255),w,b
  1226  00028E  A4D8               	btfss	status,2,c
  1227  000290  D012               	goto	l2289
  1228                           
  1229                           ; BSR set to: 0
  1230                           ;main.c: 179: {
  1231                           ;main.c: 180: LATCbits.LATC2=0;
  1232  000292  948B               	bcf	3979,2,c	;volatile
  1233                           
  1234                           ;main.c: 181: LATCbits.LATC6=1;
  1235  000294  8C8B               	bsf	3979,6,c	;volatile
  1236                           
  1237                           ; BSR set to: 0
  1238                           ;main.c: 182: NewReqOrder=0;
  1239  000296  0100               	movlb	0	; () banked
  1240  000298  6F8F               	movwf	??_main& (0+255),b
  1241  00029A  0E00               	movlw	0
  1242  00029C  0100               	movlb	0	; () banked
  1243  00029E  0100               	movlb	0	; () banked
  1244  0002A0  6F99               	movwf	main@NewReqOrder& (0+255),b
  1245  0002A2  0100               	movlb	0	; () banked
  1246  0002A4  518F               	movf	??_main& (0+255),w,b
  1247                           
  1248                           ;main.c: 183: MotorMoving=1;
  1249  0002A6  0100               	movlb	0	; () banked
  1250  0002A8  6F8F               	movwf	??_main& (0+255),b
  1251  0002AA  0E01               	movlw	1
  1252  0002AC  0100               	movlb	0	; () banked
  1253  0002AE  0100               	movlb	0	; () banked
  1254  0002B0  6F97               	movwf	main@MotorMoving& (0+255),b
  1255  0002B2  0100               	movlb	0	; () banked
  1256  0002B4  518F               	movf	??_main& (0+255),w,b
  1257  0002B6                     l2289:
  1258                           
  1259                           ; BSR set to: 0
  1260                           ;main.c: 184: }
  1261                           ;main.c: 188: if(NewReqPosition==1)
  1262  0002B6  0100               	movlb	0	; () banked
  1263  0002B8  0100               	movlb	0	; () banked
  1264  0002BA  0596               	decf	main@NewReqPosition& (0+255),w,b
  1265  0002BC  A4D8               	btfss	status,2,c
  1266  0002BE  D085               	goto	l2313
  1267                           
  1268                           ; BSR set to: 0
  1269                           ;main.c: 189: {
  1270                           ;main.c: 190: TempVar = GetActuatorPosition();
  1271  0002C0  EC61  F00E         	call	_GetActuatorPosition	;wreg free
  1272  0002C4  0100               	movlb	0	; () banked
  1273  0002C6  0100               	movlb	0	; () banked
  1274  0002C8  6F9B               	movwf	main@TempVar& (0+255),b
  1275                           
  1276                           ; BSR set to: 0
  1277                           ;main.c: 192: if(TempVar>MotorReqPosition)
  1278  0002CA  0100               	movlb	0	; () banked
  1279  0002CC  0100               	movlb	0	; () banked
  1280  0002CE  519B               	movf	main@TempVar& (0+255),w,b
  1281  0002D0  0100               	movlb	0	; () banked
  1282  0002D2  0100               	movlb	0	; () banked
  1283  0002D4  5D9A               	subwf	main@MotorReqPosition& (0+255),w,b
  1284  0002D6  B0D8               	btfsc	status,0,c
  1285  0002D8  D00A               	goto	l2299
  1286                           
  1287                           ; BSR set to: 0
  1288                           ;main.c: 193: {
  1289                           ;main.c: 194: LATCbits.LATC2=0;
  1290  0002DA  948B               	bcf	3979,2,c	;volatile
  1291                           
  1292                           ;main.c: 195: LATCbits.LATC6=1;
  1293  0002DC  8C8B               	bsf	3979,6,c	;volatile
  1294                           
  1295                           ; BSR set to: 0
  1296                           ;main.c: 196: MotorMoving=1;
  1297  0002DE  0100               	movlb	0	; () banked
  1298  0002E0  6F8F               	movwf	??_main& (0+255),b
  1299  0002E2  0E01               	movlw	1
  1300  0002E4  0100               	movlb	0	; () banked
  1301  0002E6  0100               	movlb	0	; () banked
  1302  0002E8  6F97               	movwf	main@MotorMoving& (0+255),b
  1303  0002EA  0100               	movlb	0	; () banked
  1304  0002EC  518F               	movf	??_main& (0+255),w,b
  1305  0002EE                     l2299:
  1306                           
  1307                           ; BSR set to: 0
  1308                           ;main.c: 197: }
  1309                           ;main.c: 198: if(TempVar<MotorReqPosition)
  1310  0002EE  0100               	movlb	0	; () banked
  1311  0002F0  0100               	movlb	0	; () banked
  1312  0002F2  519A               	movf	main@MotorReqPosition& (0+255),w,b
  1313  0002F4  0100               	movlb	0	; () banked
  1314  0002F6  0100               	movlb	0	; () banked
  1315  0002F8  5D9B               	subwf	main@TempVar& (0+255),w,b
  1316  0002FA  B0D8               	btfsc	status,0,c
  1317  0002FC  D00A               	goto	l2305
  1318                           
  1319                           ; BSR set to: 0
  1320                           ;main.c: 199: {
  1321                           ;main.c: 200: LATCbits.LATC2=1;
  1322  0002FE  848B               	bsf	3979,2,c	;volatile
  1323                           
  1324                           ;main.c: 201: LATCbits.LATC6=0;
  1325  000300  9C8B               	bcf	3979,6,c	;volatile
  1326                           
  1327                           ; BSR set to: 0
  1328                           ;main.c: 202: MotorMoving=1;
  1329  000302  0100               	movlb	0	; () banked
  1330  000304  6F8F               	movwf	??_main& (0+255),b
  1331  000306  0E01               	movlw	1
  1332  000308  0100               	movlb	0	; () banked
  1333  00030A  0100               	movlb	0	; () banked
  1334  00030C  6F97               	movwf	main@MotorMoving& (0+255),b
  1335  00030E  0100               	movlb	0	; () banked
  1336  000310  518F               	movf	??_main& (0+255),w,b
  1337  000312                     l2305:
  1338                           
  1339                           ; BSR set to: 0
  1340                           ;main.c: 203: }
  1341                           ;main.c: 204: if(TempVar>(MotorReqPosition-1) & TempVar<(MotorReqPosition+1))
  1342  000312  0100               	movlb	0	; () banked
  1343  000314  0100               	movlb	0	; () banked
  1344  000316  519B               	movf	main@TempVar& (0+255),w,b
  1345  000318  0100               	movlb	0	; () banked
  1346  00031A  6F8F               	movwf	??_main& (0+255),b
  1347  00031C  6B90               	clrf	(??_main+1)& (0+255),b
  1348  00031E  0EFF               	movlw	255
  1349  000320  0100               	movlb	0	; () banked
  1350  000322  6F91               	movwf	(??_main+2)& (0+255),b
  1351  000324  0EFF               	movlw	255
  1352  000326  6F92               	movwf	(??_main+3)& (0+255),b
  1353  000328  0100               	movlb	0	; () banked
  1354  00032A  0100               	movlb	0	; () banked
  1355  00032C  519A               	movf	main@MotorReqPosition& (0+255),w,b
  1356  00032E  0100               	movlb	0	; () banked
  1357  000330  6F93               	movwf	(??_main+4)& (0+255),b
  1358  000332  6B94               	clrf	(??_main+5)& (0+255),b
  1359  000334  0100               	movlb	0	; () banked
  1360  000336  5191               	movf	(??_main+2)& (0+255),w,b
  1361  000338  0100               	movlb	0	; () banked
  1362  00033A  2793               	addwf	(??_main+4)& (0+255),f,b
  1363  00033C  0100               	movlb	0	; () banked
  1364  00033E  5192               	movf	(??_main+3)& (0+255),w,b
  1365  000340  0100               	movlb	0	; () banked
  1366  000342  2394               	addwfc	(??_main+5)& (0+255),f,b
  1367  000344  0100               	movlb	0	; () banked
  1368  000346  5194               	movf	(??_main+5)& (0+255),w,b
  1369  000348  0A80               	xorlw	128
  1370  00034A  0100               	movlb	0	; () banked
  1371  00034C  6F95               	movwf	(??_main+6)& (0+255),b
  1372  00034E  0100               	movlb	0	; () banked
  1373  000350  518F               	movf	??_main& (0+255),w,b
  1374  000352  0100               	movlb	0	; () banked
  1375  000354  5D93               	subwf	(??_main+4)& (0+255),w,b
  1376  000356  0100               	movlb	0	; () banked
  1377  000358  5190               	movf	(??_main+1)& (0+255),w,b
  1378  00035A  0A80               	xorlw	128
  1379  00035C  0100               	movlb	0	; () banked
  1380  00035E  5995               	subwfb	(??_main+6)& (0+255),w,b
  1381  000360  B0D8               	btfsc	status,0,c
  1382  000362  D033               	goto	l2313
  1383                           
  1384                           ; BSR set to: 0
  1385  000364  0100               	movlb	0	; () banked
  1386  000366  0100               	movlb	0	; () banked
  1387  000368  519A               	movf	main@MotorReqPosition& (0+255),w,b
  1388  00036A  0100               	movlb	0	; () banked
  1389  00036C  6F8F               	movwf	??_main& (0+255),b
  1390  00036E  6B90               	clrf	(??_main+1)& (0+255),b
  1391  000370  0E01               	movlw	1
  1392  000372  0100               	movlb	0	; () banked
  1393  000374  278F               	addwf	??_main& (0+255),f,b
  1394  000376  0E00               	movlw	0
  1395  000378  2390               	addwfc	(??_main+1)& (0+255),f,b
  1396  00037A  0100               	movlb	0	; () banked
  1397  00037C  0100               	movlb	0	; () banked
  1398  00037E  519B               	movf	main@TempVar& (0+255),w,b
  1399  000380  0100               	movlb	0	; () banked
  1400  000382  6F91               	movwf	(??_main+2)& (0+255),b
  1401  000384  6B92               	clrf	(??_main+3)& (0+255),b
  1402  000386  0100               	movlb	0	; () banked
  1403  000388  5192               	movf	(??_main+3)& (0+255),w,b
  1404  00038A  0A80               	xorlw	128
  1405  00038C  0100               	movlb	0	; () banked
  1406  00038E  6F93               	movwf	(??_main+4)& (0+255),b
  1407  000390  0100               	movlb	0	; () banked
  1408  000392  518F               	movf	??_main& (0+255),w,b
  1409  000394  0100               	movlb	0	; () banked
  1410  000396  5D91               	subwf	(??_main+2)& (0+255),w,b
  1411  000398  0100               	movlb	0	; () banked
  1412  00039A  5190               	movf	(??_main+1)& (0+255),w,b
  1413  00039C  0A80               	xorlw	128
  1414  00039E  0100               	movlb	0	; () banked
  1415  0003A0  5993               	subwfb	(??_main+4)& (0+255),w,b
  1416  0003A2  B0D8               	btfsc	status,0,c
  1417  0003A4  D012               	goto	l2313
  1418                           
  1419                           ; BSR set to: 0
  1420                           ;main.c: 205: {
  1421                           ;main.c: 206: LATCbits.LATC2=0;
  1422  0003A6  948B               	bcf	3979,2,c	;volatile
  1423                           
  1424                           ;main.c: 207: LATCbits.LATC6=0;
  1425  0003A8  9C8B               	bcf	3979,6,c	;volatile
  1426                           
  1427                           ; BSR set to: 0
  1428                           ;main.c: 208: MotorMoving=0;
  1429  0003AA  0100               	movlb	0	; () banked
  1430  0003AC  6F8F               	movwf	??_main& (0+255),b
  1431  0003AE  0E00               	movlw	0
  1432  0003B0  0100               	movlb	0	; () banked
  1433  0003B2  0100               	movlb	0	; () banked
  1434  0003B4  6F97               	movwf	main@MotorMoving& (0+255),b
  1435  0003B6  0100               	movlb	0	; () banked
  1436  0003B8  518F               	movf	??_main& (0+255),w,b
  1437                           
  1438                           ;main.c: 209: NewReqPosition=0;
  1439  0003BA  0100               	movlb	0	; () banked
  1440  0003BC  6F8F               	movwf	??_main& (0+255),b
  1441  0003BE  0E00               	movlw	0
  1442  0003C0  0100               	movlb	0	; () banked
  1443  0003C2  0100               	movlb	0	; () banked
  1444  0003C4  6F96               	movwf	main@NewReqPosition& (0+255),b
  1445  0003C6  0100               	movlb	0	; () banked
  1446  0003C8  518F               	movf	??_main& (0+255),w,b
  1447  0003CA                     l2313:
  1448                           
  1449                           ; BSR set to: 0
  1450                           ;main.c: 210: }
  1451                           ;main.c: 211: }
  1452                           ;main.c: 213: }
  1453                           ;main.c: 225: if(!CANRxFifo.FifoEmpty && !CANTxFifo.Fifofull)
  1454  0003CA  0102               	movlb	2	; () banked
  1455  0003CC  0102               	movlb	2	; () banked
  1456  0003CE  678F               	tstfsz	(_CANRxFifo+143)& (0+255),b
  1457  0003D0  D1FC               	goto	l86
  1458                           
  1459                           ; BSR set to: 2
  1460  0003D2  0101               	movlb	1	; () banked
  1461  0003D4  0101               	movlb	1	; () banked
  1462  0003D6  678E               	tstfsz	(_CANTxFifo+142)& (0+255),b
  1463  0003D8  D1F8               	goto	l86
  1464                           
  1465                           ; BSR set to: 1
  1466                           ;main.c: 226: {
  1467                           ;main.c: 227: TempCANRxMsg = GetCANRxFifo();
  1468  0003DA  EC37  F00C         	call	_GetCANRxFifo	;wreg free
  1469  0003DE  EE20  F09C         	lfsr	2,main@TempCANRxMsg
  1470  0003E2  0E0E               	movlw	14
  1471  0003E4                     u1551:
  1472  0003E4  CFEE FFDE          	movff	postinc0,postinc2
  1473  0003E8  2EE8               	decfsz	wreg,f,c
  1474  0003EA  D7FC               	goto	u1551
  1475                           
  1476                           ;main.c: 231: if( TempCANRxMsg.id == (8 << 7 | 0 <<4 | 0x5 ) && TempCANRxMsg.flags== ECA
      +                          N_RX_RTR_FRAME )
  1477  0003EC  0100               	movlb	0	; () banked
  1478  0003EE  0100               	movlb	0	; () banked
  1479  0003F0  519D               	movf	(main@TempCANRxMsg+1)& (0+255),w,b
  1480  0003F2  0A04               	xorlw	4
  1481  0003F4  0E05               	movlw	5
  1482  0003F6  B4D8               	btfsc	status,2,c
  1483  0003F8  199C               	xorwf	main@TempCANRxMsg& (0+255),w,b
  1484  0003FA  119E               	iorwf	(main@TempCANRxMsg+2)& (0+255),w,b
  1485  0003FC  119F               	iorwf	(main@TempCANRxMsg+3)& (0+255),w,b
  1486  0003FE  A4D8               	btfss	status,2,c
  1487  000400  D03E               	goto	l2331
  1488                           
  1489                           ; BSR set to: 0
  1490  000402  0100               	movlb	0	; () banked
  1491  000404  0100               	movlb	0	; () banked
  1492  000406  51A9               	movf	(main@TempCANRxMsg+13)& (0+255),w,b
  1493  000408  0A40               	xorlw	64
  1494  00040A  A4D8               	btfss	status,2,c
  1495  00040C  D038               	goto	l2331
  1496                           
  1497                           ; BSR set to: 0
  1498                           ;main.c: 232: {
  1499                           ;main.c: 233: TempCANTxMsg.data_TX[0]=1;
  1500  00040E  0100               	movlb	0	; () banked
  1501  000410  6F8F               	movwf	??_main& (0+255),b
  1502  000412  0E01               	movlw	1
  1503  000414  0100               	movlb	0	; () banked
  1504  000416  0100               	movlb	0	; () banked
  1505  000418  6FAE               	movwf	(main@TempCANTxMsg+4)& (0+255),b
  1506  00041A  0100               	movlb	0	; () banked
  1507  00041C  518F               	movf	??_main& (0+255),w,b
  1508                           
  1509                           ;main.c: 234: TempCANTxMsg.data_TX[1]=1;
  1510  00041E  0100               	movlb	0	; () banked
  1511  000420  6F8F               	movwf	??_main& (0+255),b
  1512  000422  0E01               	movlw	1
  1513  000424  0100               	movlb	0	; () banked
  1514  000426  0100               	movlb	0	; () banked
  1515  000428  6FAF               	movwf	(main@TempCANTxMsg+5)& (0+255),b
  1516  00042A  0100               	movlb	0	; () banked
  1517  00042C  518F               	movf	??_main& (0+255),w,b
  1518                           
  1519                           ;main.c: 235: TempCANTxMsg.dataLen= 2;
  1520  00042E  0100               	movlb	0	; () banked
  1521  000430  6F8F               	movwf	??_main& (0+255),b
  1522  000432  0E02               	movlw	2
  1523  000434  0100               	movlb	0	; () banked
  1524  000436  0100               	movlb	0	; () banked
  1525  000438  6FB6               	movwf	(main@TempCANTxMsg+12)& (0+255),b
  1526  00043A  0100               	movlb	0	; () banked
  1527  00043C  518F               	movf	??_main& (0+255),w,b
  1528                           
  1529                           ; BSR set to: 0
  1530                           ;main.c: 236: TempCANTxMsg.id = (8 << 7 | 0 <<4 | 0x5 );
  1531  00043E  0E05               	movlw	5
  1532  000440  0100               	movlb	0	; () banked
  1533  000442  0100               	movlb	0	; () banked
  1534  000444  6FAA               	movwf	main@TempCANTxMsg& (0+255),b
  1535  000446  0E04               	movlw	4
  1536  000448  0100               	movlb	0	; () banked
  1537  00044A  6FAB               	movwf	(main@TempCANTxMsg+1)& (0+255),b
  1538  00044C  0E00               	movlw	0
  1539  00044E  0100               	movlb	0	; () banked
  1540  000450  6FAC               	movwf	(main@TempCANTxMsg+2)& (0+255),b
  1541  000452  0E00               	movlw	0
  1542  000454  0100               	movlb	0	; () banked
  1543  000456  6FAD               	movwf	(main@TempCANTxMsg+3)& (0+255),b
  1544                           
  1545                           ; BSR set to: 0
  1546                           ;main.c: 237: TempCANTxMsg.flags = ECAN_TX_STD_FRAME;
  1547  000458  0100               	movlb	0	; () banked
  1548  00045A  6F8F               	movwf	??_main& (0+255),b
  1549  00045C  0E00               	movlw	0
  1550  00045E  0100               	movlb	0	; () banked
  1551  000460  0100               	movlb	0	; () banked
  1552  000462  6FB7               	movwf	(main@TempCANTxMsg+13)& (0+255),b
  1553  000464  0100               	movlb	0	; () banked
  1554  000466  518F               	movf	??_main& (0+255),w,b
  1555                           
  1556                           ; BSR set to: 0
  1557                           ;main.c: 238: PutCANTxFifo(TempCANTxMsg);
  1558  000468  EE20  F0AA         	lfsr	2,main@TempCANTxMsg
  1559  00046C  EE10  F060         	lfsr	1,PutCANTxFifo@PutMessage
  1560  000470  0E0E               	movlw	14
  1561  000472                     u1581:
  1562  000472  CFDE FFE6          	movff	postinc2,postinc1
  1563  000476  2EE8               	decfsz	wreg,f,c
  1564  000478  D7FC               	goto	u1581
  1565  00047A  EC17  F00E         	call	_PutCANTxFifo	;wreg free
  1566  00047E                     l2331:
  1567                           
  1568                           ;main.c: 239: }
  1569                           ;main.c: 243: if( TempCANRxMsg.id == (8 << 7 | 0 <<4 | 0x6 ) && TempCANRxMsg.flags== ECA
      +                          N_RX_RTR_FRAME )
  1570  00047E  0100               	movlb	0	; () banked
  1571  000480  0100               	movlb	0	; () banked
  1572  000482  519D               	movf	(main@TempCANRxMsg+1)& (0+255),w,b
  1573  000484  0A04               	xorlw	4
  1574  000486  0E06               	movlw	6
  1575  000488  B4D8               	btfsc	status,2,c
  1576  00048A  199C               	xorwf	main@TempCANRxMsg& (0+255),w,b
  1577  00048C  119E               	iorwf	(main@TempCANRxMsg+2)& (0+255),w,b
  1578  00048E  119F               	iorwf	(main@TempCANRxMsg+3)& (0+255),w,b
  1579  000490  A4D8               	btfss	status,2,c
  1580  000492  D05A               	goto	l2351
  1581                           
  1582                           ; BSR set to: 0
  1583  000494  0100               	movlb	0	; () banked
  1584  000496  0100               	movlb	0	; () banked
  1585  000498  51A9               	movf	(main@TempCANRxMsg+13)& (0+255),w,b
  1586  00049A  0A40               	xorlw	64
  1587  00049C  A4D8               	btfss	status,2,c
  1588  00049E  D054               	goto	l2351
  1589                           
  1590                           ; BSR set to: 0
  1591                           ;main.c: 244: {
  1592                           ;main.c: 245: TempCANTxMsg.data_TX[0]=(unsigned char)(BoardVoltage[0] & 0x00FF);
  1593  0004A0  C0B8  F0AE         	movff	_BoardVoltage,main@TempCANTxMsg+4
  1594                           
  1595                           ; BSR set to: 0
  1596                           ;main.c: 246: TempCANTxMsg.data_TX[1]=(unsigned char)((BoardVoltage[0] & 0xFF00)>>8);
  1597  0004A4  0100               	movlb	0	; () banked
  1598  0004A6  C0B9  F08F         	movff	_BoardVoltage+1,??_main
  1599  0004AA  C08F  F090         	movff	??_main,??_main+1
  1600  0004AE  0100               	movlb	0	; () banked
  1601  0004B0  6B91               	clrf	(??_main+2)& (0+255),b
  1602  0004B2  0100               	movlb	0	; () banked
  1603  0004B4  5190               	movf	(??_main+1)& (0+255),w,b
  1604  0004B6  0100               	movlb	0	; () banked
  1605  0004B8  0100               	movlb	0	; () banked
  1606  0004BA  6FAF               	movwf	(main@TempCANTxMsg+5)& (0+255),b
  1607                           
  1608                           ; BSR set to: 0
  1609                           ;main.c: 247: TempCANTxMsg.data_TX[2]=(unsigned char)(BoardVoltage[1] & 0x00FF);
  1610  0004BC  C0BA  F0B0         	movff	_BoardVoltage+2,main@TempCANTxMsg+6
  1611                           
  1612                           ;main.c: 248: TempCANTxMsg.data_TX[3]=(unsigned char)((BoardVoltage[1] & 0xFF00)>>8);
  1613  0004C0  0100               	movlb	0	; () banked
  1614  0004C2  C0BB  F08F         	movff	_BoardVoltage+3,??_main
  1615  0004C6  C08F  F090         	movff	??_main,??_main+1
  1616  0004CA  0100               	movlb	0	; () banked
  1617  0004CC  6B91               	clrf	(??_main+2)& (0+255),b
  1618  0004CE  0100               	movlb	0	; () banked
  1619  0004D0  5190               	movf	(??_main+1)& (0+255),w,b
  1620  0004D2  0100               	movlb	0	; () banked
  1621  0004D4  0100               	movlb	0	; () banked
  1622  0004D6  6FB1               	movwf	(main@TempCANTxMsg+7)& (0+255),b
  1623                           
  1624                           ; BSR set to: 0
  1625                           ;main.c: 249: TempCANTxMsg.data_TX[4]=(unsigned char)(BoardVoltage[2] & 0x00FF);
  1626  0004D8  C0BC  F0B2         	movff	_BoardVoltage+4,main@TempCANTxMsg+8
  1627                           
  1628                           ;main.c: 250: TempCANTxMsg.data_TX[5]=(unsigned char)((BoardVoltage[2] & 0xFF00)>>8);
  1629  0004DC  0100               	movlb	0	; () banked
  1630  0004DE  C0BD  F08F         	movff	_BoardVoltage+5,??_main
  1631  0004E2  C08F  F090         	movff	??_main,??_main+1
  1632  0004E6  0100               	movlb	0	; () banked
  1633  0004E8  6B91               	clrf	(??_main+2)& (0+255),b
  1634  0004EA  0100               	movlb	0	; () banked
  1635  0004EC  5190               	movf	(??_main+1)& (0+255),w,b
  1636  0004EE  0100               	movlb	0	; () banked
  1637  0004F0  0100               	movlb	0	; () banked
  1638  0004F2  6FB3               	movwf	(main@TempCANTxMsg+9)& (0+255),b
  1639                           
  1640                           ; BSR set to: 0
  1641                           ;main.c: 251: TempCANTxMsg.data_TX[6]=(unsigned char)(BoardVoltage[5] & 0x00FF);
  1642  0004F4  C0C2  F0B4         	movff	_BoardVoltage+10,main@TempCANTxMsg+10
  1643                           
  1644                           ; BSR set to: 0
  1645                           ;main.c: 253: TempCANTxMsg.dataLen= 7;
  1646  0004F8  0100               	movlb	0	; () banked
  1647  0004FA  6F8F               	movwf	??_main& (0+255),b
  1648  0004FC  0E07               	movlw	7
  1649  0004FE  0100               	movlb	0	; () banked
  1650  000500  0100               	movlb	0	; () banked
  1651  000502  6FB6               	movwf	(main@TempCANTxMsg+12)& (0+255),b
  1652  000504  0100               	movlb	0	; () banked
  1653  000506  518F               	movf	??_main& (0+255),w,b
  1654                           
  1655                           ; BSR set to: 0
  1656                           ;main.c: 254: TempCANTxMsg.id = (8 << 7 | 0 <<4 | 0x6 );
  1657  000508  0E06               	movlw	6
  1658  00050A  0100               	movlb	0	; () banked
  1659  00050C  0100               	movlb	0	; () banked
  1660  00050E  6FAA               	movwf	main@TempCANTxMsg& (0+255),b
  1661  000510  0E04               	movlw	4
  1662  000512  0100               	movlb	0	; () banked
  1663  000514  6FAB               	movwf	(main@TempCANTxMsg+1)& (0+255),b
  1664  000516  0E00               	movlw	0
  1665  000518  0100               	movlb	0	; () banked
  1666  00051A  6FAC               	movwf	(main@TempCANTxMsg+2)& (0+255),b
  1667  00051C  0E00               	movlw	0
  1668  00051E  0100               	movlb	0	; () banked
  1669  000520  6FAD               	movwf	(main@TempCANTxMsg+3)& (0+255),b
  1670                           
  1671                           ;main.c: 255: TempCANTxMsg.flags = ECAN_TX_STD_FRAME;
  1672  000522  0100               	movlb	0	; () banked
  1673  000524  6F8F               	movwf	??_main& (0+255),b
  1674  000526  0E00               	movlw	0
  1675  000528  0100               	movlb	0	; () banked
  1676  00052A  0100               	movlb	0	; () banked
  1677  00052C  6FB7               	movwf	(main@TempCANTxMsg+13)& (0+255),b
  1678  00052E  0100               	movlb	0	; () banked
  1679  000530  518F               	movf	??_main& (0+255),w,b
  1680                           
  1681                           ; BSR set to: 0
  1682                           ;main.c: 256: PutCANTxFifo(TempCANTxMsg);
  1683  000532  EE20  F0AA         	lfsr	2,main@TempCANTxMsg
  1684  000536  EE10  F060         	lfsr	1,PutCANTxFifo@PutMessage
  1685  00053A  0E0E               	movlw	14
  1686  00053C                     u1611:
  1687  00053C  CFDE FFE6          	movff	postinc2,postinc1
  1688  000540  2EE8               	decfsz	wreg,f,c
  1689  000542  D7FC               	goto	u1611
  1690  000544  EC17  F00E         	call	_PutCANTxFifo	;wreg free
  1691  000548                     l2351:
  1692                           
  1693                           ;main.c: 257: }
  1694                           ;main.c: 260: if( TempCANRxMsg.id == (8 << 7 | 0 <<4 | 0x7 ) && TempCANRxMsg.flags== ECA
      +                          N_RX_RTR_FRAME )
  1695  000548  0100               	movlb	0	; () banked
  1696  00054A  0100               	movlb	0	; () banked
  1697  00054C  519D               	movf	(main@TempCANRxMsg+1)& (0+255),w,b
  1698  00054E  0A04               	xorlw	4
  1699  000550  0E07               	movlw	7
  1700  000552  B4D8               	btfsc	status,2,c
  1701  000554  199C               	xorwf	main@TempCANRxMsg& (0+255),w,b
  1702  000556  119E               	iorwf	(main@TempCANRxMsg+2)& (0+255),w,b
  1703  000558  119F               	iorwf	(main@TempCANRxMsg+3)& (0+255),w,b
  1704  00055A  A4D8               	btfss	status,2,c
  1705  00055C  D04A               	goto	l2367
  1706                           
  1707                           ; BSR set to: 0
  1708  00055E  0100               	movlb	0	; () banked
  1709  000560  0100               	movlb	0	; () banked
  1710  000562  51A9               	movf	(main@TempCANRxMsg+13)& (0+255),w,b
  1711  000564  0A40               	xorlw	64
  1712  000566  A4D8               	btfss	status,2,c
  1713  000568  D044               	goto	l2367
  1714                           
  1715                           ; BSR set to: 0
  1716                           ;main.c: 261: {
  1717                           ;main.c: 262: TempCANTxMsg.data_TX[0]=(unsigned char)(BoardVoltage[3] & 0x00FF);
  1718  00056A  C0BE  F0AE         	movff	_BoardVoltage+6,main@TempCANTxMsg+4
  1719                           
  1720                           ; BSR set to: 0
  1721                           ;main.c: 263: TempCANTxMsg.data_TX[1]=(unsigned char)((BoardVoltage[3] & 0xFF00)>>8);
  1722  00056E  0100               	movlb	0	; () banked
  1723  000570  C0BF  F08F         	movff	_BoardVoltage+7,??_main
  1724  000574  C08F  F090         	movff	??_main,??_main+1
  1725  000578  0100               	movlb	0	; () banked
  1726  00057A  6B91               	clrf	(??_main+2)& (0+255),b
  1727  00057C  0100               	movlb	0	; () banked
  1728  00057E  5190               	movf	(??_main+1)& (0+255),w,b
  1729  000580  0100               	movlb	0	; () banked
  1730  000582  0100               	movlb	0	; () banked
  1731  000584  6FAF               	movwf	(main@TempCANTxMsg+5)& (0+255),b
  1732                           
  1733                           ; BSR set to: 0
  1734                           ;main.c: 264: TempCANTxMsg.data_TX[2]=(unsigned char)(BoardVoltage[4] & 0x00FF);
  1735  000586  C0C0  F0B0         	movff	_BoardVoltage+8,main@TempCANTxMsg+6
  1736                           
  1737                           ;main.c: 265: TempCANTxMsg.data_TX[3]=(unsigned char)((BoardVoltage[4] & 0xFF00)>>8);
  1738  00058A  0100               	movlb	0	; () banked
  1739  00058C  C0C1  F08F         	movff	_BoardVoltage+9,??_main
  1740  000590  C08F  F090         	movff	??_main,??_main+1
  1741  000594  0100               	movlb	0	; () banked
  1742  000596  6B91               	clrf	(??_main+2)& (0+255),b
  1743  000598  0100               	movlb	0	; () banked
  1744  00059A  5190               	movf	(??_main+1)& (0+255),w,b
  1745  00059C  0100               	movlb	0	; () banked
  1746  00059E  0100               	movlb	0	; () banked
  1747  0005A0  6FB1               	movwf	(main@TempCANTxMsg+7)& (0+255),b
  1748                           
  1749                           ; BSR set to: 0
  1750                           ;main.c: 267: TempCANTxMsg.dataLen= 4;
  1751  0005A2  0100               	movlb	0	; () banked
  1752  0005A4  6F8F               	movwf	??_main& (0+255),b
  1753  0005A6  0E04               	movlw	4
  1754  0005A8  0100               	movlb	0	; () banked
  1755  0005AA  0100               	movlb	0	; () banked
  1756  0005AC  6FB6               	movwf	(main@TempCANTxMsg+12)& (0+255),b
  1757  0005AE  0100               	movlb	0	; () banked
  1758  0005B0  518F               	movf	??_main& (0+255),w,b
  1759                           
  1760                           ; BSR set to: 0
  1761                           ;main.c: 268: TempCANTxMsg.id = (8 << 7 | 0 <<4 | 0x7 );
  1762  0005B2  0E07               	movlw	7
  1763  0005B4  0100               	movlb	0	; () banked
  1764  0005B6  0100               	movlb	0	; () banked
  1765  0005B8  6FAA               	movwf	main@TempCANTxMsg& (0+255),b
  1766  0005BA  0E04               	movlw	4
  1767  0005BC  0100               	movlb	0	; () banked
  1768  0005BE  6FAB               	movwf	(main@TempCANTxMsg+1)& (0+255),b
  1769  0005C0  0E00               	movlw	0
  1770  0005C2  0100               	movlb	0	; () banked
  1771  0005C4  6FAC               	movwf	(main@TempCANTxMsg+2)& (0+255),b
  1772  0005C6  0E00               	movlw	0
  1773  0005C8  0100               	movlb	0	; () banked
  1774  0005CA  6FAD               	movwf	(main@TempCANTxMsg+3)& (0+255),b
  1775                           
  1776                           ;main.c: 269: TempCANTxMsg.flags = ECAN_TX_STD_FRAME;
  1777  0005CC  0100               	movlb	0	; () banked
  1778  0005CE  6F8F               	movwf	??_main& (0+255),b
  1779  0005D0  0E00               	movlw	0
  1780  0005D2  0100               	movlb	0	; () banked
  1781  0005D4  0100               	movlb	0	; () banked
  1782  0005D6  6FB7               	movwf	(main@TempCANTxMsg+13)& (0+255),b
  1783  0005D8  0100               	movlb	0	; () banked
  1784  0005DA  518F               	movf	??_main& (0+255),w,b
  1785                           
  1786                           ; BSR set to: 0
  1787                           ;main.c: 270: PutCANTxFifo(TempCANTxMsg);
  1788  0005DC  EE20  F0AA         	lfsr	2,main@TempCANTxMsg
  1789  0005E0  EE10  F060         	lfsr	1,PutCANTxFifo@PutMessage
  1790  0005E4  0E0E               	movlw	14
  1791  0005E6                     u1641:
  1792  0005E6  CFDE FFE6          	movff	postinc2,postinc1
  1793  0005EA  2EE8               	decfsz	wreg,f,c
  1794  0005EC  D7FC               	goto	u1641
  1795  0005EE  EC17  F00E         	call	_PutCANTxFifo	;wreg free
  1796  0005F2                     l2367:
  1797                           
  1798                           ;main.c: 271: }
  1799                           ;main.c: 275: if( TempCANRxMsg.id == (8 << 7 | 0 <<4 | 0x1 ) && TempCANRxMsg.flags== ECA
      +                          N_RX_RTR_FRAME )
  1800  0005F2  0100               	movlb	0	; () banked
  1801  0005F4  0100               	movlb	0	; () banked
  1802  0005F6  059C               	decf	main@TempCANRxMsg& (0+255),w,b
  1803  0005F8  0E04               	movlw	4
  1804  0005FA  B4D8               	btfsc	status,2,c
  1805  0005FC  199D               	xorwf	(main@TempCANRxMsg+1)& (0+255),w,b
  1806  0005FE  119E               	iorwf	(main@TempCANRxMsg+2)& (0+255),w,b
  1807  000600  119F               	iorwf	(main@TempCANRxMsg+3)& (0+255),w,b
  1808  000602  A4D8               	btfss	status,2,c
  1809  000604  D04F               	goto	l2393
  1810                           
  1811                           ; BSR set to: 0
  1812  000606  0100               	movlb	0	; () banked
  1813  000608  0100               	movlb	0	; () banked
  1814  00060A  51A9               	movf	(main@TempCANRxMsg+13)& (0+255),w,b
  1815  00060C  0A40               	xorlw	64
  1816  00060E  A4D8               	btfss	status,2,c
  1817  000610  D049               	goto	l2393
  1818                           
  1819                           ; BSR set to: 0
  1820                           ;main.c: 276: {
  1821                           ;main.c: 277: TempCANTxMsg.data_TX[0]=GetActuatorPosition();
  1822  000612  EC61  F00E         	call	_GetActuatorPosition	;wreg free
  1823  000616  0100               	movlb	0	; () banked
  1824  000618  0100               	movlb	0	; () banked
  1825  00061A  6FAE               	movwf	(main@TempCANTxMsg+4)& (0+255),b
  1826                           
  1827                           ; BSR set to: 0
  1828                           ;main.c: 279: if(MotorMoving==1)
  1829  00061C  0100               	movlb	0	; () banked
  1830  00061E  0100               	movlb	0	; () banked
  1831  000620  0597               	decf	main@MotorMoving& (0+255),w,b
  1832  000622  A4D8               	btfss	status,2,c
  1833  000624  D004               	goto	l2377
  1834                           
  1835                           ; BSR set to: 0
  1836                           ;main.c: 280: TempVar=1;
  1837  000626  0100               	movlb	0	; () banked
  1838  000628  6F8F               	movwf	??_main& (0+255),b
  1839  00062A  0E01               	movlw	1
  1840  00062C  D003               	goto	L1
  1841  00062E                     l2377:
  1842                           
  1843                           ; BSR set to: 0
  1844                           ;main.c: 281: else
  1845                           ;main.c: 282: TempVar=0;
  1846  00062E  0100               	movlb	0	; () banked
  1847  000630  6F8F               	movwf	??_main& (0+255),b
  1848  000632  0E00               	movlw	0
  1849  000634                     L1:
  1850  000634  0100               	movlb	0	; () banked
  1851  000636  0100               	movlb	0	; () banked
  1852  000638  6F9B               	movwf	main@TempVar& (0+255),b
  1853  00063A  0100               	movlb	0	; () banked
  1854  00063C  518F               	movf	??_main& (0+255),w,b
  1855                           
  1856                           ; BSR set to: 0
  1857                           ;main.c: 284: if(PORTCbits.RC1==0)
  1858                           
  1859                           ; BSR set to: 0
  1860  00063E  B282               	btfsc	3970,1,c	;volatile
  1861  000640  D007               	goto	l2383
  1862                           
  1863                           ; BSR set to: 0
  1864                           ;main.c: 285: TempVar=TempVar+2;
  1865  000642  0100               	movlb	0	; () banked
  1866  000644  0100               	movlb	0	; () banked
  1867  000646  519B               	movf	main@TempVar& (0+255),w,b
  1868  000648  0F02               	addlw	2
  1869  00064A  0100               	movlb	0	; () banked
  1870  00064C  0100               	movlb	0	; () banked
  1871  00064E  6F9B               	movwf	main@TempVar& (0+255),b
  1872  000650                     l2383:
  1873                           
  1874                           ; BSR set to: 0
  1875                           ;main.c: 287: TempCANTxMsg.data_TX[1]=TempVar;
  1876  000650  C09B  F0AF         	movff	main@TempVar,main@TempCANTxMsg+5
  1877                           
  1878                           ; BSR set to: 0
  1879                           ;main.c: 289: TempCANTxMsg.dataLen= 2;
  1880  000654  0100               	movlb	0	; () banked
  1881  000656  6F8F               	movwf	??_main& (0+255),b
  1882  000658  0E02               	movlw	2
  1883  00065A  0100               	movlb	0	; () banked
  1884  00065C  0100               	movlb	0	; () banked
  1885  00065E  6FB6               	movwf	(main@TempCANTxMsg+12)& (0+255),b
  1886  000660  0100               	movlb	0	; () banked
  1887  000662  518F               	movf	??_main& (0+255),w,b
  1888                           
  1889                           ; BSR set to: 0
  1890                           ;main.c: 290: TempCANTxMsg.id = (8 << 7 | 0 <<4 | 0x1 );
  1891  000664  0E01               	movlw	1
  1892  000666  0100               	movlb	0	; () banked
  1893  000668  0100               	movlb	0	; () banked
  1894  00066A  6FAA               	movwf	main@TempCANTxMsg& (0+255),b
  1895  00066C  0E04               	movlw	4
  1896  00066E  0100               	movlb	0	; () banked
  1897  000670  6FAB               	movwf	(main@TempCANTxMsg+1)& (0+255),b
  1898  000672  0E00               	movlw	0
  1899  000674  0100               	movlb	0	; () banked
  1900  000676  6FAC               	movwf	(main@TempCANTxMsg+2)& (0+255),b
  1901  000678  0E00               	movlw	0
  1902  00067A  0100               	movlb	0	; () banked
  1903  00067C  6FAD               	movwf	(main@TempCANTxMsg+3)& (0+255),b
  1904                           
  1905                           ; BSR set to: 0
  1906                           ;main.c: 291: TempCANTxMsg.flags = ECAN_TX_STD_FRAME;
  1907  00067E  0100               	movlb	0	; () banked
  1908  000680  6F8F               	movwf	??_main& (0+255),b
  1909  000682  0E00               	movlw	0
  1910  000684  0100               	movlb	0	; () banked
  1911  000686  0100               	movlb	0	; () banked
  1912  000688  6FB7               	movwf	(main@TempCANTxMsg+13)& (0+255),b
  1913  00068A  0100               	movlb	0	; () banked
  1914  00068C  518F               	movf	??_main& (0+255),w,b
  1915                           
  1916                           ; BSR set to: 0
  1917                           ;main.c: 292: PutCANTxFifo(TempCANTxMsg);
  1918  00068E  EE20  F0AA         	lfsr	2,main@TempCANTxMsg
  1919  000692  EE10  F060         	lfsr	1,PutCANTxFifo@PutMessage
  1920  000696  0E0E               	movlw	14
  1921  000698                     u1691:
  1922  000698  CFDE FFE6          	movff	postinc2,postinc1
  1923  00069C  2EE8               	decfsz	wreg,f,c
  1924  00069E  D7FC               	goto	u1691
  1925  0006A0  EC17  F00E         	call	_PutCANTxFifo	;wreg free
  1926  0006A4                     l2393:
  1927                           
  1928                           ;main.c: 293: }
  1929                           ;main.c: 298: if( TempCANRxMsg.id == (8 << 7 | 0 <<4 | 0x0 ) && TempCANRxMsg.dataLen== 1
      +                           )
  1930  0006A4  0100               	movlb	0	; () banked
  1931  0006A6  0100               	movlb	0	; () banked
  1932  0006A8  519D               	movf	(main@TempCANRxMsg+1)& (0+255),w,b
  1933  0006AA  0A04               	xorlw	4
  1934  0006AC  119C               	iorwf	main@TempCANRxMsg& (0+255),w,b
  1935  0006AE  119E               	iorwf	(main@TempCANRxMsg+2)& (0+255),w,b
  1936  0006B0  119F               	iorwf	(main@TempCANRxMsg+3)& (0+255),w,b
  1937  0006B2  A4D8               	btfss	status,2,c
  1938  0006B4  D01D               	goto	l2403
  1939                           
  1940                           ; BSR set to: 0
  1941  0006B6  0100               	movlb	0	; () banked
  1942  0006B8  0100               	movlb	0	; () banked
  1943  0006BA  05A8               	decf	(main@TempCANRxMsg+12)& (0+255),w,b
  1944  0006BC  A4D8               	btfss	status,2,c
  1945  0006BE  D018               	goto	l2403
  1946                           
  1947                           ; BSR set to: 0
  1948                           ;main.c: 299: {
  1949                           ;main.c: 300: if(TempCANRxMsg.data_RX[0]>=0 && TempCANRxMsg.data_RX[0]<=100)
  1950  0006C0  0E65               	movlw	101
  1951  0006C2  0100               	movlb	0	; () banked
  1952  0006C4  0100               	movlb	0	; () banked
  1953  0006C6  5DA0               	subwf	(main@TempCANRxMsg+4)& (0+255),w,b
  1954  0006C8  B0D8               	btfsc	status,0,c
  1955  0006CA  D012               	goto	l2403
  1956                           
  1957                           ; BSR set to: 0
  1958                           ;main.c: 301: {
  1959                           ;main.c: 302: MotorReqPosition = TempCANRxMsg.data_RX[0];
  1960  0006CC  C0A0  F09A         	movff	main@TempCANRxMsg+4,main@MotorReqPosition
  1961                           
  1962                           ; BSR set to: 0
  1963                           ;main.c: 303: NewReqPosition=1;
  1964  0006D0  0100               	movlb	0	; () banked
  1965  0006D2  6F8F               	movwf	??_main& (0+255),b
  1966  0006D4  0E01               	movlw	1
  1967  0006D6  0100               	movlb	0	; () banked
  1968  0006D8  0100               	movlb	0	; () banked
  1969  0006DA  6F96               	movwf	main@NewReqPosition& (0+255),b
  1970  0006DC  0100               	movlb	0	; () banked
  1971  0006DE  518F               	movf	??_main& (0+255),w,b
  1972                           
  1973                           ;main.c: 304: NewReqOrder=0;
  1974  0006E0  0100               	movlb	0	; () banked
  1975  0006E2  6F8F               	movwf	??_main& (0+255),b
  1976  0006E4  0E00               	movlw	0
  1977  0006E6  0100               	movlb	0	; () banked
  1978  0006E8  0100               	movlb	0	; () banked
  1979  0006EA  6F99               	movwf	main@NewReqOrder& (0+255),b
  1980  0006EC  0100               	movlb	0	; () banked
  1981  0006EE  518F               	movf	??_main& (0+255),w,b
  1982  0006F0                     l2403:
  1983                           
  1984                           ; BSR set to: 0
  1985                           ;main.c: 305: }
  1986                           ;main.c: 307: }
  1987                           ;main.c: 311: if( TempCANRxMsg.id == (8 << 7 | 0 <<4 | 0x2 ) && TempCANRxMsg.dataLen== 1
      +                           )
  1988  0006F0  0100               	movlb	0	; () banked
  1989  0006F2  0100               	movlb	0	; () banked
  1990  0006F4  519D               	movf	(main@TempCANRxMsg+1)& (0+255),w,b
  1991  0006F6  0A04               	xorlw	4
  1992  0006F8  0E02               	movlw	2
  1993  0006FA  B4D8               	btfsc	status,2,c
  1994  0006FC  199C               	xorwf	main@TempCANRxMsg& (0+255),w,b
  1995  0006FE  119E               	iorwf	(main@TempCANRxMsg+2)& (0+255),w,b
  1996  000700  119F               	iorwf	(main@TempCANRxMsg+3)& (0+255),w,b
  1997  000702  A4D8               	btfss	status,2,c
  1998  000704  D027               	goto	l2415
  1999                           
  2000                           ; BSR set to: 0
  2001  000706  0100               	movlb	0	; () banked
  2002  000708  0100               	movlb	0	; () banked
  2003  00070A  05A8               	decf	(main@TempCANRxMsg+12)& (0+255),w,b
  2004  00070C  A4D8               	btfss	status,2,c
  2005  00070E  D022               	goto	l2415
  2006                           
  2007                           ; BSR set to: 0
  2008                           ;main.c: 312: {
  2009                           ;main.c: 313: if(TempCANRxMsg.data_RX[0]==0 || TempCANRxMsg.data_RX[0]==2 || TempCANRxMs
      +                          g.data_RX[0]==1)
  2010  000710  0100               	movlb	0	; () banked
  2011  000712  0100               	movlb	0	; () banked
  2012  000714  51A0               	movf	(main@TempCANRxMsg+4)& (0+255),w,b
  2013  000716  B4D8               	btfsc	status,2,c
  2014  000718  D00B               	goto	l99
  2015                           
  2016                           ; BSR set to: 0
  2017  00071A  0100               	movlb	0	; () banked
  2018  00071C  0100               	movlb	0	; () banked
  2019  00071E  51A0               	movf	(main@TempCANRxMsg+4)& (0+255),w,b
  2020  000720  0A02               	xorlw	2
  2021  000722  B4D8               	btfsc	status,2,c
  2022  000724  D005               	goto	l99
  2023                           
  2024                           ; BSR set to: 0
  2025  000726  0100               	movlb	0	; () banked
  2026  000728  0100               	movlb	0	; () banked
  2027  00072A  05A0               	decf	(main@TempCANRxMsg+4)& (0+255),w,b
  2028  00072C  A4D8               	btfss	status,2,c
  2029  00072E  D012               	goto	l2415
  2030  000730                     l99:
  2031                           
  2032                           ; BSR set to: 0
  2033                           ;main.c: 314: {
  2034                           ;main.c: 315: MotorOrder = TempCANRxMsg.data_RX[0];
  2035  000730  C0A0  F098         	movff	main@TempCANRxMsg+4,main@MotorOrder
  2036                           
  2037                           ; BSR set to: 0
  2038                           ;main.c: 316: NewReqOrder=1;
  2039  000734  0100               	movlb	0	; () banked
  2040  000736  6F8F               	movwf	??_main& (0+255),b
  2041  000738  0E01               	movlw	1
  2042  00073A  0100               	movlb	0	; () banked
  2043  00073C  0100               	movlb	0	; () banked
  2044  00073E  6F99               	movwf	main@NewReqOrder& (0+255),b
  2045  000740  0100               	movlb	0	; () banked
  2046  000742  518F               	movf	??_main& (0+255),w,b
  2047                           
  2048                           ;main.c: 317: NewReqPosition=0;
  2049  000744  0100               	movlb	0	; () banked
  2050  000746  6F8F               	movwf	??_main& (0+255),b
  2051  000748  0E00               	movlw	0
  2052  00074A  0100               	movlb	0	; () banked
  2053  00074C  0100               	movlb	0	; () banked
  2054  00074E  6F96               	movwf	main@NewReqPosition& (0+255),b
  2055  000750  0100               	movlb	0	; () banked
  2056  000752  518F               	movf	??_main& (0+255),w,b
  2057  000754                     l2415:
  2058                           
  2059                           ; BSR set to: 0
  2060                           ;main.c: 318: }
  2061                           ;main.c: 319: }
  2062                           ;main.c: 323: if( TempCANRxMsg.id == (8 << 7 | 0 <<4 | 0x4 ) && TempCANRxMsg.dataLen== 2
      +                           )
  2063  000754  0100               	movlb	0	; () banked
  2064  000756  0100               	movlb	0	; () banked
  2065  000758  519D               	movf	(main@TempCANRxMsg+1)& (0+255),w,b
  2066  00075A  0A04               	xorlw	4
  2067  00075C  0E04               	movlw	4
  2068  00075E  B4D8               	btfsc	status,2,c
  2069  000760  199C               	xorwf	main@TempCANRxMsg& (0+255),w,b
  2070  000762  119E               	iorwf	(main@TempCANRxMsg+2)& (0+255),w,b
  2071  000764  119F               	iorwf	(main@TempCANRxMsg+3)& (0+255),w,b
  2072  000766  A4D8               	btfss	status,2,c
  2073  000768  D030               	goto	l86
  2074                           
  2075                           ; BSR set to: 0
  2076  00076A  0100               	movlb	0	; () banked
  2077  00076C  0100               	movlb	0	; () banked
  2078  00076E  51A8               	movf	(main@TempCANRxMsg+12)& (0+255),w,b
  2079  000770  0A02               	xorlw	2
  2080  000772  A4D8               	btfss	status,2,c
  2081  000774  D02A               	goto	l86
  2082                           
  2083                           ; BSR set to: 0
  2084                           ;main.c: 324: {
  2085                           ;main.c: 325: if( (TempCANRxMsg.data_RX[0] & 0b00000001) == 0b00000001)
  2086  000776  0100               	movlb	0	; () banked
  2087  000778  0100               	movlb	0	; () banked
  2088  00077A  A1A0               	btfss	(main@TempCANRxMsg+4)& (0+255),0,b
  2089  00077C  D002               	goto	l101
  2090                           
  2091                           ; BSR set to: 0
  2092                           ;main.c: 326: LATDbits.LATD0=1;
  2093  00077E  808C               	bsf	3980,0,c	;volatile
  2094  000780  D001               	goto	l102
  2095  000782                     l101:
  2096                           
  2097                           ; BSR set to: 0
  2098                           ;main.c: 327: else
  2099                           ;main.c: 328: LATDbits.LATD0=0;
  2100  000782  908C               	bcf	3980,0,c	;volatile
  2101  000784                     l102:
  2102                           
  2103                           ; BSR set to: 0
  2104                           ;main.c: 330: if( (TempCANRxMsg.data_RX[0] & 0b00000010) == 0b00000010)
  2105  000784  0100               	movlb	0	; () banked
  2106  000786  0100               	movlb	0	; () banked
  2107  000788  A3A0               	btfss	(main@TempCANRxMsg+4)& (0+255),1,b
  2108  00078A  D002               	goto	l103
  2109                           
  2110                           ; BSR set to: 0
  2111                           ;main.c: 331: LATDbits.LATD1=1;
  2112  00078C  828C               	bsf	3980,1,c	;volatile
  2113  00078E  D001               	goto	l104
  2114  000790                     l103:
  2115                           
  2116                           ; BSR set to: 0
  2117                           ;main.c: 332: else
  2118                           ;main.c: 333: LATDbits.LATD1=0;
  2119  000790  928C               	bcf	3980,1,c	;volatile
  2120  000792                     l104:
  2121                           
  2122                           ; BSR set to: 0
  2123                           ;main.c: 335: if( (TempCANRxMsg.data_RX[0] & 0b00000100) == 0b00000100)
  2124  000792  0100               	movlb	0	; () banked
  2125  000794  0100               	movlb	0	; () banked
  2126  000796  A5A0               	btfss	(main@TempCANRxMsg+4)& (0+255),2,b
  2127  000798  D002               	goto	l105
  2128                           
  2129                           ; BSR set to: 0
  2130                           ;main.c: 336: LATDbits.LATD2=1;
  2131  00079A  848C               	bsf	3980,2,c	;volatile
  2132  00079C  D001               	goto	l106
  2133  00079E                     l105:
  2134                           
  2135                           ; BSR set to: 0
  2136                           ;main.c: 337: else
  2137                           ;main.c: 338: LATDbits.LATD2=0;
  2138  00079E  948C               	bcf	3980,2,c	;volatile
  2139  0007A0                     l106:
  2140                           
  2141                           ; BSR set to: 0
  2142                           ;main.c: 340: if( (TempCANRxMsg.data_RX[0] & 0b00001000) == 0b00001000)
  2143  0007A0  0100               	movlb	0	; () banked
  2144  0007A2  0100               	movlb	0	; () banked
  2145  0007A4  A7A0               	btfss	(main@TempCANRxMsg+4)& (0+255),3,b
  2146  0007A6  D002               	goto	l107
  2147                           
  2148                           ; BSR set to: 0
  2149                           ;main.c: 341: LATDbits.LATD3=1;
  2150  0007A8  868C               	bsf	3980,3,c	;volatile
  2151  0007AA  D001               	goto	l108
  2152  0007AC                     l107:
  2153                           
  2154                           ; BSR set to: 0
  2155                           ;main.c: 342: else
  2156                           ;main.c: 343: LATDbits.LATD3=0;
  2157  0007AC  968C               	bcf	3980,3,c	;volatile
  2158  0007AE                     l108:
  2159                           
  2160                           ; BSR set to: 0
  2161                           ;main.c: 345: if( (TempCANRxMsg.data_RX[1] & 0b00000001) == 0b00000001)
  2162  0007AE  0100               	movlb	0	; () banked
  2163  0007B0  0100               	movlb	0	; () banked
  2164  0007B2  A1A1               	btfss	(main@TempCANRxMsg+5)& (0+255),0,b
  2165  0007B4  D002               	goto	l109
  2166                           
  2167                           ; BSR set to: 0
  2168                           ;main.c: 346: LATDbits.LATD4=1;
  2169  0007B6  888C               	bsf	3980,4,c	;volatile
  2170  0007B8  D001               	goto	l110
  2171  0007BA                     l109:
  2172                           
  2173                           ; BSR set to: 0
  2174                           ;main.c: 347: else
  2175                           ;main.c: 348: LATDbits.LATD4=0;
  2176  0007BA  988C               	bcf	3980,4,c	;volatile
  2177  0007BC                     l110:
  2178                           
  2179                           ; BSR set to: 0
  2180                           ;main.c: 350: if( (TempCANRxMsg.data_RX[1] & 0b00000010) == 0b00000010)
  2181  0007BC  0100               	movlb	0	; () banked
  2182  0007BE  0100               	movlb	0	; () banked
  2183  0007C0  A3A1               	btfss	(main@TempCANRxMsg+5)& (0+255),1,b
  2184  0007C2  D002               	goto	l111
  2185                           
  2186                           ; BSR set to: 0
  2187                           ;main.c: 351: LATDbits.LATD5=1;
  2188  0007C4  8A8C               	bsf	3980,5,c	;volatile
  2189  0007C6  D001               	goto	l86
  2190  0007C8                     l111:
  2191                           
  2192                           ; BSR set to: 0
  2193                           ;main.c: 352: else
  2194                           ;main.c: 353: LATDbits.LATD5=0;
  2195  0007C8  9A8C               	bcf	3980,5,c	;volatile
  2196  0007CA                     l86:
  2197                           
  2198                           ;main.c: 355: }
  2199                           ;main.c: 357: }
  2200                           ;main.c: 364: if(!CANTxFifo.FifoEmpty && !TXB0CONbits.TXREQ)
  2201  0007CA  0101               	movlb	1	; () banked
  2202  0007CC  0101               	movlb	1	; () banked
  2203  0007CE  678F               	tstfsz	(_CANTxFifo+143)& (0+255),b
  2204  0007D0  D4D4               	goto	l2243
  2205                           
  2206                           ; BSR set to: 1
  2207  0007D2  010F               	movlb	15	; () banked
  2208  0007D4  B720               	btfsc	32,3,b	;volatile
  2209  0007D6  D4D1               	goto	l2243
  2210                           
  2211                           ; BSR set to: 15
  2212                           ;main.c: 365: {
  2213                           ;main.c: 366: TempCANTxMsg=GetCANTxFifo();
  2214  0007D8  ECC9  F00B         	call	_GetCANTxFifo	;wreg free
  2215  0007DC  EE20  F0AA         	lfsr	2,main@TempCANTxMsg
  2216  0007E0  0E0E               	movlw	14
  2217  0007E2                     u1881:
  2218  0007E2  CFEE FFDE          	movff	postinc0,postinc2
  2219  0007E6  2EE8               	decfsz	wreg,f,c
  2220  0007E8  D7FC               	goto	u1881
  2221                           
  2222                           ;main.c: 367: ECANSendMessage(TempCANTxMsg.id,TempCANTxMsg.data_TX,TempCANTxMsg.dataLen,
      +                          TempCANTxMsg.flags);
  2223  0007EA  C0AA  F06B         	movff	main@TempCANTxMsg,ECANSendMessage@id
  2224  0007EE  C0AB  F06C         	movff	main@TempCANTxMsg+1,ECANSendMessage@id+1
  2225  0007F2  C0AC  F06D         	movff	main@TempCANTxMsg+2,ECANSendMessage@id+2
  2226  0007F6  C0AD  F06E         	movff	main@TempCANTxMsg+3,ECANSendMessage@id+3
  2227  0007FA  0100               	movlb	0	; () banked
  2228  0007FC  0E00               	movlw	high (main@TempCANTxMsg+4)
  2229  0007FE  0100               	movlb	0	; () banked
  2230  000800  0100               	movlb	0	; () banked
  2231  000802  6F70               	movwf	(ECANSendMessage@data+1)& (0+255),b
  2232  000804  0100               	movlb	0	; () banked
  2233  000806  0EAE               	movlw	low (main@TempCANTxMsg+4)
  2234  000808  0100               	movlb	0	; () banked
  2235  00080A  0100               	movlb	0	; () banked
  2236  00080C  6F6F               	movwf	ECANSendMessage@data& (0+255),b
  2237  00080E  C0B6  F071         	movff	main@TempCANTxMsg+12,ECANSendMessage@dataLen
  2238  000812  C0B7  F072         	movff	main@TempCANTxMsg+13,ECANSendMessage@msgFlags
  2239  000816  ECFF  F007         	call	_ECANSendMessage	;wreg free
  2240  00081A  D4AF               	goto	l2243
  2241  00081C                     __end_of_main:
  2242                           	opt stack 0
  2243                           pclatu	equ	0xFFB
  2244                           pclath	equ	0xFFA
  2245                           tblptru	equ	0xFF8
  2246                           tblptrh	equ	0xFF7
  2247                           tblptrl	equ	0xFF6
  2248                           tablat	equ	0xFF5
  2249                           prodh	equ	0xFF4
  2250                           prodl	equ	0xFF3
  2251                           intcon	equ	0xFF2
  2252                           postinc0	equ	0xFEE
  2253                           fsr0h	equ	0xFEA
  2254                           fsr0l	equ	0xFE9
  2255                           wreg	equ	0xFE8
  2256                           postinc1	equ	0xFE6
  2257                           fsr1h	equ	0xFE2
  2258                           fsr1l	equ	0xFE1
  2259                           bsr	equ	0xFE0
  2260                           postinc2	equ	0xFDE
  2261                           fsr2h	equ	0xFDA
  2262                           fsr2l	equ	0xFD9
  2263                           status	equ	0xFD8
  2264                           
  2265 ;; *************** function _UpdateBoardVoltages *****************
  2266 ;; Defined at:
  2267 ;;		line 127 in file "system.c"
  2268 ;; Parameters:    Size  Location     Type
  2269 ;;		None
  2270 ;; Auto vars:     Size  Location     Type
  2271 ;;		None
  2272 ;; Return value:  Size  Location     Type
  2273 ;;		None               void
  2274 ;; Registers used:
  2275 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  2276 ;; Tracked objects:
  2277 ;;		On entry : 0/0
  2278 ;;		On exit  : 0/0
  2279 ;;		Unchanged: 0/0
  2280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2283 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2284 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2285 ;;Total ram usage:        4 bytes
  2286 ;; Hardware stack levels used:    1
  2287 ;; Hardware stack levels required when called:    7
  2288 ;; This function calls:
  2289 ;;		_ReadISPPACRegister
  2290 ;;		_WriteISPPACRegister
  2291 ;;		___ftmul
  2292 ;;		___fttol
  2293 ;;		___lwtoft
  2294 ;; This function is called by:
  2295 ;;		_main
  2296 ;; This function uses a non-reentrant model
  2297 ;;
  2298                           
  2299                           	psect	text1
  2300  00081C                     __ptext1:
  2301                           	opt stack 0
  2302  00081C                     _UpdateBoardVoltages:
  2303                           	opt stack 23
  2304                           
  2305                           ;system.c: 132: WriteISPPACRegister(0x09, 0b10000);
  2306                           
  2307                           ;incstack = 0
  2308  00081C  0100               	movlb	0	; () banked
  2309  00081E  6F8B               	movwf	??_UpdateBoardVoltages& (0+255),b
  2310  000820  0E10               	movlw	16
  2311  000822  0100               	movlb	0	; () banked
  2312  000824  0100               	movlb	0	; () banked
  2313  000826  6F62               	movwf	WriteISPPACRegister@LocalData& (0+255),b
  2314  000828  0100               	movlb	0	; () banked
  2315  00082A  518B               	movf	??_UpdateBoardVoltages& (0+255),w,b
  2316  00082C  0E09               	movlw	9
  2317  00082E  EC98  F00F         	call	_WriteISPPACRegister
  2318                           
  2319                           ;system.c: 133: _delay((unsigned long)((50)*(64000000/4000000.0)));
  2320  000832  0EC8               	movlw	200
  2321  000834                     u2557:
  2322  000834  F000               	nop	
  2323  000836  2EE8               	decfsz	wreg,f,c
  2324  000838  D7FD               	goto	u2557
  2325                           
  2326                           ;system.c: 134: BoardVoltage[0]=ReadISPPACRegister(0x08);
  2327  00083A  0E08               	movlw	8
  2328  00083C  ECE4  F00E         	call	_ReadISPPACRegister
  2329  000840  0100               	movlb	0	; () banked
  2330  000842  6F8B               	movwf	??_UpdateBoardVoltages& (0+255),b
  2331  000844  0100               	movlb	0	; () banked
  2332  000846  518B               	movf	??_UpdateBoardVoltages& (0+255),w,b
  2333  000848  0100               	movlb	0	; () banked
  2334  00084A  0100               	movlb	0	; () banked
  2335  00084C  6FB8               	movwf	_BoardVoltage& (0+255),b
  2336  00084E  0100               	movlb	0	; () banked
  2337  000850  6BB9               	clrf	(_BoardVoltage+1)& (0+255),b
  2338                           
  2339                           ; BSR set to: 0
  2340                           ;system.c: 135: BoardVoltage[0]=BoardVoltage[0]<<4;
  2341  000852  0100               	movlb	0	; () banked
  2342  000854  C0B8  F08B         	movff	_BoardVoltage,??_UpdateBoardVoltages
  2343  000858  0100               	movlb	0	; () banked
  2344  00085A  C0B9  F08C         	movff	_BoardVoltage+1,??_UpdateBoardVoltages+1
  2345  00085E  0100               	movlb	0	; () banked
  2346  000860  3B8B               	swapf	??_UpdateBoardVoltages& (0+255),f,b
  2347  000862  3B8C               	swapf	(??_UpdateBoardVoltages+1)& (0+255),f,b
  2348  000864  0EF0               	movlw	240
  2349  000866  178C               	andwf	(??_UpdateBoardVoltages+1)& (0+255),f,b
  2350  000868  518B               	movf	??_UpdateBoardVoltages& (0+255),w,b
  2351  00086A  0B0F               	andlw	15
  2352  00086C  138C               	iorwf	(??_UpdateBoardVoltages+1)& (0+255),f,b
  2353  00086E  0EF0               	movlw	240
  2354  000870  178B               	andwf	??_UpdateBoardVoltages& (0+255),f,b
  2355  000872  C08B  F0B8         	movff	??_UpdateBoardVoltages,_BoardVoltage
  2356  000876  C08C  F0B9         	movff	??_UpdateBoardVoltages+1,_BoardVoltage+1
  2357                           
  2358                           ; BSR set to: 0
  2359                           ;system.c: 136: BoardVoltage[0]+=(ReadISPPACRegister(0x07) & 0xF0)>>4;
  2360  00087A  0E07               	movlw	7
  2361  00087C  ECE4  F00E         	call	_ReadISPPACRegister
  2362  000880  0100               	movlb	0	; () banked
  2363  000882  6F8B               	movwf	??_UpdateBoardVoltages& (0+255),b
  2364  000884  0100               	movlb	0	; () banked
  2365  000886  3B8B               	swapf	??_UpdateBoardVoltages& (0+255),f,b
  2366  000888  0E0F               	movlw	15
  2367  00088A  178B               	andwf	??_UpdateBoardVoltages& (0+255),f,b
  2368  00088C  0E0F               	movlw	15
  2369  00088E  0100               	movlb	0	; () banked
  2370  000890  178B               	andwf	??_UpdateBoardVoltages& (0+255),f,b
  2371  000892  0100               	movlb	0	; () banked
  2372  000894  518B               	movf	??_UpdateBoardVoltages& (0+255),w,b
  2373  000896  0100               	movlb	0	; () banked
  2374  000898  0100               	movlb	0	; () banked
  2375  00089A  27B8               	addwf	_BoardVoltage& (0+255),f,b
  2376  00089C  0E00               	movlw	0
  2377  00089E  0100               	movlb	0	; () banked
  2378  0008A0  23B9               	addwfc	(_BoardVoltage+1)& (0+255),f,b
  2379                           
  2380                           ; BSR set to: 0
  2381                           ;system.c: 137: BoardVoltage[0]=BoardVoltage[0]<<1;
  2382  0008A2  90D8               	bcf	status,0,c
  2383  0008A4  0100               	movlb	0	; () banked
  2384  0008A6  0100               	movlb	0	; () banked
  2385  0008A8  35B8               	rlcf	_BoardVoltage& (0+255),w,b
  2386  0008AA  0100               	movlb	0	; () banked
  2387  0008AC  0100               	movlb	0	; () banked
  2388  0008AE  6FB8               	movwf	_BoardVoltage& (0+255),b
  2389  0008B0  0100               	movlb	0	; () banked
  2390  0008B2  0100               	movlb	0	; () banked
  2391  0008B4  35B9               	rlcf	(_BoardVoltage+1)& (0+255),w,b
  2392  0008B6  0100               	movlb	0	; () banked
  2393  0008B8  6FB9               	movwf	(_BoardVoltage+1)& (0+255),b
  2394                           
  2395                           ; BSR set to: 0
  2396                           ;system.c: 138: BoardVoltage[0]=(unsigned int)((float) BoardVoltage[0] * 5.7);
  2397  0008BA  0E66               	movlw	102
  2398  0008BC  0100               	movlb	0	; () banked
  2399  0008BE  0100               	movlb	0	; () banked
  2400  0008C0  6F70               	movwf	___ftmul@f2& (0+255),b
  2401  0008C2  0EB6               	movlw	182
  2402  0008C4  0100               	movlb	0	; () banked
  2403  0008C6  0100               	movlb	0	; () banked
  2404  0008C8  6F71               	movwf	(___ftmul@f2+1)& (0+255),b
  2405  0008CA  0E40               	movlw	64
  2406  0008CC  0100               	movlb	0	; () banked
  2407  0008CE  0100               	movlb	0	; () banked
  2408  0008D0  6F72               	movwf	(___ftmul@f2+2)& (0+255),b
  2409  0008D2  C0B8  F068         	movff	_BoardVoltage,___lwtoft@c
  2410  0008D6  C0B9  F069         	movff	_BoardVoltage+1,___lwtoft@c+1
  2411  0008DA  EC74  F00F         	call	___lwtoft	;wreg free
  2412  0008DE  C068  F06D         	movff	?___lwtoft,___ftmul@f1
  2413  0008E2  C069  F06E         	movff	?___lwtoft+1,___ftmul@f1+1
  2414  0008E6  C06A  F06F         	movff	?___lwtoft+2,___ftmul@f1+2
  2415  0008EA  EC13  F007         	call	___ftmul	;wreg free
  2416  0008EE  C06D  F07C         	movff	?___ftmul,___fttol@f1
  2417  0008F2  C06E  F07D         	movff	?___ftmul+1,___fttol@f1+1
  2418  0008F6  C06F  F07E         	movff	?___ftmul+2,___fttol@f1+2
  2419  0008FA  ECEB  F008         	call	___fttol	;wreg free
  2420  0008FE  C07C  F08B         	movff	?___fttol,??_UpdateBoardVoltages
  2421  000902  C07D  F08C         	movff	?___fttol+1,??_UpdateBoardVoltages+1
  2422  000906  C07E  F08D         	movff	?___fttol+2,??_UpdateBoardVoltages+2
  2423  00090A  C07F  F08E         	movff	?___fttol+3,??_UpdateBoardVoltages+3
  2424  00090E  C08B  F0B8         	movff	??_UpdateBoardVoltages,_BoardVoltage
  2425  000912  C08C  F0B9         	movff	??_UpdateBoardVoltages+1,_BoardVoltage+1
  2426                           
  2427                           ;system.c: 142: WriteISPPACRegister(0x09, 0b10001);
  2428  000916  0100               	movlb	0	; () banked
  2429  000918  6F8B               	movwf	??_UpdateBoardVoltages& (0+255),b
  2430  00091A  0E11               	movlw	17
  2431  00091C  0100               	movlb	0	; () banked
  2432  00091E  0100               	movlb	0	; () banked
  2433  000920  6F62               	movwf	WriteISPPACRegister@LocalData& (0+255),b
  2434  000922  0100               	movlb	0	; () banked
  2435  000924  518B               	movf	??_UpdateBoardVoltages& (0+255),w,b
  2436  000926  0E09               	movlw	9
  2437  000928  EC98  F00F         	call	_WriteISPPACRegister
  2438                           
  2439                           ;system.c: 143: _delay((unsigned long)((50)*(64000000/4000000.0)));
  2440  00092C  0EC8               	movlw	200
  2441  00092E                     u2567:
  2442  00092E  F000               	nop	
  2443  000930  2EE8               	decfsz	wreg,f,c
  2444  000932  D7FD               	goto	u2567
  2445                           
  2446                           ;system.c: 144: BoardVoltage[1]=ReadISPPACRegister(0x08);
  2447  000934  0E08               	movlw	8
  2448  000936  ECE4  F00E         	call	_ReadISPPACRegister
  2449  00093A  0100               	movlb	0	; () banked
  2450  00093C  6F8B               	movwf	??_UpdateBoardVoltages& (0+255),b
  2451  00093E  0100               	movlb	0	; () banked
  2452  000940  518B               	movf	??_UpdateBoardVoltages& (0+255),w,b
  2453  000942  0100               	movlb	0	; () banked
  2454  000944  0100               	movlb	0	; () banked
  2455  000946  6FBA               	movwf	(_BoardVoltage+2)& (0+255),b
  2456  000948  0100               	movlb	0	; () banked
  2457  00094A  6BBB               	clrf	(_BoardVoltage+3)& (0+255),b
  2458                           
  2459                           ; BSR set to: 0
  2460                           ;system.c: 145: BoardVoltage[1]=BoardVoltage[1]<<4;
  2461  00094C  0100               	movlb	0	; () banked
  2462  00094E  EE20  F0BA         	lfsr	2,_BoardVoltage+2
  2463  000952  CFDE F08B          	movff	postinc2,??_UpdateBoardVoltages
  2464  000956  CFDD F08C          	movff	postdec2,??_UpdateBoardVoltages+1
  2465  00095A  0100               	movlb	0	; () banked
  2466  00095C  3B8B               	swapf	??_UpdateBoardVoltages& (0+255),f,b
  2467  00095E  3B8C               	swapf	(??_UpdateBoardVoltages+1)& (0+255),f,b
  2468  000960  0EF0               	movlw	240
  2469  000962  178C               	andwf	(??_UpdateBoardVoltages+1)& (0+255),f,b
  2470  000964  518B               	movf	??_UpdateBoardVoltages& (0+255),w,b
  2471  000966  0B0F               	andlw	15
  2472  000968  138C               	iorwf	(??_UpdateBoardVoltages+1)& (0+255),f,b
  2473  00096A  0EF0               	movlw	240
  2474  00096C  178B               	andwf	??_UpdateBoardVoltages& (0+255),f,b
  2475  00096E  C08B  F0BA         	movff	??_UpdateBoardVoltages,_BoardVoltage+2
  2476  000972  C08C  F0BB         	movff	??_UpdateBoardVoltages+1,_BoardVoltage+3
  2477                           
  2478                           ; BSR set to: 0
  2479                           ;system.c: 146: BoardVoltage[1]+=(ReadISPPACRegister(0x07) & 0xF0)>>4;
  2480  000976  0E07               	movlw	7
  2481  000978  ECE4  F00E         	call	_ReadISPPACRegister
  2482  00097C  0100               	movlb	0	; () banked
  2483  00097E  6F8B               	movwf	??_UpdateBoardVoltages& (0+255),b
  2484  000980  0100               	movlb	0	; () banked
  2485  000982  3B8B               	swapf	??_UpdateBoardVoltages& (0+255),f,b
  2486  000984  0E0F               	movlw	15
  2487  000986  178B               	andwf	??_UpdateBoardVoltages& (0+255),f,b
  2488  000988  0E0F               	movlw	15
  2489  00098A  0100               	movlb	0	; () banked
  2490  00098C  178B               	andwf	??_UpdateBoardVoltages& (0+255),f,b
  2491  00098E  0100               	movlb	0	; () banked
  2492  000990  518B               	movf	??_UpdateBoardVoltages& (0+255),w,b
  2493  000992  0100               	movlb	0	; () banked
  2494  000994  0100               	movlb	0	; () banked
  2495  000996  27BA               	addwf	(_BoardVoltage+2)& (0+255),f,b
  2496  000998  0E00               	movlw	0
  2497  00099A  0100               	movlb	0	; () banked
  2498  00099C  23BB               	addwfc	(_BoardVoltage+3)& (0+255),f,b
  2499                           
  2500                           ; BSR set to: 0
  2501                           ;system.c: 147: BoardVoltage[1]=BoardVoltage[1]<<1;
  2502  00099E  90D8               	bcf	status,0,c
  2503  0009A0  0100               	movlb	0	; () banked
  2504  0009A2  0100               	movlb	0	; () banked
  2505  0009A4  35BA               	rlcf	(_BoardVoltage+2)& (0+255),w,b
  2506  0009A6  0100               	movlb	0	; () banked
  2507  0009A8  0100               	movlb	0	; () banked
  2508  0009AA  6FBA               	movwf	(_BoardVoltage+2)& (0+255),b
  2509  0009AC  0100               	movlb	0	; () banked
  2510  0009AE  0100               	movlb	0	; () banked
  2511  0009B0  35BB               	rlcf	(_BoardVoltage+3)& (0+255),w,b
  2512  0009B2  0100               	movlb	0	; () banked
  2513  0009B4  6FBB               	movwf	(_BoardVoltage+3)& (0+255),b
  2514                           
  2515                           ; BSR set to: 0
  2516                           ;system.c: 151: WriteISPPACRegister(0x09, 0b10010);
  2517  0009B6  0100               	movlb	0	; () banked
  2518  0009B8  6F8B               	movwf	??_UpdateBoardVoltages& (0+255),b
  2519  0009BA  0E12               	movlw	18
  2520  0009BC  0100               	movlb	0	; () banked
  2521  0009BE  0100               	movlb	0	; () banked
  2522  0009C0  6F62               	movwf	WriteISPPACRegister@LocalData& (0+255),b
  2523  0009C2  0100               	movlb	0	; () banked
  2524  0009C4  518B               	movf	??_UpdateBoardVoltages& (0+255),w,b
  2525  0009C6  0E09               	movlw	9
  2526  0009C8  EC98  F00F         	call	_WriteISPPACRegister
  2527                           
  2528                           ;system.c: 152: _delay((unsigned long)((50)*(64000000/4000000.0)));
  2529  0009CC  0EC8               	movlw	200
  2530  0009CE                     u2577:
  2531  0009CE  F000               	nop	
  2532  0009D0  2EE8               	decfsz	wreg,f,c
  2533  0009D2  D7FD               	goto	u2577
  2534                           
  2535                           ;system.c: 153: BoardVoltage[2]=ReadISPPACRegister(0x08);
  2536  0009D4  0E08               	movlw	8
  2537  0009D6  ECE4  F00E         	call	_ReadISPPACRegister
  2538  0009DA  0100               	movlb	0	; () banked
  2539  0009DC  6F8B               	movwf	??_UpdateBoardVoltages& (0+255),b
  2540  0009DE  0100               	movlb	0	; () banked
  2541  0009E0  518B               	movf	??_UpdateBoardVoltages& (0+255),w,b
  2542  0009E2  0100               	movlb	0	; () banked
  2543  0009E4  0100               	movlb	0	; () banked
  2544  0009E6  6FBC               	movwf	(_BoardVoltage+4)& (0+255),b
  2545  0009E8  0100               	movlb	0	; () banked
  2546  0009EA  6BBD               	clrf	(_BoardVoltage+5)& (0+255),b
  2547                           
  2548                           ; BSR set to: 0
  2549                           ;system.c: 154: BoardVoltage[2]=BoardVoltage[2]<<4;
  2550  0009EC  0100               	movlb	0	; () banked
  2551  0009EE  EE20  F0BC         	lfsr	2,_BoardVoltage+4
  2552  0009F2  CFDE F08B          	movff	postinc2,??_UpdateBoardVoltages
  2553  0009F6  CFDD F08C          	movff	postdec2,??_UpdateBoardVoltages+1
  2554  0009FA  0100               	movlb	0	; () banked
  2555  0009FC  3B8B               	swapf	??_UpdateBoardVoltages& (0+255),f,b
  2556  0009FE  3B8C               	swapf	(??_UpdateBoardVoltages+1)& (0+255),f,b
  2557  000A00  0EF0               	movlw	240
  2558  000A02  178C               	andwf	(??_UpdateBoardVoltages+1)& (0+255),f,b
  2559  000A04  518B               	movf	??_UpdateBoardVoltages& (0+255),w,b
  2560  000A06  0B0F               	andlw	15
  2561  000A08  138C               	iorwf	(??_UpdateBoardVoltages+1)& (0+255),f,b
  2562  000A0A  0EF0               	movlw	240
  2563  000A0C  178B               	andwf	??_UpdateBoardVoltages& (0+255),f,b
  2564  000A0E  C08B  F0BC         	movff	??_UpdateBoardVoltages,_BoardVoltage+4
  2565  000A12  C08C  F0BD         	movff	??_UpdateBoardVoltages+1,_BoardVoltage+5
  2566                           
  2567                           ; BSR set to: 0
  2568                           ;system.c: 155: BoardVoltage[2]+=(ReadISPPACRegister(0x07) & 0xF0)>>4;
  2569  000A16  0E07               	movlw	7
  2570  000A18  ECE4  F00E         	call	_ReadISPPACRegister
  2571  000A1C  0100               	movlb	0	; () banked
  2572  000A1E  6F8B               	movwf	??_UpdateBoardVoltages& (0+255),b
  2573  000A20  0100               	movlb	0	; () banked
  2574  000A22  3B8B               	swapf	??_UpdateBoardVoltages& (0+255),f,b
  2575  000A24  0E0F               	movlw	15
  2576  000A26  178B               	andwf	??_UpdateBoardVoltages& (0+255),f,b
  2577  000A28  0E0F               	movlw	15
  2578  000A2A  0100               	movlb	0	; () banked
  2579  000A2C  178B               	andwf	??_UpdateBoardVoltages& (0+255),f,b
  2580  000A2E  0100               	movlb	0	; () banked
  2581  000A30  518B               	movf	??_UpdateBoardVoltages& (0+255),w,b
  2582  000A32  0100               	movlb	0	; () banked
  2583  000A34  0100               	movlb	0	; () banked
  2584  000A36  27BC               	addwf	(_BoardVoltage+4)& (0+255),f,b
  2585  000A38  0E00               	movlw	0
  2586  000A3A  0100               	movlb	0	; () banked
  2587  000A3C  23BD               	addwfc	(_BoardVoltage+5)& (0+255),f,b
  2588                           
  2589                           ; BSR set to: 0
  2590                           ;system.c: 156: BoardVoltage[2]=BoardVoltage[2]<<1;
  2591  000A3E  90D8               	bcf	status,0,c
  2592  000A40  0100               	movlb	0	; () banked
  2593  000A42  0100               	movlb	0	; () banked
  2594  000A44  35BC               	rlcf	(_BoardVoltage+4)& (0+255),w,b
  2595  000A46  0100               	movlb	0	; () banked
  2596  000A48  0100               	movlb	0	; () banked
  2597  000A4A  6FBC               	movwf	(_BoardVoltage+4)& (0+255),b
  2598  000A4C  0100               	movlb	0	; () banked
  2599  000A4E  0100               	movlb	0	; () banked
  2600  000A50  35BD               	rlcf	(_BoardVoltage+5)& (0+255),w,b
  2601  000A52  0100               	movlb	0	; () banked
  2602  000A54  6FBD               	movwf	(_BoardVoltage+5)& (0+255),b
  2603                           
  2604                           ; BSR set to: 0
  2605                           ;system.c: 160: WriteISPPACRegister(0x09, 0b10011);
  2606  000A56  0100               	movlb	0	; () banked
  2607  000A58  6F8B               	movwf	??_UpdateBoardVoltages& (0+255),b
  2608  000A5A  0E13               	movlw	19
  2609  000A5C  0100               	movlb	0	; () banked
  2610  000A5E  0100               	movlb	0	; () banked
  2611  000A60  6F62               	movwf	WriteISPPACRegister@LocalData& (0+255),b
  2612  000A62  0100               	movlb	0	; () banked
  2613  000A64  518B               	movf	??_UpdateBoardVoltages& (0+255),w,b
  2614  000A66  0E09               	movlw	9
  2615  000A68  EC98  F00F         	call	_WriteISPPACRegister
  2616                           
  2617                           ;system.c: 161: _delay((unsigned long)((50)*(64000000/4000000.0)));
  2618  000A6C  0EC8               	movlw	200
  2619  000A6E                     u2587:
  2620  000A6E  F000               	nop	
  2621  000A70  2EE8               	decfsz	wreg,f,c
  2622  000A72  D7FD               	goto	u2587
  2623                           
  2624                           ;system.c: 162: BoardVoltage[3]=ReadISPPACRegister(0x08);
  2625  000A74  0E08               	movlw	8
  2626  000A76  ECE4  F00E         	call	_ReadISPPACRegister
  2627  000A7A  0100               	movlb	0	; () banked
  2628  000A7C  6F8B               	movwf	??_UpdateBoardVoltages& (0+255),b
  2629  000A7E  0100               	movlb	0	; () banked
  2630  000A80  518B               	movf	??_UpdateBoardVoltages& (0+255),w,b
  2631  000A82  0100               	movlb	0	; () banked
  2632  000A84  0100               	movlb	0	; () banked
  2633  000A86  6FBE               	movwf	(_BoardVoltage+6)& (0+255),b
  2634  000A88  0100               	movlb	0	; () banked
  2635  000A8A  6BBF               	clrf	(_BoardVoltage+7)& (0+255),b
  2636                           
  2637                           ; BSR set to: 0
  2638                           ;system.c: 163: BoardVoltage[3]=BoardVoltage[3]<<4;
  2639  000A8C  0100               	movlb	0	; () banked
  2640  000A8E  EE20  F0BE         	lfsr	2,_BoardVoltage+6
  2641  000A92  CFDE F08B          	movff	postinc2,??_UpdateBoardVoltages
  2642  000A96  CFDD F08C          	movff	postdec2,??_UpdateBoardVoltages+1
  2643  000A9A  0100               	movlb	0	; () banked
  2644  000A9C  3B8B               	swapf	??_UpdateBoardVoltages& (0+255),f,b
  2645  000A9E  3B8C               	swapf	(??_UpdateBoardVoltages+1)& (0+255),f,b
  2646  000AA0  0EF0               	movlw	240
  2647  000AA2  178C               	andwf	(??_UpdateBoardVoltages+1)& (0+255),f,b
  2648  000AA4  518B               	movf	??_UpdateBoardVoltages& (0+255),w,b
  2649  000AA6  0B0F               	andlw	15
  2650  000AA8  138C               	iorwf	(??_UpdateBoardVoltages+1)& (0+255),f,b
  2651  000AAA  0EF0               	movlw	240
  2652  000AAC  178B               	andwf	??_UpdateBoardVoltages& (0+255),f,b
  2653  000AAE  C08B  F0BE         	movff	??_UpdateBoardVoltages,_BoardVoltage+6
  2654  000AB2  C08C  F0BF         	movff	??_UpdateBoardVoltages+1,_BoardVoltage+7
  2655                           
  2656                           ; BSR set to: 0
  2657                           ;system.c: 164: BoardVoltage[3]+=(ReadISPPACRegister(0x07) & 0xF0)>>4;
  2658  000AB6  0E07               	movlw	7
  2659  000AB8  ECE4  F00E         	call	_ReadISPPACRegister
  2660  000ABC  0100               	movlb	0	; () banked
  2661  000ABE  6F8B               	movwf	??_UpdateBoardVoltages& (0+255),b
  2662  000AC0  0100               	movlb	0	; () banked
  2663  000AC2  3B8B               	swapf	??_UpdateBoardVoltages& (0+255),f,b
  2664  000AC4  0E0F               	movlw	15
  2665  000AC6  178B               	andwf	??_UpdateBoardVoltages& (0+255),f,b
  2666  000AC8  0E0F               	movlw	15
  2667  000ACA  0100               	movlb	0	; () banked
  2668  000ACC  178B               	andwf	??_UpdateBoardVoltages& (0+255),f,b
  2669  000ACE  0100               	movlb	0	; () banked
  2670  000AD0  518B               	movf	??_UpdateBoardVoltages& (0+255),w,b
  2671  000AD2  0100               	movlb	0	; () banked
  2672  000AD4  0100               	movlb	0	; () banked
  2673  000AD6  27BE               	addwf	(_BoardVoltage+6)& (0+255),f,b
  2674  000AD8  0E00               	movlw	0
  2675  000ADA  0100               	movlb	0	; () banked
  2676  000ADC  23BF               	addwfc	(_BoardVoltage+7)& (0+255),f,b
  2677                           
  2678                           ; BSR set to: 0
  2679                           ;system.c: 165: BoardVoltage[3]=BoardVoltage[3]<<1;
  2680  000ADE  90D8               	bcf	status,0,c
  2681  000AE0  0100               	movlb	0	; () banked
  2682  000AE2  0100               	movlb	0	; () banked
  2683  000AE4  35BE               	rlcf	(_BoardVoltage+6)& (0+255),w,b
  2684  000AE6  0100               	movlb	0	; () banked
  2685  000AE8  0100               	movlb	0	; () banked
  2686  000AEA  6FBE               	movwf	(_BoardVoltage+6)& (0+255),b
  2687  000AEC  0100               	movlb	0	; () banked
  2688  000AEE  0100               	movlb	0	; () banked
  2689  000AF0  35BF               	rlcf	(_BoardVoltage+7)& (0+255),w,b
  2690  000AF2  0100               	movlb	0	; () banked
  2691  000AF4  6FBF               	movwf	(_BoardVoltage+7)& (0+255),b
  2692                           
  2693                           ; BSR set to: 0
  2694                           ;system.c: 166: BoardVoltage[3]=(unsigned int)((float)BoardVoltage[3]* 11.15);
  2695  000AF6  0E66               	movlw	102
  2696  000AF8  0100               	movlb	0	; () banked
  2697  000AFA  0100               	movlb	0	; () banked
  2698  000AFC  6F70               	movwf	___ftmul@f2& (0+255),b
  2699  000AFE  0E32               	movlw	50
  2700  000B00  0100               	movlb	0	; () banked
  2701  000B02  0100               	movlb	0	; () banked
  2702  000B04  6F71               	movwf	(___ftmul@f2+1)& (0+255),b
  2703  000B06  0E41               	movlw	65
  2704  000B08  0100               	movlb	0	; () banked
  2705  000B0A  0100               	movlb	0	; () banked
  2706  000B0C  6F72               	movwf	(___ftmul@f2+2)& (0+255),b
  2707  000B0E  C0BE  F068         	movff	_BoardVoltage+6,___lwtoft@c
  2708  000B12  C0BF  F069         	movff	_BoardVoltage+7,___lwtoft@c+1
  2709  000B16  EC74  F00F         	call	___lwtoft	;wreg free
  2710  000B1A  C068  F06D         	movff	?___lwtoft,___ftmul@f1
  2711  000B1E  C069  F06E         	movff	?___lwtoft+1,___ftmul@f1+1
  2712  000B22  C06A  F06F         	movff	?___lwtoft+2,___ftmul@f1+2
  2713  000B26  EC13  F007         	call	___ftmul	;wreg free
  2714  000B2A  C06D  F07C         	movff	?___ftmul,___fttol@f1
  2715  000B2E  C06E  F07D         	movff	?___ftmul+1,___fttol@f1+1
  2716  000B32  C06F  F07E         	movff	?___ftmul+2,___fttol@f1+2
  2717  000B36  ECEB  F008         	call	___fttol	;wreg free
  2718  000B3A  C07C  F08B         	movff	?___fttol,??_UpdateBoardVoltages
  2719  000B3E  C07D  F08C         	movff	?___fttol+1,??_UpdateBoardVoltages+1
  2720  000B42  C07E  F08D         	movff	?___fttol+2,??_UpdateBoardVoltages+2
  2721  000B46  C07F  F08E         	movff	?___fttol+3,??_UpdateBoardVoltages+3
  2722  000B4A  C08B  F0BE         	movff	??_UpdateBoardVoltages,_BoardVoltage+6
  2723  000B4E  C08C  F0BF         	movff	??_UpdateBoardVoltages+1,_BoardVoltage+7
  2724                           
  2725                           ;system.c: 170: WriteISPPACRegister(0x09, 0b10100);
  2726  000B52  0100               	movlb	0	; () banked
  2727  000B54  6F8B               	movwf	??_UpdateBoardVoltages& (0+255),b
  2728  000B56  0E14               	movlw	20
  2729  000B58  0100               	movlb	0	; () banked
  2730  000B5A  0100               	movlb	0	; () banked
  2731  000B5C  6F62               	movwf	WriteISPPACRegister@LocalData& (0+255),b
  2732  000B5E  0100               	movlb	0	; () banked
  2733  000B60  518B               	movf	??_UpdateBoardVoltages& (0+255),w,b
  2734  000B62  0E09               	movlw	9
  2735  000B64  EC98  F00F         	call	_WriteISPPACRegister
  2736                           
  2737                           ;system.c: 171: _delay((unsigned long)((50)*(64000000/4000000.0)));
  2738  000B68  0EC8               	movlw	200
  2739  000B6A                     u2597:
  2740  000B6A  F000               	nop	
  2741  000B6C  2EE8               	decfsz	wreg,f,c
  2742  000B6E  D7FD               	goto	u2597
  2743                           
  2744                           ;system.c: 172: BoardVoltage[4]=ReadISPPACRegister(0x08);
  2745  000B70  0E08               	movlw	8
  2746  000B72  ECE4  F00E         	call	_ReadISPPACRegister
  2747  000B76  0100               	movlb	0	; () banked
  2748  000B78  6F8B               	movwf	??_UpdateBoardVoltages& (0+255),b
  2749  000B7A  0100               	movlb	0	; () banked
  2750  000B7C  518B               	movf	??_UpdateBoardVoltages& (0+255),w,b
  2751  000B7E  0100               	movlb	0	; () banked
  2752  000B80  0100               	movlb	0	; () banked
  2753  000B82  6FC0               	movwf	(_BoardVoltage+8)& (0+255),b
  2754  000B84  0100               	movlb	0	; () banked
  2755  000B86  6BC1               	clrf	(_BoardVoltage+9)& (0+255),b
  2756                           
  2757                           ; BSR set to: 0
  2758                           ;system.c: 173: BoardVoltage[4]=BoardVoltage[4]<<4;
  2759  000B88  0100               	movlb	0	; () banked
  2760  000B8A  EE20  F0C0         	lfsr	2,_BoardVoltage+8
  2761  000B8E  CFDE F08B          	movff	postinc2,??_UpdateBoardVoltages
  2762  000B92  CFDD F08C          	movff	postdec2,??_UpdateBoardVoltages+1
  2763  000B96  0100               	movlb	0	; () banked
  2764  000B98  3B8B               	swapf	??_UpdateBoardVoltages& (0+255),f,b
  2765  000B9A  3B8C               	swapf	(??_UpdateBoardVoltages+1)& (0+255),f,b
  2766  000B9C  0EF0               	movlw	240
  2767  000B9E  178C               	andwf	(??_UpdateBoardVoltages+1)& (0+255),f,b
  2768  000BA0  518B               	movf	??_UpdateBoardVoltages& (0+255),w,b
  2769  000BA2  0B0F               	andlw	15
  2770  000BA4  138C               	iorwf	(??_UpdateBoardVoltages+1)& (0+255),f,b
  2771  000BA6  0EF0               	movlw	240
  2772  000BA8  178B               	andwf	??_UpdateBoardVoltages& (0+255),f,b
  2773  000BAA  C08B  F0C0         	movff	??_UpdateBoardVoltages,_BoardVoltage+8
  2774  000BAE  C08C  F0C1         	movff	??_UpdateBoardVoltages+1,_BoardVoltage+9
  2775                           
  2776                           ; BSR set to: 0
  2777                           ;system.c: 174: BoardVoltage[4]+=(ReadISPPACRegister(0x07) & 0xF0)>>4;
  2778  000BB2  0E07               	movlw	7
  2779  000BB4  ECE4  F00E         	call	_ReadISPPACRegister
  2780  000BB8  0100               	movlb	0	; () banked
  2781  000BBA  6F8B               	movwf	??_UpdateBoardVoltages& (0+255),b
  2782  000BBC  0100               	movlb	0	; () banked
  2783  000BBE  3B8B               	swapf	??_UpdateBoardVoltages& (0+255),f,b
  2784  000BC0  0E0F               	movlw	15
  2785  000BC2  178B               	andwf	??_UpdateBoardVoltages& (0+255),f,b
  2786  000BC4  0E0F               	movlw	15
  2787  000BC6  0100               	movlb	0	; () banked
  2788  000BC8  178B               	andwf	??_UpdateBoardVoltages& (0+255),f,b
  2789  000BCA  0100               	movlb	0	; () banked
  2790  000BCC  518B               	movf	??_UpdateBoardVoltages& (0+255),w,b
  2791  000BCE  0100               	movlb	0	; () banked
  2792  000BD0  0100               	movlb	0	; () banked
  2793  000BD2  27C0               	addwf	(_BoardVoltage+8)& (0+255),f,b
  2794  000BD4  0E00               	movlw	0
  2795  000BD6  0100               	movlb	0	; () banked
  2796  000BD8  23C1               	addwfc	(_BoardVoltage+9)& (0+255),f,b
  2797                           
  2798                           ; BSR set to: 0
  2799                           ;system.c: 175: BoardVoltage[4]=BoardVoltage[4]<<1;
  2800  000BDA  90D8               	bcf	status,0,c
  2801  000BDC  0100               	movlb	0	; () banked
  2802  000BDE  0100               	movlb	0	; () banked
  2803  000BE0  35C0               	rlcf	(_BoardVoltage+8)& (0+255),w,b
  2804  000BE2  0100               	movlb	0	; () banked
  2805  000BE4  0100               	movlb	0	; () banked
  2806  000BE6  6FC0               	movwf	(_BoardVoltage+8)& (0+255),b
  2807  000BE8  0100               	movlb	0	; () banked
  2808  000BEA  0100               	movlb	0	; () banked
  2809  000BEC  35C1               	rlcf	(_BoardVoltage+9)& (0+255),w,b
  2810  000BEE  0100               	movlb	0	; () banked
  2811  000BF0  6FC1               	movwf	(_BoardVoltage+9)& (0+255),b
  2812                           
  2813                           ; BSR set to: 0
  2814                           ;system.c: 179: BoardVoltage[5]= ~ReadISPPACRegister(0x06);
  2815  000BF2  0E06               	movlw	6
  2816  000BF4  ECE4  F00E         	call	_ReadISPPACRegister
  2817  000BF8  0100               	movlb	0	; () banked
  2818  000BFA  6F8B               	movwf	??_UpdateBoardVoltages& (0+255),b
  2819  000BFC  6B8C               	clrf	(??_UpdateBoardVoltages+1)& (0+255),b
  2820  000BFE  0100               	movlb	0	; () banked
  2821  000C00  1D8B               	comf	??_UpdateBoardVoltages& (0+255),w,b
  2822  000C02  0100               	movlb	0	; () banked
  2823  000C04  0100               	movlb	0	; () banked
  2824  000C06  6FC2               	movwf	(_BoardVoltage+10)& (0+255),b
  2825  000C08  0100               	movlb	0	; () banked
  2826  000C0A  0100               	movlb	0	; () banked
  2827  000C0C  1D8C               	comf	(??_UpdateBoardVoltages+1)& (0+255),w,b
  2828  000C0E  6FC3               	movwf	(_BoardVoltage+11)& (0+255),b
  2829                           
  2830                           ; BSR set to: 0
  2831                           ;system.c: 180: BoardVoltage[5]= ( BoardVoltage[5] & 0x000C) >> 2;
  2832  000C10  0100               	movlb	0	; () banked
  2833  000C12  EE20  F0C2         	lfsr	2,_BoardVoltage+10
  2834  000C16  CFDE F08B          	movff	postinc2,??_UpdateBoardVoltages
  2835  000C1A  CFDD F08C          	movff	postdec2,??_UpdateBoardVoltages+1
  2836  000C1E  0100               	movlb	0	; () banked
  2837  000C20  90D8               	bcf	status,0,c
  2838  000C22  338C               	rrcf	(??_UpdateBoardVoltages+1)& (0+255),f,b
  2839  000C24  338B               	rrcf	??_UpdateBoardVoltages& (0+255),f,b
  2840  000C26  0100               	movlb	0	; () banked
  2841  000C28  90D8               	bcf	status,0,c
  2842  000C2A  338C               	rrcf	(??_UpdateBoardVoltages+1)& (0+255),f,b
  2843  000C2C  338B               	rrcf	??_UpdateBoardVoltages& (0+255),f,b
  2844  000C2E  0E03               	movlw	3
  2845  000C30  0100               	movlb	0	; () banked
  2846  000C32  158B               	andwf	??_UpdateBoardVoltages& (0+255),w,b
  2847  000C34  0100               	movlb	0	; () banked
  2848  000C36  0100               	movlb	0	; () banked
  2849  000C38  6FC2               	movwf	(_BoardVoltage+10)& (0+255),b
  2850  000C3A  0E00               	movlw	0
  2851  000C3C  0100               	movlb	0	; () banked
  2852  000C3E  158C               	andwf	(??_UpdateBoardVoltages+1)& (0+255),w,b
  2853  000C40  0100               	movlb	0	; () banked
  2854  000C42  6FC3               	movwf	(_BoardVoltage+11)& (0+255),b
  2855                           
  2856                           ; BSR set to: 0
  2857  000C44  0012               	return	
  2858  000C46                     __end_of_UpdateBoardVoltages:
  2859                           	opt stack 0
  2860                           pclatu	equ	0xFFB
  2861                           pclath	equ	0xFFA
  2862                           tblptru	equ	0xFF8
  2863                           tblptrh	equ	0xFF7
  2864                           tblptrl	equ	0xFF6
  2865                           tablat	equ	0xFF5
  2866                           prodh	equ	0xFF4
  2867                           prodl	equ	0xFF3
  2868                           intcon	equ	0xFF2
  2869                           postinc0	equ	0xFEE
  2870                           fsr0h	equ	0xFEA
  2871                           fsr0l	equ	0xFE9
  2872                           wreg	equ	0xFE8
  2873                           postinc1	equ	0xFE6
  2874                           fsr1h	equ	0xFE2
  2875                           fsr1l	equ	0xFE1
  2876                           bsr	equ	0xFE0
  2877                           postinc2	equ	0xFDE
  2878                           postdec2	equ	0xFDD
  2879                           fsr2h	equ	0xFDA
  2880                           fsr2l	equ	0xFD9
  2881                           status	equ	0xFD8
  2882                           
  2883 ;; *************** function ___lwtoft *****************
  2884 ;; Defined at:
  2885 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lwtoft.c"
  2886 ;; Parameters:    Size  Location     Type
  2887 ;;  c               2    8[BANK0 ] unsigned int 
  2888 ;; Auto vars:     Size  Location     Type
  2889 ;;		None
  2890 ;; Return value:  Size  Location     Type
  2891 ;;                  3    8[BANK0 ] float 
  2892 ;; Registers used:
  2893 ;;		wreg, status,2, status,0, cstack
  2894 ;; Tracked objects:
  2895 ;;		On entry : 0/0
  2896 ;;		On exit  : 0/0
  2897 ;;		Unchanged: 0/0
  2898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2899 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2901 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2902 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2903 ;;Total ram usage:        5 bytes
  2904 ;; Hardware stack levels used:    1
  2905 ;; Hardware stack levels required when called:    5
  2906 ;; This function calls:
  2907 ;;		___ftpack
  2908 ;; This function is called by:
  2909 ;;		_UpdateBoardVoltages
  2910 ;; This function uses a non-reentrant model
  2911 ;;
  2912                           
  2913                           	psect	text2
  2914  001EE8                     __ptext2:
  2915                           	opt stack 0
  2916  001EE8                     ___lwtoft:
  2917                           	opt stack 24
  2918                           
  2919                           ; BSR set to: 0
  2920                           ;incstack = 0
  2921  001EE8  0100               	movlb	0	; () banked
  2922  001EEA  0100               	movlb	0	; () banked
  2923  001EEC  C068  F060         	movff	___lwtoft@c,___ftpack@arg
  2924  001EF0  0100               	movlb	0	; () banked
  2925  001EF2  0100               	movlb	0	; () banked
  2926  001EF4  C069  F061         	movff	___lwtoft@c+1,___ftpack@arg+1
  2927  001EF8  0100               	movlb	0	; () banked
  2928  001EFA  0100               	movlb	0	; () banked
  2929  001EFC  6B62               	clrf	(___ftpack@arg+2)& (0+255),b
  2930  001EFE  0100               	movlb	0	; () banked
  2931  001F00  6F6B               	movwf	??___lwtoft& (0+255),b
  2932  001F02  0E8E               	movlw	142
  2933  001F04  0100               	movlb	0	; () banked
  2934  001F06  0100               	movlb	0	; () banked
  2935  001F08  6F63               	movwf	___ftpack@exp& (0+255),b
  2936  001F0A  0100               	movlb	0	; () banked
  2937  001F0C  516B               	movf	??___lwtoft& (0+255),w,b
  2938  001F0E  0100               	movlb	0	; () banked
  2939  001F10  6F6C               	movwf	(??___lwtoft+1)& (0+255),b
  2940  001F12  0E00               	movlw	0
  2941  001F14  0100               	movlb	0	; () banked
  2942  001F16  0100               	movlb	0	; () banked
  2943  001F18  6F64               	movwf	___ftpack@sign& (0+255),b
  2944  001F1A  0100               	movlb	0	; () banked
  2945  001F1C  516C               	movf	(??___lwtoft+1)& (0+255),w,b
  2946  001F1E  EC2C  F00B         	call	___ftpack	;wreg free
  2947  001F22  C060  F068         	movff	?___ftpack,?___lwtoft
  2948  001F26  C061  F069         	movff	?___ftpack+1,?___lwtoft+1
  2949  001F2A  C062  F06A         	movff	?___ftpack+2,?___lwtoft+2
  2950  001F2E  0012               	return	
  2951  001F30                     __end_of___lwtoft:
  2952                           	opt stack 0
  2953                           pclatu	equ	0xFFB
  2954                           pclath	equ	0xFFA
  2955                           tblptru	equ	0xFF8
  2956                           tblptrh	equ	0xFF7
  2957                           tblptrl	equ	0xFF6
  2958                           tablat	equ	0xFF5
  2959                           prodh	equ	0xFF4
  2960                           prodl	equ	0xFF3
  2961                           intcon	equ	0xFF2
  2962                           postinc0	equ	0xFEE
  2963                           fsr0h	equ	0xFEA
  2964                           fsr0l	equ	0xFE9
  2965                           wreg	equ	0xFE8
  2966                           postinc1	equ	0xFE6
  2967                           fsr1h	equ	0xFE2
  2968                           fsr1l	equ	0xFE1
  2969                           bsr	equ	0xFE0
  2970                           postinc2	equ	0xFDE
  2971                           postdec2	equ	0xFDD
  2972                           fsr2h	equ	0xFDA
  2973                           fsr2l	equ	0xFD9
  2974                           status	equ	0xFD8
  2975                           
  2976 ;; *************** function ___fttol *****************
  2977 ;; Defined at:
  2978 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\fttol.c"
  2979 ;; Parameters:    Size  Location     Type
  2980 ;;  f1              3   28[BANK0 ] float 
  2981 ;; Auto vars:     Size  Location     Type
  2982 ;;  lval            4   38[BANK0 ] unsigned long 
  2983 ;;  exp1            1   42[BANK0 ] unsigned char 
  2984 ;;  sign1           1   37[BANK0 ] unsigned char 
  2985 ;; Return value:  Size  Location     Type
  2986 ;;                  4   28[BANK0 ] long 
  2987 ;; Registers used:
  2988 ;;		wreg, status,2, status,0
  2989 ;; Tracked objects:
  2990 ;;		On entry : 0/0
  2991 ;;		On exit  : 0/0
  2992 ;;		Unchanged: 0/0
  2993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2994 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2995 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2996 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2997 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2998 ;;Total ram usage:       15 bytes
  2999 ;; Hardware stack levels used:    1
  3000 ;; Hardware stack levels required when called:    4
  3001 ;; This function calls:
  3002 ;;		Nothing
  3003 ;; This function is called by:
  3004 ;;		_UpdateBoardVoltages
  3005 ;; This function uses a non-reentrant model
  3006 ;;
  3007                           
  3008                           	psect	text3
  3009  0011D6                     __ptext3:
  3010                           	opt stack 0
  3011  0011D6                     ___fttol:
  3012                           	opt stack 25
  3013                           
  3014                           ;incstack = 0
  3015  0011D6  0100               	movlb	0	; () banked
  3016  0011D8  C07E  F080         	movff	___fttol@f1+2,??___fttol
  3017  0011DC  0100               	movlb	0	; () banked
  3018  0011DE  6B81               	clrf	(??___fttol+1)& (0+255),b
  3019  0011E0  6B82               	clrf	(??___fttol+2)& (0+255),b
  3020  0011E2  0100               	movlb	0	; () banked
  3021  0011E4  0100               	movlb	0	; () banked
  3022  0011E6  357D               	rlcf	(___fttol@f1+1)& (0+255),w,b
  3023  0011E8  0100               	movlb	0	; () banked
  3024  0011EA  3780               	rlcf	??___fttol& (0+255),f,b
  3025  0011EC  E301               	bnc	u2401
  3026  0011EE  8181               	bsf	(??___fttol+1)& (0+255),0,b
  3027  0011F0                     u2401:
  3028  0011F0  0100               	movlb	0	; () banked
  3029  0011F2  5180               	movf	??___fttol& (0+255),w,b
  3030  0011F4  0100               	movlb	0	; () banked
  3031  0011F6  0100               	movlb	0	; () banked
  3032  0011F8  6F8A               	movwf	___fttol@exp1& (0+255),b
  3033  0011FA  0100               	movlb	0	; () banked
  3034  0011FC  678A               	tstfsz	___fttol@exp1& (0+255),b
  3035  0011FE  D00E               	goto	l2993
  3036                           
  3037                           ; BSR set to: 0
  3038  001200  0E00               	movlw	0
  3039  001202  0100               	movlb	0	; () banked
  3040  001204  0100               	movlb	0	; () banked
  3041  001206  6F7C               	movwf	?___fttol& (0+255),b
  3042  001208  0E00               	movlw	0
  3043  00120A  0100               	movlb	0	; () banked
  3044  00120C  6F7D               	movwf	(?___fttol+1)& (0+255),b
  3045  00120E  0E00               	movlw	0
  3046  001210  0100               	movlb	0	; () banked
  3047  001212  6F7E               	movwf	(?___fttol+2)& (0+255),b
  3048  001214  0E00               	movlw	0
  3049  001216  0100               	movlb	0	; () banked
  3050  001218  6F7F               	movwf	(?___fttol+3)& (0+255),b
  3051  00121A  0012               	return	
  3052  00121C                     l2993:
  3053                           
  3054                           ; BSR set to: 0
  3055  00121C  0E17               	movlw	23
  3056  00121E  0100               	movlb	0	; () banked
  3057  001220  6F80               	movwf	??___fttol& (0+255),b
  3058  001222  0100               	movlb	0	; () banked
  3059  001224  C07C  F081         	movff	___fttol@f1,??___fttol+1
  3060  001228  0100               	movlb	0	; () banked
  3061  00122A  C07D  F082         	movff	___fttol@f1+1,??___fttol+2
  3062  00122E  0100               	movlb	0	; () banked
  3063  001230  C07E  F083         	movff	___fttol@f1+2,??___fttol+3
  3064  001234  0100               	movlb	0	; () banked
  3065  001236  2980               	incf	??___fttol& (0+255),w,b
  3066  001238  0100               	movlb	0	; () banked
  3067  00123A  6F84               	movwf	(??___fttol+4)& (0+255),b
  3068  00123C  D005               	goto	u2420
  3069  00123E                     u2425:
  3070  00123E  0100               	movlb	0	; () banked
  3071  001240  90D8               	bcf	status,0,c
  3072  001242  3383               	rrcf	(??___fttol+3)& (0+255),f,b
  3073  001244  3382               	rrcf	(??___fttol+2)& (0+255),f,b
  3074  001246  3381               	rrcf	(??___fttol+1)& (0+255),f,b
  3075  001248                     u2420:
  3076  001248  0100               	movlb	0	; () banked
  3077  00124A  2F84               	decfsz	(??___fttol+4)& (0+255),f,b
  3078  00124C  D7F8               	goto	u2425
  3079  00124E  0100               	movlb	0	; () banked
  3080  001250  5181               	movf	(??___fttol+1)& (0+255),w,b
  3081  001252  0100               	movlb	0	; () banked
  3082  001254  0100               	movlb	0	; () banked
  3083  001256  6F85               	movwf	___fttol@sign1& (0+255),b
  3084                           
  3085                           ; BSR set to: 0
  3086  001258  0100               	movlb	0	; () banked
  3087  00125A  0100               	movlb	0	; () banked
  3088  00125C  8F7D               	bsf	(___fttol@f1+1)& (0+255),7,b
  3089                           
  3090                           ; BSR set to: 0
  3091  00125E  0EFF               	movlw	255
  3092  001260  0100               	movlb	0	; () banked
  3093  001262  0100               	movlb	0	; () banked
  3094  001264  177C               	andwf	___fttol@f1& (0+255),f,b
  3095  001266  0EFF               	movlw	255
  3096  001268  0100               	movlb	0	; () banked
  3097  00126A  0100               	movlb	0	; () banked
  3098  00126C  177D               	andwf	(___fttol@f1+1)& (0+255),f,b
  3099  00126E  0E00               	movlw	0
  3100  001270  0100               	movlb	0	; () banked
  3101  001272  0100               	movlb	0	; () banked
  3102  001274  177E               	andwf	(___fttol@f1+2)& (0+255),f,b
  3103                           
  3104                           ; BSR set to: 0
  3105  001276  0100               	movlb	0	; () banked
  3106  001278  0100               	movlb	0	; () banked
  3107  00127A  517C               	movf	___fttol@f1& (0+255),w,b
  3108  00127C  0100               	movlb	0	; () banked
  3109  00127E  0100               	movlb	0	; () banked
  3110  001280  6F86               	movwf	___fttol@lval& (0+255),b
  3111  001282  0100               	movlb	0	; () banked
  3112  001284  0100               	movlb	0	; () banked
  3113  001286  517D               	movf	(___fttol@f1+1)& (0+255),w,b
  3114  001288  0100               	movlb	0	; () banked
  3115  00128A  6F87               	movwf	(___fttol@lval+1)& (0+255),b
  3116  00128C  0100               	movlb	0	; () banked
  3117  00128E  517E               	movf	(___fttol@f1+2)& (0+255),w,b
  3118  001290  0100               	movlb	0	; () banked
  3119  001292  6F88               	movwf	(___fttol@lval+2)& (0+255),b
  3120  001294  0100               	movlb	0	; () banked
  3121  001296  6B89               	clrf	(___fttol@lval+3)& (0+255),b
  3122                           
  3123                           ; BSR set to: 0
  3124  001298  0E8E               	movlw	142
  3125  00129A  0100               	movlb	0	; () banked
  3126  00129C  0100               	movlb	0	; () banked
  3127  00129E  5F8A               	subwf	___fttol@exp1& (0+255),f,b
  3128                           
  3129                           ; BSR set to: 0
  3130  0012A0  0100               	movlb	0	; () banked
  3131  0012A2  0100               	movlb	0	; () banked
  3132  0012A4  AF8A               	btfss	___fttol@exp1& (0+255),7,b
  3133  0012A6  D029               	goto	l3015
  3134                           
  3135                           ; BSR set to: 0
  3136  0012A8  0100               	movlb	0	; () banked
  3137  0012AA  0100               	movlb	0	; () banked
  3138  0012AC  518A               	movf	___fttol@exp1& (0+255),w,b
  3139  0012AE  0A80               	xorlw	128
  3140  0012B0  0100               	movlb	0	; () banked
  3141  0012B2  6F80               	movwf	??___fttol& (0+255),b
  3142  0012B4  0EF1               	movlw	241
  3143  0012B6  0A80               	xorlw	128
  3144  0012B8  0100               	movlb	0	; () banked
  3145  0012BA  5D80               	subwf	??___fttol& (0+255),w,b
  3146  0012BC  B0D8               	btfsc	status,0,c
  3147  0012BE  D00E               	goto	l3011
  3148                           
  3149                           ; BSR set to: 0
  3150  0012C0  0E00               	movlw	0
  3151  0012C2  0100               	movlb	0	; () banked
  3152  0012C4  0100               	movlb	0	; () banked
  3153  0012C6  6F7C               	movwf	?___fttol& (0+255),b
  3154  0012C8  0E00               	movlw	0
  3155  0012CA  0100               	movlb	0	; () banked
  3156  0012CC  6F7D               	movwf	(?___fttol+1)& (0+255),b
  3157  0012CE  0E00               	movlw	0
  3158  0012D0  0100               	movlb	0	; () banked
  3159  0012D2  6F7E               	movwf	(?___fttol+2)& (0+255),b
  3160  0012D4  0E00               	movlw	0
  3161  0012D6  0100               	movlb	0	; () banked
  3162  0012D8  6F7F               	movwf	(?___fttol+3)& (0+255),b
  3163  0012DA  0012               	return	
  3164  0012DC                     l3011:
  3165                           
  3166                           ; BSR set to: 0
  3167  0012DC  0100               	movlb	0	; () banked
  3168  0012DE  90D8               	bcf	status,0,c
  3169  0012E0  0100               	movlb	0	; () banked
  3170  0012E2  3389               	rrcf	(___fttol@lval+3)& (0+255),f,b
  3171  0012E4  0100               	movlb	0	; () banked
  3172  0012E6  3388               	rrcf	(___fttol@lval+2)& (0+255),f,b
  3173  0012E8  0100               	movlb	0	; () banked
  3174  0012EA  3387               	rrcf	(___fttol@lval+1)& (0+255),f,b
  3175  0012EC  0100               	movlb	0	; () banked
  3176  0012EE  3386               	rrcf	___fttol@lval& (0+255),f,b
  3177                           
  3178                           ; BSR set to: 0
  3179  0012F0  0100               	movlb	0	; () banked
  3180  0012F2  0100               	movlb	0	; () banked
  3181  0012F4  3F8A               	incfsz	___fttol@exp1& (0+255),f,b
  3182  0012F6  D7F2               	goto	l3011
  3183  0012F8  D024               	goto	l3025
  3184  0012FA                     l3015:
  3185                           
  3186                           ; BSR set to: 0
  3187  0012FA  0E17               	movlw	23
  3188  0012FC  0100               	movlb	0	; () banked
  3189  0012FE  0100               	movlb	0	; () banked
  3190  001300  658A               	cpfsgt	___fttol@exp1& (0+255),b
  3191  001302  D01B               	goto	l3023
  3192                           
  3193                           ; BSR set to: 0
  3194  001304  0E00               	movlw	0
  3195  001306  0100               	movlb	0	; () banked
  3196  001308  0100               	movlb	0	; () banked
  3197  00130A  6F7C               	movwf	?___fttol& (0+255),b
  3198  00130C  0E00               	movlw	0
  3199  00130E  0100               	movlb	0	; () banked
  3200  001310  6F7D               	movwf	(?___fttol+1)& (0+255),b
  3201  001312  0E00               	movlw	0
  3202  001314  0100               	movlb	0	; () banked
  3203  001316  6F7E               	movwf	(?___fttol+2)& (0+255),b
  3204  001318  0E00               	movlw	0
  3205  00131A  0100               	movlb	0	; () banked
  3206  00131C  6F7F               	movwf	(?___fttol+3)& (0+255),b
  3207  00131E  0012               	return	
  3208  001320                     l3021:
  3209                           
  3210                           ; BSR set to: 0
  3211  001320  0100               	movlb	0	; () banked
  3212  001322  90D8               	bcf	status,0,c
  3213  001324  0100               	movlb	0	; () banked
  3214  001326  3786               	rlcf	___fttol@lval& (0+255),f,b
  3215  001328  0100               	movlb	0	; () banked
  3216  00132A  3787               	rlcf	(___fttol@lval+1)& (0+255),f,b
  3217  00132C  0100               	movlb	0	; () banked
  3218  00132E  3788               	rlcf	(___fttol@lval+2)& (0+255),f,b
  3219  001330  0100               	movlb	0	; () banked
  3220  001332  3789               	rlcf	(___fttol@lval+3)& (0+255),f,b
  3221  001334  0100               	movlb	0	; () banked
  3222  001336  0100               	movlb	0	; () banked
  3223  001338  078A               	decf	___fttol@exp1& (0+255),f,b
  3224  00133A                     l3023:
  3225                           
  3226                           ; BSR set to: 0
  3227  00133A  0100               	movlb	0	; () banked
  3228  00133C  0100               	movlb	0	; () banked
  3229  00133E  678A               	tstfsz	___fttol@exp1& (0+255),b
  3230  001340  D7EF               	goto	l3021
  3231  001342                     l3025:
  3232                           
  3233                           ; BSR set to: 0
  3234  001342  0100               	movlb	0	; () banked
  3235  001344  0100               	movlb	0	; () banked
  3236  001346  5185               	movf	___fttol@sign1& (0+255),w,b
  3237  001348  B4D8               	btfsc	status,2,c
  3238  00134A  D010               	goto	l3029
  3239                           
  3240                           ; BSR set to: 0
  3241  00134C  0100               	movlb	0	; () banked
  3242  00134E  0100               	movlb	0	; () banked
  3243  001350  1F89               	comf	(___fttol@lval+3)& (0+255),f,b
  3244  001352  0100               	movlb	0	; () banked
  3245  001354  1F88               	comf	(___fttol@lval+2)& (0+255),f,b
  3246  001356  0100               	movlb	0	; () banked
  3247  001358  1F87               	comf	(___fttol@lval+1)& (0+255),f,b
  3248  00135A  0100               	movlb	0	; () banked
  3249  00135C  6D86               	negf	___fttol@lval& (0+255),b
  3250  00135E  0E00               	movlw	0
  3251  001360  0100               	movlb	0	; () banked
  3252  001362  2387               	addwfc	(___fttol@lval+1)& (0+255),f,b
  3253  001364  0100               	movlb	0	; () banked
  3254  001366  2388               	addwfc	(___fttol@lval+2)& (0+255),f,b
  3255  001368  0100               	movlb	0	; () banked
  3256  00136A  2389               	addwfc	(___fttol@lval+3)& (0+255),f,b
  3257  00136C                     l3029:
  3258                           
  3259                           ; BSR set to: 0
  3260  00136C  C086  F07C         	movff	___fttol@lval,?___fttol
  3261  001370  C087  F07D         	movff	___fttol@lval+1,?___fttol+1
  3262  001374  C088  F07E         	movff	___fttol@lval+2,?___fttol+2
  3263  001378  C089  F07F         	movff	___fttol@lval+3,?___fttol+3
  3264  00137C  0012               	return	
  3265  00137E                     __end_of___fttol:
  3266                           	opt stack 0
  3267                           pclatu	equ	0xFFB
  3268                           pclath	equ	0xFFA
  3269                           tblptru	equ	0xFF8
  3270                           tblptrh	equ	0xFF7
  3271                           tblptrl	equ	0xFF6
  3272                           tablat	equ	0xFF5
  3273                           prodh	equ	0xFF4
  3274                           prodl	equ	0xFF3
  3275                           intcon	equ	0xFF2
  3276                           postinc0	equ	0xFEE
  3277                           fsr0h	equ	0xFEA
  3278                           fsr0l	equ	0xFE9
  3279                           wreg	equ	0xFE8
  3280                           postinc1	equ	0xFE6
  3281                           fsr1h	equ	0xFE2
  3282                           fsr1l	equ	0xFE1
  3283                           bsr	equ	0xFE0
  3284                           postinc2	equ	0xFDE
  3285                           postdec2	equ	0xFDD
  3286                           fsr2h	equ	0xFDA
  3287                           fsr2l	equ	0xFD9
  3288                           status	equ	0xFD8
  3289                           
  3290 ;; *************** function ___ftmul *****************
  3291 ;; Defined at:
  3292 ;;		line 51 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\ftmul.c"
  3293 ;; Parameters:    Size  Location     Type
  3294 ;;  f1              3   13[BANK0 ] float 
  3295 ;;  f2              3   16[BANK0 ] float 
  3296 ;; Auto vars:     Size  Location     Type
  3297 ;;  f3_as_produc    3   23[BANK0 ] unsigned um
  3298 ;;  sign            1   27[BANK0 ] unsigned char 
  3299 ;;  cntr            1   26[BANK0 ] unsigned char 
  3300 ;;  exp             1   22[BANK0 ] unsigned char 
  3301 ;; Return value:  Size  Location     Type
  3302 ;;                  3   13[BANK0 ] float 
  3303 ;; Registers used:
  3304 ;;		wreg, status,2, status,0, cstack
  3305 ;; Tracked objects:
  3306 ;;		On entry : 0/0
  3307 ;;		On exit  : 0/0
  3308 ;;		Unchanged: 0/0
  3309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3310 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3311 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3312 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3313 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3314 ;;Total ram usage:       15 bytes
  3315 ;; Hardware stack levels used:    1
  3316 ;; Hardware stack levels required when called:    5
  3317 ;; This function calls:
  3318 ;;		___ftpack
  3319 ;; This function is called by:
  3320 ;;		_UpdateBoardVoltages
  3321 ;; This function uses a non-reentrant model
  3322 ;;
  3323                           
  3324                           	psect	text4
  3325  000E26                     __ptext4:
  3326                           	opt stack 0
  3327  000E26                     ___ftmul:
  3328                           	opt stack 24
  3329                           
  3330                           ; BSR set to: 0
  3331                           ;incstack = 0
  3332  000E26  0100               	movlb	0	; () banked
  3333  000E28  C06F  F073         	movff	___ftmul@f1+2,??___ftmul
  3334  000E2C  0100               	movlb	0	; () banked
  3335  000E2E  6B74               	clrf	(??___ftmul+1)& (0+255),b
  3336  000E30  6B75               	clrf	(??___ftmul+2)& (0+255),b
  3337  000E32  0100               	movlb	0	; () banked
  3338  000E34  0100               	movlb	0	; () banked
  3339  000E36  356E               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  3340  000E38  0100               	movlb	0	; () banked
  3341  000E3A  3773               	rlcf	??___ftmul& (0+255),f,b
  3342  000E3C  E301               	bnc	u2341
  3343  000E3E  8174               	bsf	(??___ftmul+1)& (0+255),0,b
  3344  000E40                     u2341:
  3345  000E40  0100               	movlb	0	; () banked
  3346  000E42  5173               	movf	??___ftmul& (0+255),w,b
  3347  000E44  0100               	movlb	0	; () banked
  3348  000E46  0100               	movlb	0	; () banked
  3349  000E48  6F76               	movwf	___ftmul@exp& (0+255),b
  3350  000E4A  0100               	movlb	0	; () banked
  3351  000E4C  6776               	tstfsz	___ftmul@exp& (0+255),b
  3352  000E4E  D00D               	goto	l2945
  3353                           
  3354                           ; BSR set to: 0
  3355  000E50  0E00               	movlw	0
  3356  000E52  0100               	movlb	0	; () banked
  3357  000E54  0100               	movlb	0	; () banked
  3358  000E56  6F6D               	movwf	?___ftmul& (0+255),b
  3359  000E58  0E00               	movlw	0
  3360  000E5A  0100               	movlb	0	; () banked
  3361  000E5C  0100               	movlb	0	; () banked
  3362  000E5E  6F6E               	movwf	(?___ftmul+1)& (0+255),b
  3363  000E60  0E00               	movlw	0
  3364  000E62  0100               	movlb	0	; () banked
  3365  000E64  0100               	movlb	0	; () banked
  3366  000E66  6F6F               	movwf	(?___ftmul+2)& (0+255),b
  3367  000E68  0012               	return	
  3368  000E6A                     l2945:
  3369                           
  3370                           ; BSR set to: 0
  3371  000E6A  0100               	movlb	0	; () banked
  3372  000E6C  C072  F073         	movff	___ftmul@f2+2,??___ftmul
  3373  000E70  0100               	movlb	0	; () banked
  3374  000E72  6B74               	clrf	(??___ftmul+1)& (0+255),b
  3375  000E74  6B75               	clrf	(??___ftmul+2)& (0+255),b
  3376  000E76  0100               	movlb	0	; () banked
  3377  000E78  0100               	movlb	0	; () banked
  3378  000E7A  3571               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  3379  000E7C  0100               	movlb	0	; () banked
  3380  000E7E  3773               	rlcf	??___ftmul& (0+255),f,b
  3381  000E80  E301               	bnc	u2361
  3382  000E82  8174               	bsf	(??___ftmul+1)& (0+255),0,b
  3383  000E84                     u2361:
  3384  000E84  0100               	movlb	0	; () banked
  3385  000E86  5173               	movf	??___ftmul& (0+255),w,b
  3386  000E88  0100               	movlb	0	; () banked
  3387  000E8A  0100               	movlb	0	; () banked
  3388  000E8C  6F7B               	movwf	___ftmul@sign& (0+255),b
  3389  000E8E  0100               	movlb	0	; () banked
  3390  000E90  677B               	tstfsz	___ftmul@sign& (0+255),b
  3391  000E92  D00D               	goto	l2951
  3392                           
  3393                           ; BSR set to: 0
  3394  000E94  0E00               	movlw	0
  3395  000E96  0100               	movlb	0	; () banked
  3396  000E98  0100               	movlb	0	; () banked
  3397  000E9A  6F6D               	movwf	?___ftmul& (0+255),b
  3398  000E9C  0E00               	movlw	0
  3399  000E9E  0100               	movlb	0	; () banked
  3400  000EA0  0100               	movlb	0	; () banked
  3401  000EA2  6F6E               	movwf	(?___ftmul+1)& (0+255),b
  3402  000EA4  0E00               	movlw	0
  3403  000EA6  0100               	movlb	0	; () banked
  3404  000EA8  0100               	movlb	0	; () banked
  3405  000EAA  6F6F               	movwf	(?___ftmul+2)& (0+255),b
  3406  000EAC  0012               	return	
  3407  000EAE                     l2951:
  3408                           
  3409                           ; BSR set to: 0
  3410  000EAE  0100               	movlb	0	; () banked
  3411  000EB0  0100               	movlb	0	; () banked
  3412  000EB2  517B               	movf	___ftmul@sign& (0+255),w,b
  3413  000EB4  0F7B               	addlw	123
  3414  000EB6  0100               	movlb	0	; () banked
  3415  000EB8  0100               	movlb	0	; () banked
  3416  000EBA  2776               	addwf	___ftmul@exp& (0+255),f,b
  3417                           
  3418                           ; BSR set to: 0
  3419  000EBC  C06F  F07B         	movff	___ftmul@f1+2,___ftmul@sign
  3420  000EC0  0100               	movlb	0	; () banked
  3421  000EC2  0100               	movlb	0	; () banked
  3422  000EC4  5172               	movf	(___ftmul@f2+2)& (0+255),w,b
  3423  000EC6  0100               	movlb	0	; () banked
  3424  000EC8  0100               	movlb	0	; () banked
  3425  000ECA  1B7B               	xorwf	___ftmul@sign& (0+255),f,b
  3426  000ECC  0E80               	movlw	128
  3427  000ECE  0100               	movlb	0	; () banked
  3428  000ED0  0100               	movlb	0	; () banked
  3429  000ED2  177B               	andwf	___ftmul@sign& (0+255),f,b
  3430                           
  3431                           ; BSR set to: 0
  3432  000ED4  0100               	movlb	0	; () banked
  3433  000ED6  0100               	movlb	0	; () banked
  3434  000ED8  8F6E               	bsf	(___ftmul@f1+1)& (0+255),7,b
  3435                           
  3436                           ; BSR set to: 0
  3437  000EDA  0100               	movlb	0	; () banked
  3438  000EDC  0100               	movlb	0	; () banked
  3439  000EDE  8F71               	bsf	(___ftmul@f2+1)& (0+255),7,b
  3440                           
  3441                           ; BSR set to: 0
  3442  000EE0  0EFF               	movlw	255
  3443  000EE2  0100               	movlb	0	; () banked
  3444  000EE4  0100               	movlb	0	; () banked
  3445  000EE6  1770               	andwf	___ftmul@f2& (0+255),f,b
  3446  000EE8  0EFF               	movlw	255
  3447  000EEA  0100               	movlb	0	; () banked
  3448  000EEC  0100               	movlb	0	; () banked
  3449  000EEE  1771               	andwf	(___ftmul@f2+1)& (0+255),f,b
  3450  000EF0  0E00               	movlw	0
  3451  000EF2  0100               	movlb	0	; () banked
  3452  000EF4  0100               	movlb	0	; () banked
  3453  000EF6  1772               	andwf	(___ftmul@f2+2)& (0+255),f,b
  3454                           
  3455                           ; BSR set to: 0
  3456  000EF8  0E00               	movlw	0
  3457  000EFA  0100               	movlb	0	; () banked
  3458  000EFC  0100               	movlb	0	; () banked
  3459  000EFE  6F77               	movwf	___ftmul@f3_as_product& (0+255),b
  3460  000F00  0E00               	movlw	0
  3461  000F02  0100               	movlb	0	; () banked
  3462  000F04  0100               	movlb	0	; () banked
  3463  000F06  6F78               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  3464  000F08  0E00               	movlw	0
  3465  000F0A  0100               	movlb	0	; () banked
  3466  000F0C  0100               	movlb	0	; () banked
  3467  000F0E  6F79               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  3468                           
  3469                           ; BSR set to: 0
  3470  000F10  0100               	movlb	0	; () banked
  3471  000F12  6F73               	movwf	??___ftmul& (0+255),b
  3472  000F14  0E07               	movlw	7
  3473  000F16  0100               	movlb	0	; () banked
  3474  000F18  0100               	movlb	0	; () banked
  3475  000F1A  6F7A               	movwf	___ftmul@cntr& (0+255),b
  3476  000F1C  0100               	movlb	0	; () banked
  3477  000F1E  5173               	movf	??___ftmul& (0+255),w,b
  3478  000F20                     l2965:
  3479                           
  3480                           ; BSR set to: 0
  3481  000F20  0100               	movlb	0	; () banked
  3482  000F22  0100               	movlb	0	; () banked
  3483  000F24  A16D               	btfss	___ftmul@f1& (0+255),0,b
  3484  000F26  D012               	goto	l2969
  3485                           
  3486                           ; BSR set to: 0
  3487  000F28  0100               	movlb	0	; () banked
  3488  000F2A  0100               	movlb	0	; () banked
  3489  000F2C  5170               	movf	___ftmul@f2& (0+255),w,b
  3490  000F2E  0100               	movlb	0	; () banked
  3491  000F30  0100               	movlb	0	; () banked
  3492  000F32  2777               	addwf	___ftmul@f3_as_product& (0+255),f,b
  3493  000F34  0100               	movlb	0	; () banked
  3494  000F36  0100               	movlb	0	; () banked
  3495  000F38  5171               	movf	(___ftmul@f2+1)& (0+255),w,b
  3496  000F3A  0100               	movlb	0	; () banked
  3497  000F3C  0100               	movlb	0	; () banked
  3498  000F3E  2378               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  3499  000F40  0100               	movlb	0	; () banked
  3500  000F42  0100               	movlb	0	; () banked
  3501  000F44  5172               	movf	(___ftmul@f2+2)& (0+255),w,b
  3502  000F46  0100               	movlb	0	; () banked
  3503  000F48  0100               	movlb	0	; () banked
  3504  000F4A  2379               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  3505  000F4C                     l2969:
  3506                           
  3507                           ; BSR set to: 0
  3508  000F4C  0100               	movlb	0	; () banked
  3509  000F4E  90D8               	bcf	status,0,c
  3510  000F50  0100               	movlb	0	; () banked
  3511  000F52  336F               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  3512  000F54  0100               	movlb	0	; () banked
  3513  000F56  336E               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  3514  000F58  0100               	movlb	0	; () banked
  3515  000F5A  336D               	rrcf	___ftmul@f1& (0+255),f,b
  3516  000F5C  0100               	movlb	0	; () banked
  3517  000F5E  90D8               	bcf	status,0,c
  3518  000F60  0100               	movlb	0	; () banked
  3519  000F62  3770               	rlcf	___ftmul@f2& (0+255),f,b
  3520  000F64  0100               	movlb	0	; () banked
  3521  000F66  3771               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  3522  000F68  0100               	movlb	0	; () banked
  3523  000F6A  3772               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  3524                           
  3525                           ; BSR set to: 0
  3526  000F6C  0100               	movlb	0	; () banked
  3527  000F6E  0100               	movlb	0	; () banked
  3528  000F70  2F7A               	decfsz	___ftmul@cntr& (0+255),f,b
  3529  000F72  D7D6               	goto	l2965
  3530                           
  3531                           ; BSR set to: 0
  3532                           
  3533                           ; BSR set to: 0
  3534  000F74  0100               	movlb	0	; () banked
  3535  000F76  6F73               	movwf	??___ftmul& (0+255),b
  3536  000F78  0E09               	movlw	9
  3537  000F7A  0100               	movlb	0	; () banked
  3538  000F7C  0100               	movlb	0	; () banked
  3539  000F7E  6F7A               	movwf	___ftmul@cntr& (0+255),b
  3540  000F80  0100               	movlb	0	; () banked
  3541  000F82  5173               	movf	??___ftmul& (0+255),w,b
  3542  000F84                     l2975:
  3543                           
  3544                           ; BSR set to: 0
  3545  000F84  0100               	movlb	0	; () banked
  3546  000F86  0100               	movlb	0	; () banked
  3547  000F88  A16D               	btfss	___ftmul@f1& (0+255),0,b
  3548  000F8A  D012               	goto	l2979
  3549                           
  3550                           ; BSR set to: 0
  3551  000F8C  0100               	movlb	0	; () banked
  3552  000F8E  0100               	movlb	0	; () banked
  3553  000F90  5170               	movf	___ftmul@f2& (0+255),w,b
  3554  000F92  0100               	movlb	0	; () banked
  3555  000F94  0100               	movlb	0	; () banked
  3556  000F96  2777               	addwf	___ftmul@f3_as_product& (0+255),f,b
  3557  000F98  0100               	movlb	0	; () banked
  3558  000F9A  0100               	movlb	0	; () banked
  3559  000F9C  5171               	movf	(___ftmul@f2+1)& (0+255),w,b
  3560  000F9E  0100               	movlb	0	; () banked
  3561  000FA0  0100               	movlb	0	; () banked
  3562  000FA2  2378               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  3563  000FA4  0100               	movlb	0	; () banked
  3564  000FA6  0100               	movlb	0	; () banked
  3565  000FA8  5172               	movf	(___ftmul@f2+2)& (0+255),w,b
  3566  000FAA  0100               	movlb	0	; () banked
  3567  000FAC  0100               	movlb	0	; () banked
  3568  000FAE  2379               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  3569  000FB0                     l2979:
  3570                           
  3571                           ; BSR set to: 0
  3572  000FB0  0100               	movlb	0	; () banked
  3573  000FB2  90D8               	bcf	status,0,c
  3574  000FB4  0100               	movlb	0	; () banked
  3575  000FB6  336F               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  3576  000FB8  0100               	movlb	0	; () banked
  3577  000FBA  336E               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  3578  000FBC  0100               	movlb	0	; () banked
  3579  000FBE  336D               	rrcf	___ftmul@f1& (0+255),f,b
  3580  000FC0  0100               	movlb	0	; () banked
  3581  000FC2  90D8               	bcf	status,0,c
  3582  000FC4  0100               	movlb	0	; () banked
  3583  000FC6  3379               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  3584  000FC8  0100               	movlb	0	; () banked
  3585  000FCA  3378               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  3586  000FCC  0100               	movlb	0	; () banked
  3587  000FCE  3377               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  3588                           
  3589                           ; BSR set to: 0
  3590  000FD0  0100               	movlb	0	; () banked
  3591  000FD2  0100               	movlb	0	; () banked
  3592  000FD4  2F7A               	decfsz	___ftmul@cntr& (0+255),f,b
  3593  000FD6  D7D6               	goto	l2975
  3594                           
  3595                           ; BSR set to: 0
  3596                           
  3597                           ; BSR set to: 0
  3598  000FD8  C077  F060         	movff	___ftmul@f3_as_product,___ftpack@arg
  3599  000FDC  C078  F061         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  3600  000FE0  C079  F062         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  3601  000FE4  C076  F063         	movff	___ftmul@exp,___ftpack@exp
  3602  000FE8  C07B  F064         	movff	___ftmul@sign,___ftpack@sign
  3603  000FEC  EC2C  F00B         	call	___ftpack	;wreg free
  3604  000FF0  C060  F06D         	movff	?___ftpack,?___ftmul
  3605  000FF4  C061  F06E         	movff	?___ftpack+1,?___ftmul+1
  3606  000FF8  C062  F06F         	movff	?___ftpack+2,?___ftmul+2
  3607  000FFC  0012               	return	
  3608  000FFE                     __end_of___ftmul:
  3609                           	opt stack 0
  3610                           pclatu	equ	0xFFB
  3611                           pclath	equ	0xFFA
  3612                           tblptru	equ	0xFF8
  3613                           tblptrh	equ	0xFF7
  3614                           tblptrl	equ	0xFF6
  3615                           tablat	equ	0xFF5
  3616                           prodh	equ	0xFF4
  3617                           prodl	equ	0xFF3
  3618                           intcon	equ	0xFF2
  3619                           postinc0	equ	0xFEE
  3620                           fsr0h	equ	0xFEA
  3621                           fsr0l	equ	0xFE9
  3622                           wreg	equ	0xFE8
  3623                           postinc1	equ	0xFE6
  3624                           fsr1h	equ	0xFE2
  3625                           fsr1l	equ	0xFE1
  3626                           bsr	equ	0xFE0
  3627                           postinc2	equ	0xFDE
  3628                           postdec2	equ	0xFDD
  3629                           fsr2h	equ	0xFDA
  3630                           fsr2l	equ	0xFD9
  3631                           status	equ	0xFD8
  3632                           
  3633 ;; *************** function ___ftpack *****************
  3634 ;; Defined at:
  3635 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\float.c"
  3636 ;; Parameters:    Size  Location     Type
  3637 ;;  arg             3    0[BANK0 ] unsigned um
  3638 ;;  exp             1    3[BANK0 ] unsigned char 
  3639 ;;  sign            1    4[BANK0 ] unsigned char 
  3640 ;; Auto vars:     Size  Location     Type
  3641 ;;		None
  3642 ;; Return value:  Size  Location     Type
  3643 ;;                  3    0[BANK0 ] float 
  3644 ;; Registers used:
  3645 ;;		wreg, status,2, status,0
  3646 ;; Tracked objects:
  3647 ;;		On entry : 0/0
  3648 ;;		On exit  : 0/0
  3649 ;;		Unchanged: 0/0
  3650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3651 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3653 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3654 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3655 ;;Total ram usage:        8 bytes
  3656 ;; Hardware stack levels used:    1
  3657 ;; Hardware stack levels required when called:    4
  3658 ;; This function calls:
  3659 ;;		Nothing
  3660 ;; This function is called by:
  3661 ;;		___ftmul
  3662 ;;		___lwtoft
  3663 ;; This function uses a non-reentrant model
  3664 ;;
  3665                           
  3666                           	psect	text5
  3667  001658                     __ptext5:
  3668                           	opt stack 0
  3669  001658                     ___ftpack:
  3670                           	opt stack 24
  3671                           
  3672                           ;incstack = 0
  3673  001658  0100               	movlb	0	; () banked
  3674  00165A  0100               	movlb	0	; () banked
  3675  00165C  5163               	movf	___ftpack@exp& (0+255),w,b
  3676  00165E  B4D8               	btfsc	status,2,c
  3677  001660  D009               	goto	l2909
  3678                           
  3679                           ; BSR set to: 0
  3680  001662  0100               	movlb	0	; () banked
  3681  001664  0100               	movlb	0	; () banked
  3682  001666  5160               	movf	___ftpack@arg& (0+255),w,b
  3683  001668  0100               	movlb	0	; () banked
  3684  00166A  1161               	iorwf	(___ftpack@arg+1)& (0+255),w,b
  3685  00166C  0100               	movlb	0	; () banked
  3686  00166E  1162               	iorwf	(___ftpack@arg+2)& (0+255),w,b
  3687  001670  A4D8               	btfss	status,2,c
  3688  001672  D018               	goto	l2915
  3689  001674                     l2909:
  3690                           
  3691                           ; BSR set to: 0
  3692  001674  0E00               	movlw	0
  3693  001676  0100               	movlb	0	; () banked
  3694  001678  0100               	movlb	0	; () banked
  3695  00167A  6F60               	movwf	?___ftpack& (0+255),b
  3696  00167C  0E00               	movlw	0
  3697  00167E  0100               	movlb	0	; () banked
  3698  001680  0100               	movlb	0	; () banked
  3699  001682  6F61               	movwf	(?___ftpack+1)& (0+255),b
  3700  001684  0E00               	movlw	0
  3701  001686  0100               	movlb	0	; () banked
  3702  001688  0100               	movlb	0	; () banked
  3703  00168A  6F62               	movwf	(?___ftpack+2)& (0+255),b
  3704  00168C  0012               	return	
  3705  00168E                     l2913:
  3706                           
  3707                           ; BSR set to: 0
  3708  00168E  0100               	movlb	0	; () banked
  3709  001690  0100               	movlb	0	; () banked
  3710  001692  2B63               	incf	___ftpack@exp& (0+255),f,b
  3711  001694  0100               	movlb	0	; () banked
  3712  001696  90D8               	bcf	status,0,c
  3713  001698  0100               	movlb	0	; () banked
  3714  00169A  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  3715  00169C  0100               	movlb	0	; () banked
  3716  00169E  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  3717  0016A0  0100               	movlb	0	; () banked
  3718  0016A2  3360               	rrcf	___ftpack@arg& (0+255),f,b
  3719  0016A4                     l2915:
  3720                           
  3721                           ; BSR set to: 0
  3722  0016A4  0E00               	movlw	0
  3723  0016A6  0100               	movlb	0	; () banked
  3724  0016A8  0100               	movlb	0	; () banked
  3725  0016AA  1560               	andwf	___ftpack@arg& (0+255),w,b
  3726  0016AC  0100               	movlb	0	; () banked
  3727  0016AE  6F65               	movwf	??___ftpack& (0+255),b
  3728  0016B0  0E00               	movlw	0
  3729  0016B2  0100               	movlb	0	; () banked
  3730  0016B4  0100               	movlb	0	; () banked
  3731  0016B6  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
  3732  0016B8  0100               	movlb	0	; () banked
  3733  0016BA  6F66               	movwf	(??___ftpack+1)& (0+255),b
  3734  0016BC  0EFE               	movlw	254
  3735  0016BE  0100               	movlb	0	; () banked
  3736  0016C0  0100               	movlb	0	; () banked
  3737  0016C2  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
  3738  0016C4  0100               	movlb	0	; () banked
  3739  0016C6  6F67               	movwf	(??___ftpack+2)& (0+255),b
  3740  0016C8  0100               	movlb	0	; () banked
  3741  0016CA  5165               	movf	??___ftpack& (0+255),w,b
  3742  0016CC  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
  3743  0016CE  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
  3744  0016D0  B4D8               	btfsc	status,2,c
  3745  0016D2  D018               	goto	l2921
  3746  0016D4  D7DC               	goto	l2913
  3747  0016D6                     l2917:
  3748                           
  3749                           ; BSR set to: 0
  3750  0016D6  0100               	movlb	0	; () banked
  3751  0016D8  0100               	movlb	0	; () banked
  3752  0016DA  2B63               	incf	___ftpack@exp& (0+255),f,b
  3753                           
  3754                           ; BSR set to: 0
  3755  0016DC  0E01               	movlw	1
  3756  0016DE  0100               	movlb	0	; () banked
  3757  0016E0  0100               	movlb	0	; () banked
  3758  0016E2  2760               	addwf	___ftpack@arg& (0+255),f,b
  3759  0016E4  0E00               	movlw	0
  3760  0016E6  0100               	movlb	0	; () banked
  3761  0016E8  0100               	movlb	0	; () banked
  3762  0016EA  2361               	addwfc	(___ftpack@arg+1)& (0+255),f,b
  3763  0016EC  0E00               	movlw	0
  3764  0016EE  0100               	movlb	0	; () banked
  3765  0016F0  0100               	movlb	0	; () banked
  3766  0016F2  2362               	addwfc	(___ftpack@arg+2)& (0+255),f,b
  3767  0016F4  0100               	movlb	0	; () banked
  3768  0016F6  90D8               	bcf	status,0,c
  3769  0016F8  0100               	movlb	0	; () banked
  3770  0016FA  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  3771  0016FC  0100               	movlb	0	; () banked
  3772  0016FE  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  3773  001700  0100               	movlb	0	; () banked
  3774  001702  3360               	rrcf	___ftpack@arg& (0+255),f,b
  3775  001704                     l2921:
  3776                           
  3777                           ; BSR set to: 0
  3778  001704  0E00               	movlw	0
  3779  001706  0100               	movlb	0	; () banked
  3780  001708  0100               	movlb	0	; () banked
  3781  00170A  1560               	andwf	___ftpack@arg& (0+255),w,b
  3782  00170C  0100               	movlb	0	; () banked
  3783  00170E  6F65               	movwf	??___ftpack& (0+255),b
  3784  001710  0E00               	movlw	0
  3785  001712  0100               	movlb	0	; () banked
  3786  001714  0100               	movlb	0	; () banked
  3787  001716  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
  3788  001718  0100               	movlb	0	; () banked
  3789  00171A  6F66               	movwf	(??___ftpack+1)& (0+255),b
  3790  00171C  0EFF               	movlw	255
  3791  00171E  0100               	movlb	0	; () banked
  3792  001720  0100               	movlb	0	; () banked
  3793  001722  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
  3794  001724  0100               	movlb	0	; () banked
  3795  001726  6F67               	movwf	(??___ftpack+2)& (0+255),b
  3796  001728  0100               	movlb	0	; () banked
  3797  00172A  5165               	movf	??___ftpack& (0+255),w,b
  3798  00172C  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
  3799  00172E  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
  3800  001730  B4D8               	btfsc	status,2,c
  3801  001732  D00C               	goto	l2925
  3802  001734  D7D0               	goto	l2917
  3803  001736                     l2923:
  3804                           
  3805                           ; BSR set to: 0
  3806  001736  0100               	movlb	0	; () banked
  3807  001738  0100               	movlb	0	; () banked
  3808  00173A  0763               	decf	___ftpack@exp& (0+255),f,b
  3809  00173C  0100               	movlb	0	; () banked
  3810  00173E  90D8               	bcf	status,0,c
  3811  001740  0100               	movlb	0	; () banked
  3812  001742  3760               	rlcf	___ftpack@arg& (0+255),f,b
  3813  001744  0100               	movlb	0	; () banked
  3814  001746  3761               	rlcf	(___ftpack@arg+1)& (0+255),f,b
  3815  001748  0100               	movlb	0	; () banked
  3816  00174A  3762               	rlcf	(___ftpack@arg+2)& (0+255),f,b
  3817  00174C                     l2925:
  3818                           
  3819                           ; BSR set to: 0
  3820  00174C  0100               	movlb	0	; () banked
  3821  00174E  0100               	movlb	0	; () banked
  3822  001750  AF61               	btfss	(___ftpack@arg+1)& (0+255),7,b
  3823  001752  D7F1               	goto	l2923
  3824                           
  3825                           ; BSR set to: 0
  3826  001754  0100               	movlb	0	; () banked
  3827  001756  0100               	movlb	0	; () banked
  3828  001758  B163               	btfsc	___ftpack@exp& (0+255),0,b
  3829  00175A  D003               	goto	l2929
  3830                           
  3831                           ; BSR set to: 0
  3832  00175C  0100               	movlb	0	; () banked
  3833  00175E  0100               	movlb	0	; () banked
  3834  001760  9F61               	bcf	(___ftpack@arg+1)& (0+255),7,b
  3835  001762                     l2929:
  3836                           
  3837                           ; BSR set to: 0
  3838  001762  0100               	movlb	0	; () banked
  3839  001764  90D8               	bcf	status,0,c
  3840  001766  3363               	rrcf	___ftpack@exp& (0+255),f,b
  3841  001768  0100               	movlb	0	; () banked
  3842  00176A  0100               	movlb	0	; () banked
  3843  00176C  5163               	movf	___ftpack@exp& (0+255),w,b
  3844  00176E  0100               	movlb	0	; () banked
  3845  001770  0100               	movlb	0	; () banked
  3846  001772  1362               	iorwf	(___ftpack@arg+2)& (0+255),f,b
  3847                           
  3848                           ; BSR set to: 0
  3849  001774  0100               	movlb	0	; () banked
  3850  001776  0100               	movlb	0	; () banked
  3851  001778  5164               	movf	___ftpack@sign& (0+255),w,b
  3852  00177A  B4D8               	btfsc	status,2,c
  3853  00177C  D003               	goto	l2935
  3854                           
  3855                           ; BSR set to: 0
  3856  00177E  0100               	movlb	0	; () banked
  3857  001780  0100               	movlb	0	; () banked
  3858  001782  8F62               	bsf	(___ftpack@arg+2)& (0+255),7,b
  3859  001784                     l2935:
  3860                           
  3861                           ; BSR set to: 0
  3862  001784  C060  F060         	movff	___ftpack@arg,?___ftpack
  3863  001788  C061  F061         	movff	___ftpack@arg+1,?___ftpack+1
  3864  00178C  C062  F062         	movff	___ftpack@arg+2,?___ftpack+2
  3865  001790  0012               	return	
  3866  001792                     __end_of___ftpack:
  3867                           	opt stack 0
  3868                           pclatu	equ	0xFFB
  3869                           pclath	equ	0xFFA
  3870                           tblptru	equ	0xFF8
  3871                           tblptrh	equ	0xFF7
  3872                           tblptrl	equ	0xFF6
  3873                           tablat	equ	0xFF5
  3874                           prodh	equ	0xFF4
  3875                           prodl	equ	0xFF3
  3876                           intcon	equ	0xFF2
  3877                           postinc0	equ	0xFEE
  3878                           fsr0h	equ	0xFEA
  3879                           fsr0l	equ	0xFE9
  3880                           wreg	equ	0xFE8
  3881                           postinc1	equ	0xFE6
  3882                           fsr1h	equ	0xFE2
  3883                           fsr1l	equ	0xFE1
  3884                           bsr	equ	0xFE0
  3885                           postinc2	equ	0xFDE
  3886                           postdec2	equ	0xFDD
  3887                           fsr2h	equ	0xFDA
  3888                           fsr2l	equ	0xFD9
  3889                           status	equ	0xFD8
  3890                           
  3891 ;; *************** function _WriteISPPACRegister *****************
  3892 ;; Defined at:
  3893 ;;		line 226 in file "system.c"
  3894 ;; Parameters:    Size  Location     Type
  3895 ;;  LocalAdress     1    wreg     unsigned char 
  3896 ;;  LocalData       1    2[BANK0 ] unsigned char 
  3897 ;; Auto vars:     Size  Location     Type
  3898 ;;  LocalAdress     1    3[BANK0 ] unsigned char 
  3899 ;; Return value:  Size  Location     Type
  3900 ;;		None               void
  3901 ;; Registers used:
  3902 ;;		wreg, status,2, status,0, cstack
  3903 ;; Tracked objects:
  3904 ;;		On entry : 0/0
  3905 ;;		On exit  : 0/0
  3906 ;;		Unchanged: 0/0
  3907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3908 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3909 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3911 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3912 ;;Total ram usage:        2 bytes
  3913 ;; Hardware stack levels used:    1
  3914 ;; Hardware stack levels required when called:    6
  3915 ;; This function calls:
  3916 ;;		_Configure_I2C
  3917 ;;		_Idle_I2C
  3918 ;;		_NotAck_I2C
  3919 ;;		_Start_I2C
  3920 ;;		_Stop_I2C
  3921 ;;		_Write_I2C
  3922 ;; This function is called by:
  3923 ;;		_UpdateBoardVoltages
  3924 ;; This function uses a non-reentrant model
  3925 ;;
  3926                           
  3927                           	psect	text6
  3928  001F30                     __ptext6:
  3929                           	opt stack 0
  3930  001F30                     _WriteISPPACRegister:
  3931                           	opt stack 23
  3932                           
  3933                           ; BSR set to: 0
  3934                           ;incstack = 0
  3935                           ;WriteISPPACRegister@LocalAdress stored from wreg
  3936  001F30  CFE8 F063          	movff	wreg,WriteISPPACRegister@LocalAdress
  3937                           
  3938                           ;system.c: 229: Configure_I2C();
  3939  001F34  EC24  F010         	call	_Configure_I2C	;wreg free
  3940                           
  3941                           ;system.c: 230: Idle_I2C();
  3942  001F38  EC4B  F010         	call	_Idle_I2C	;wreg free
  3943                           
  3944                           ;system.c: 231: Start_I2C();
  3945  001F3C  EC6B  F010         	call	_Start_I2C	;wreg free
  3946                           
  3947                           ;system.c: 232: Idle_I2C();
  3948  001F40  EC4B  F010         	call	_Idle_I2C	;wreg free
  3949                           
  3950                           ;system.c: 233: Write_I2C(0x00<<1 | 0);
  3951  001F44  0E00               	movlw	0
  3952  001F46  EC3F  F010         	call	_Write_I2C
  3953                           
  3954                           ;system.c: 234: Idle_I2C();
  3955  001F4A  EC4B  F010         	call	_Idle_I2C	;wreg free
  3956                           
  3957                           ;system.c: 236: Write_I2C(LocalAdress);
  3958  001F4E  0100               	movlb	0	; () banked
  3959  001F50  0100               	movlb	0	; () banked
  3960  001F52  5163               	movf	WriteISPPACRegister@LocalAdress& (0+255),w,b
  3961  001F54  EC3F  F010         	call	_Write_I2C
  3962                           
  3963                           ;system.c: 237: Idle_I2C();
  3964  001F58  EC4B  F010         	call	_Idle_I2C	;wreg free
  3965                           
  3966                           ;system.c: 238: Write_I2C(LocalData);
  3967  001F5C  0100               	movlb	0	; () banked
  3968  001F5E  0100               	movlb	0	; () banked
  3969  001F60  5162               	movf	WriteISPPACRegister@LocalData& (0+255),w,b
  3970  001F62  EC3F  F010         	call	_Write_I2C
  3971                           
  3972                           ;system.c: 239: Idle_I2C();
  3973  001F66  EC4B  F010         	call	_Idle_I2C	;wreg free
  3974                           
  3975                           ;system.c: 240: NotAck_I2C();
  3976  001F6A  EC62  F010         	call	_NotAck_I2C	;wreg free
  3977                           
  3978                           ;system.c: 241: Idle_I2C();
  3979  001F6E  EC4B  F010         	call	_Idle_I2C	;wreg free
  3980                           
  3981                           ;system.c: 242: Stop_I2C();
  3982  001F72  EC67  F010         	call	_Stop_I2C	;wreg free
  3983  001F76  0012               	return	
  3984  001F78                     __end_of_WriteISPPACRegister:
  3985                           	opt stack 0
  3986                           pclatu	equ	0xFFB
  3987                           pclath	equ	0xFFA
  3988                           tblptru	equ	0xFF8
  3989                           tblptrh	equ	0xFF7
  3990                           tblptrl	equ	0xFF6
  3991                           tablat	equ	0xFF5
  3992                           prodh	equ	0xFF4
  3993                           prodl	equ	0xFF3
  3994                           intcon	equ	0xFF2
  3995                           postinc0	equ	0xFEE
  3996                           fsr0h	equ	0xFEA
  3997                           fsr0l	equ	0xFE9
  3998                           wreg	equ	0xFE8
  3999                           postinc1	equ	0xFE6
  4000                           fsr1h	equ	0xFE2
  4001                           fsr1l	equ	0xFE1
  4002                           bsr	equ	0xFE0
  4003                           postinc2	equ	0xFDE
  4004                           postdec2	equ	0xFDD
  4005                           fsr2h	equ	0xFDA
  4006                           fsr2l	equ	0xFD9
  4007                           status	equ	0xFD8
  4008                           
  4009 ;; *************** function _ReadISPPACRegister *****************
  4010 ;; Defined at:
  4011 ;;		line 188 in file "system.c"
  4012 ;; Parameters:    Size  Location     Type
  4013 ;;  LocalAdress     1    wreg     unsigned char 
  4014 ;; Auto vars:     Size  Location     Type
  4015 ;;  LocalAdress     1    2[BANK0 ] unsigned char 
  4016 ;;  I2CData         1    3[BANK0 ] unsigned char 
  4017 ;; Return value:  Size  Location     Type
  4018 ;;                  1    wreg      unsigned char 
  4019 ;; Registers used:
  4020 ;;		wreg, status,2, status,0, cstack
  4021 ;; Tracked objects:
  4022 ;;		On entry : 0/0
  4023 ;;		On exit  : 0/0
  4024 ;;		Unchanged: 0/0
  4025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4027 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4029 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4030 ;;Total ram usage:        2 bytes
  4031 ;; Hardware stack levels used:    1
  4032 ;; Hardware stack levels required when called:    6
  4033 ;; This function calls:
  4034 ;;		_Configure_I2C
  4035 ;;		_Idle_I2C
  4036 ;;		_NotAck_I2C
  4037 ;;		_Read_I2C
  4038 ;;		_Start_I2C
  4039 ;;		_Stop_I2C
  4040 ;;		_Write_I2C
  4041 ;; This function is called by:
  4042 ;;		_UpdateBoardVoltages
  4043 ;; This function uses a non-reentrant model
  4044 ;;
  4045                           
  4046                           	psect	text7
  4047  001DC8                     __ptext7:
  4048                           	opt stack 0
  4049  001DC8                     _ReadISPPACRegister:
  4050                           	opt stack 23
  4051                           
  4052                           ;incstack = 0
  4053                           ;ReadISPPACRegister@LocalAdress stored from wreg
  4054  001DC8  CFE8 F062          	movff	wreg,ReadISPPACRegister@LocalAdress
  4055                           
  4056                           ;system.c: 190: unsigned char I2CData;
  4057                           ;system.c: 194: Configure_I2C();
  4058  001DCC  EC24  F010         	call	_Configure_I2C	;wreg free
  4059                           
  4060                           ;system.c: 195: Idle_I2C();
  4061  001DD0  EC4B  F010         	call	_Idle_I2C	;wreg free
  4062                           
  4063                           ;system.c: 196: Start_I2C();
  4064  001DD4  EC6B  F010         	call	_Start_I2C	;wreg free
  4065                           
  4066                           ;system.c: 197: Idle_I2C();
  4067  001DD8  EC4B  F010         	call	_Idle_I2C	;wreg free
  4068                           
  4069                           ;system.c: 198: Write_I2C(0x00<<1 | 0);
  4070  001DDC  0E00               	movlw	0
  4071  001DDE  EC3F  F010         	call	_Write_I2C
  4072                           
  4073                           ;system.c: 199: Idle_I2C();
  4074  001DE2  EC4B  F010         	call	_Idle_I2C	;wreg free
  4075                           
  4076                           ;system.c: 201: Write_I2C(LocalAdress);
  4077  001DE6  0100               	movlb	0	; () banked
  4078  001DE8  0100               	movlb	0	; () banked
  4079  001DEA  5162               	movf	ReadISPPACRegister@LocalAdress& (0+255),w,b
  4080  001DEC  EC3F  F010         	call	_Write_I2C
  4081                           
  4082                           ;system.c: 202: Idle_I2C();
  4083  001DF0  EC4B  F010         	call	_Idle_I2C	;wreg free
  4084                           
  4085                           ;system.c: 203: NotAck_I2C();
  4086  001DF4  EC62  F010         	call	_NotAck_I2C	;wreg free
  4087                           
  4088                           ;system.c: 204: Idle_I2C();
  4089  001DF8  EC4B  F010         	call	_Idle_I2C	;wreg free
  4090                           
  4091                           ;system.c: 205: Stop_I2C();
  4092  001DFC  EC67  F010         	call	_Stop_I2C	;wreg free
  4093                           
  4094                           ;system.c: 209: Configure_I2C();
  4095  001E00  EC24  F010         	call	_Configure_I2C	;wreg free
  4096                           
  4097                           ;system.c: 210: Idle_I2C();
  4098  001E04  EC4B  F010         	call	_Idle_I2C	;wreg free
  4099                           
  4100                           ;system.c: 211: Start_I2C();
  4101  001E08  EC6B  F010         	call	_Start_I2C	;wreg free
  4102                           
  4103                           ;system.c: 212: Idle_I2C();
  4104  001E0C  EC4B  F010         	call	_Idle_I2C	;wreg free
  4105                           
  4106                           ;system.c: 213: Write_I2C(0x00<<1 | 1);
  4107  001E10  0E01               	movlw	1
  4108  001E12  EC3F  F010         	call	_Write_I2C
  4109                           
  4110                           ;system.c: 214: Idle_I2C();
  4111  001E16  EC4B  F010         	call	_Idle_I2C	;wreg free
  4112                           
  4113                           ;system.c: 216: I2CData=Read_I2C();
  4114  001E1A  EC54  F010         	call	_Read_I2C	;wreg free
  4115  001E1E  0100               	movlb	0	; () banked
  4116  001E20  0100               	movlb	0	; () banked
  4117  001E22  6F63               	movwf	ReadISPPACRegister@I2CData& (0+255),b
  4118                           
  4119                           ; BSR set to: 0
  4120                           ;system.c: 217: Idle_I2C();
  4121  001E24  EC4B  F010         	call	_Idle_I2C	;wreg free
  4122                           
  4123                           ;system.c: 218: NotAck_I2C();
  4124  001E28  EC62  F010         	call	_NotAck_I2C	;wreg free
  4125                           
  4126                           ;system.c: 219: Idle_I2C();
  4127  001E2C  EC4B  F010         	call	_Idle_I2C	;wreg free
  4128                           
  4129                           ;system.c: 220: Stop_I2C();
  4130  001E30  EC67  F010         	call	_Stop_I2C	;wreg free
  4131                           
  4132                           ;system.c: 222: return I2CData;
  4133  001E34  0100               	movlb	0	; () banked
  4134  001E36  0100               	movlb	0	; () banked
  4135  001E38  5163               	movf	ReadISPPACRegister@I2CData& (0+255),w,b
  4136  001E3A  0012               	return	
  4137  001E3C                     __end_of_ReadISPPACRegister:
  4138                           	opt stack 0
  4139                           pclatu	equ	0xFFB
  4140                           pclath	equ	0xFFA
  4141                           tblptru	equ	0xFF8
  4142                           tblptrh	equ	0xFF7
  4143                           tblptrl	equ	0xFF6
  4144                           tablat	equ	0xFF5
  4145                           prodh	equ	0xFF4
  4146                           prodl	equ	0xFF3
  4147                           intcon	equ	0xFF2
  4148                           postinc0	equ	0xFEE
  4149                           fsr0h	equ	0xFEA
  4150                           fsr0l	equ	0xFE9
  4151                           wreg	equ	0xFE8
  4152                           postinc1	equ	0xFE6
  4153                           fsr1h	equ	0xFE2
  4154                           fsr1l	equ	0xFE1
  4155                           bsr	equ	0xFE0
  4156                           postinc2	equ	0xFDE
  4157                           postdec2	equ	0xFDD
  4158                           fsr2h	equ	0xFDA
  4159                           fsr2l	equ	0xFD9
  4160                           status	equ	0xFD8
  4161                           
  4162 ;; *************** function _Write_I2C *****************
  4163 ;; Defined at:
  4164 ;;		line 279 in file "system.c"
  4165 ;; Parameters:    Size  Location     Type
  4166 ;;  data_out        1    wreg     unsigned char 
  4167 ;; Auto vars:     Size  Location     Type
  4168 ;;  data_out        1    1[BANK0 ] unsigned char 
  4169 ;; Return value:  Size  Location     Type
  4170 ;;                  1    wreg      char 
  4171 ;; Registers used:
  4172 ;;		wreg, status,2, status,0, cstack
  4173 ;; Tracked objects:
  4174 ;;		On entry : 0/0
  4175 ;;		On exit  : 0/0
  4176 ;;		Unchanged: 0/0
  4177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4179 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4181 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4182 ;;Total ram usage:        1 bytes
  4183 ;; Hardware stack levels used:    1
  4184 ;; Hardware stack levels required when called:    5
  4185 ;; This function calls:
  4186 ;;		_Idle_I2C
  4187 ;; This function is called by:
  4188 ;;		_ReadISPPACRegister
  4189 ;;		_WriteISPPACRegister
  4190 ;; This function uses a non-reentrant model
  4191 ;;
  4192                           
  4193                           	psect	text8
  4194  00207E                     __ptext8:
  4195                           	opt stack 0
  4196  00207E                     _Write_I2C:
  4197                           	opt stack 23
  4198                           
  4199                           ; BSR set to: 0
  4200                           ;incstack = 0
  4201                           ;Write_I2C@data_out stored from wreg
  4202  00207E  CFE8 F061          	movff	wreg,Write_I2C@data_out
  4203                           
  4204                           ;system.c: 281: SSPBUF = data_out;
  4205  002082  C061  FFC9         	movff	Write_I2C@data_out,4041	;volatile
  4206                           
  4207                           ;system.c: 282: if ( SSPCON1bits.WCOL )
  4208  002086  BEC6               	btfsc	4038,7,c	;volatile
  4209  002088  0012               	return	
  4210  00208A                     l282:
  4211  00208A  B0C7               	btfsc	4039,0,c	;volatile
  4212  00208C  D7FE               	goto	l282
  4213                           
  4214                           ;system.c: 287: Idle_I2C();
  4215  00208E  EC4B  F010         	call	_Idle_I2C	;wreg free
  4216                           
  4217                           ;system.c: 288: if ( SSPCON2bits.ACKSTAT )
  4218  002092  50C5               	movf	4037,w,c	;volatile
  4219  002094  0012               	return	
  4220  002096                     __end_of_Write_I2C:
  4221                           	opt stack 0
  4222                           pclatu	equ	0xFFB
  4223                           pclath	equ	0xFFA
  4224                           tblptru	equ	0xFF8
  4225                           tblptrh	equ	0xFF7
  4226                           tblptrl	equ	0xFF6
  4227                           tablat	equ	0xFF5
  4228                           prodh	equ	0xFF4
  4229                           prodl	equ	0xFF3
  4230                           intcon	equ	0xFF2
  4231                           postinc0	equ	0xFEE
  4232                           fsr0h	equ	0xFEA
  4233                           fsr0l	equ	0xFE9
  4234                           wreg	equ	0xFE8
  4235                           postinc1	equ	0xFE6
  4236                           fsr1h	equ	0xFE2
  4237                           fsr1l	equ	0xFE1
  4238                           bsr	equ	0xFE0
  4239                           postinc2	equ	0xFDE
  4240                           postdec2	equ	0xFDD
  4241                           fsr2h	equ	0xFDA
  4242                           fsr2l	equ	0xFD9
  4243                           status	equ	0xFD8
  4244                           
  4245 ;; *************** function _Stop_I2C *****************
  4246 ;; Defined at:
  4247 ;;		line 302 in file "system.c"
  4248 ;; Parameters:    Size  Location     Type
  4249 ;;		None
  4250 ;; Auto vars:     Size  Location     Type
  4251 ;;		None
  4252 ;; Return value:  Size  Location     Type
  4253 ;;		None               void
  4254 ;; Registers used:
  4255 ;;		None
  4256 ;; Tracked objects:
  4257 ;;		On entry : 0/0
  4258 ;;		On exit  : 0/0
  4259 ;;		Unchanged: 0/0
  4260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4265 ;;Total ram usage:        0 bytes
  4266 ;; Hardware stack levels used:    1
  4267 ;; Hardware stack levels required when called:    4
  4268 ;; This function calls:
  4269 ;;		Nothing
  4270 ;; This function is called by:
  4271 ;;		_ReadISPPACRegister
  4272 ;;		_WriteISPPACRegister
  4273 ;; This function uses a non-reentrant model
  4274 ;;
  4275                           
  4276                           	psect	text9
  4277  0020CE                     __ptext9:
  4278                           	opt stack 0
  4279  0020CE                     _Stop_I2C:
  4280                           	opt stack 24
  4281                           
  4282                           ;system.c: 304: SSPCON2bits.PEN=1;
  4283                           
  4284                           ;incstack = 0
  4285  0020CE  84C5               	bsf	4037,2,c	;volatile
  4286  0020D0                     l295:
  4287  0020D0  A4C5               	btfss	4037,2,c	;volatile
  4288  0020D2  0012               	return	
  4289  0020D4  D7FD               	goto	l295
  4290  0020D6                     __end_of_Stop_I2C:
  4291                           	opt stack 0
  4292                           pclatu	equ	0xFFB
  4293                           pclath	equ	0xFFA
  4294                           tblptru	equ	0xFF8
  4295                           tblptrh	equ	0xFF7
  4296                           tblptrl	equ	0xFF6
  4297                           tablat	equ	0xFF5
  4298                           prodh	equ	0xFF4
  4299                           prodl	equ	0xFF3
  4300                           intcon	equ	0xFF2
  4301                           postinc0	equ	0xFEE
  4302                           fsr0h	equ	0xFEA
  4303                           fsr0l	equ	0xFE9
  4304                           wreg	equ	0xFE8
  4305                           postinc1	equ	0xFE6
  4306                           fsr1h	equ	0xFE2
  4307                           fsr1l	equ	0xFE1
  4308                           bsr	equ	0xFE0
  4309                           postinc2	equ	0xFDE
  4310                           postdec2	equ	0xFDD
  4311                           fsr2h	equ	0xFDA
  4312                           fsr2l	equ	0xFD9
  4313                           status	equ	0xFD8
  4314                           
  4315 ;; *************** function _Start_I2C *****************
  4316 ;; Defined at:
  4317 ;;		line 296 in file "system.c"
  4318 ;; Parameters:    Size  Location     Type
  4319 ;;		None
  4320 ;; Auto vars:     Size  Location     Type
  4321 ;;		None
  4322 ;; Return value:  Size  Location     Type
  4323 ;;		None               void
  4324 ;; Registers used:
  4325 ;;		None
  4326 ;; Tracked objects:
  4327 ;;		On entry : 0/0
  4328 ;;		On exit  : 0/0
  4329 ;;		Unchanged: 0/0
  4330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4335 ;;Total ram usage:        0 bytes
  4336 ;; Hardware stack levels used:    1
  4337 ;; Hardware stack levels required when called:    4
  4338 ;; This function calls:
  4339 ;;		Nothing
  4340 ;; This function is called by:
  4341 ;;		_ReadISPPACRegister
  4342 ;;		_WriteISPPACRegister
  4343 ;; This function uses a non-reentrant model
  4344 ;;
  4345                           
  4346                           	psect	text10
  4347  0020D6                     __ptext10:
  4348                           	opt stack 0
  4349  0020D6                     _Start_I2C:
  4350                           	opt stack 24
  4351                           
  4352                           ;system.c: 298: SSPCON2bits.SEN=1;
  4353                           
  4354                           ;incstack = 0
  4355  0020D6  80C5               	bsf	4037,0,c	;volatile
  4356  0020D8                     l289:
  4357  0020D8  A0C5               	btfss	4037,0,c	;volatile
  4358  0020DA  0012               	return	
  4359  0020DC  D7FD               	goto	l289
  4360  0020DE                     __end_of_Start_I2C:
  4361                           	opt stack 0
  4362                           pclatu	equ	0xFFB
  4363                           pclath	equ	0xFFA
  4364                           tblptru	equ	0xFF8
  4365                           tblptrh	equ	0xFF7
  4366                           tblptrl	equ	0xFF6
  4367                           tablat	equ	0xFF5
  4368                           prodh	equ	0xFF4
  4369                           prodl	equ	0xFF3
  4370                           intcon	equ	0xFF2
  4371                           postinc0	equ	0xFEE
  4372                           fsr0h	equ	0xFEA
  4373                           fsr0l	equ	0xFE9
  4374                           wreg	equ	0xFE8
  4375                           postinc1	equ	0xFE6
  4376                           fsr1h	equ	0xFE2
  4377                           fsr1l	equ	0xFE1
  4378                           bsr	equ	0xFE0
  4379                           postinc2	equ	0xFDE
  4380                           postdec2	equ	0xFDD
  4381                           fsr2h	equ	0xFDA
  4382                           fsr2l	equ	0xFD9
  4383                           status	equ	0xFD8
  4384                           
  4385 ;; *************** function _Read_I2C *****************
  4386 ;; Defined at:
  4387 ;;		line 271 in file "system.c"
  4388 ;; Parameters:    Size  Location     Type
  4389 ;;		None
  4390 ;; Auto vars:     Size  Location     Type
  4391 ;;		None
  4392 ;; Return value:  Size  Location     Type
  4393 ;;                  1    wreg      unsigned char 
  4394 ;; Registers used:
  4395 ;;		wreg, status,2, status,0, cstack
  4396 ;; Tracked objects:
  4397 ;;		On entry : 0/0
  4398 ;;		On exit  : 0/0
  4399 ;;		Unchanged: 0/0
  4400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4405 ;;Total ram usage:        0 bytes
  4406 ;; Hardware stack levels used:    1
  4407 ;; Hardware stack levels required when called:    5
  4408 ;; This function calls:
  4409 ;;		_Idle_I2C
  4410 ;; This function is called by:
  4411 ;;		_ReadISPPACRegister
  4412 ;; This function uses a non-reentrant model
  4413 ;;
  4414                           
  4415                           	psect	text11
  4416  0020A8                     __ptext11:
  4417                           	opt stack 0
  4418  0020A8                     _Read_I2C:
  4419                           	opt stack 23
  4420                           
  4421                           ;system.c: 273: Idle_I2C();
  4422                           
  4423                           ;incstack = 0
  4424  0020A8  EC4B  F010         	call	_Idle_I2C	;wreg free
  4425                           
  4426                           ;system.c: 274: SSPCON2bits.RCEN = 1;
  4427  0020AC  86C5               	bsf	4037,3,c	;volatile
  4428  0020AE                     l273:
  4429  0020AE  A0C7               	btfss	4039,0,c	;volatile
  4430  0020B0  D7FE               	goto	l273
  4431                           
  4432                           ;system.c: 276: return ( SSPBUF );
  4433  0020B2  50C9               	movf	4041,w,c	;volatile
  4434  0020B4  0012               	return	
  4435  0020B6                     __end_of_Read_I2C:
  4436                           	opt stack 0
  4437                           pclatu	equ	0xFFB
  4438                           pclath	equ	0xFFA
  4439                           tblptru	equ	0xFF8
  4440                           tblptrh	equ	0xFF7
  4441                           tblptrl	equ	0xFF6
  4442                           tablat	equ	0xFF5
  4443                           prodh	equ	0xFF4
  4444                           prodl	equ	0xFF3
  4445                           intcon	equ	0xFF2
  4446                           postinc0	equ	0xFEE
  4447                           fsr0h	equ	0xFEA
  4448                           fsr0l	equ	0xFE9
  4449                           wreg	equ	0xFE8
  4450                           postinc1	equ	0xFE6
  4451                           fsr1h	equ	0xFE2
  4452                           fsr1l	equ	0xFE1
  4453                           bsr	equ	0xFE0
  4454                           postinc2	equ	0xFDE
  4455                           postdec2	equ	0xFDD
  4456                           fsr2h	equ	0xFDA
  4457                           fsr2l	equ	0xFD9
  4458                           status	equ	0xFD8
  4459                           
  4460 ;; *************** function _Idle_I2C *****************
  4461 ;; Defined at:
  4462 ;;		line 265 in file "system.c"
  4463 ;; Parameters:    Size  Location     Type
  4464 ;;		None
  4465 ;; Auto vars:     Size  Location     Type
  4466 ;;		None
  4467 ;; Return value:  Size  Location     Type
  4468 ;;		None               void
  4469 ;; Registers used:
  4470 ;;		wreg, status,2, status,0
  4471 ;; Tracked objects:
  4472 ;;		On entry : 0/0
  4473 ;;		On exit  : 0/0
  4474 ;;		Unchanged: 0/0
  4475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4478 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4479 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4480 ;;Total ram usage:        1 bytes
  4481 ;; Hardware stack levels used:    1
  4482 ;; Hardware stack levels required when called:    4
  4483 ;; This function calls:
  4484 ;;		Nothing
  4485 ;; This function is called by:
  4486 ;;		_ReadISPPACRegister
  4487 ;;		_WriteISPPACRegister
  4488 ;;		_Read_I2C
  4489 ;;		_Write_I2C
  4490 ;; This function uses a non-reentrant model
  4491 ;;
  4492                           
  4493                           	psect	text12
  4494  002096                     __ptext12:
  4495                           	opt stack 0
  4496  002096                     _Idle_I2C:
  4497                           	opt stack 23
  4498  002096                     l2841:
  4499  002096  CFC5 F060          	movff	4037,??_Idle_I2C	;volatile
  4500  00209A  0E1F               	movlw	31
  4501  00209C  0100               	movlb	0	; () banked
  4502  00209E  1760               	andwf	??_Idle_I2C& (0+255),f,b
  4503  0020A0  B4D8               	btfsc	status,2,c
  4504                           
  4505                           ; BSR set to: 0
  4506  0020A2  B4C7               	btfsc	4039,2,c	;volatile
  4507  0020A4  D7F8               	goto	l2841
  4508                           
  4509                           ; BSR set to: 0
  4510                           
  4511                           ; BSR set to: 0
  4512  0020A6  0012               	return	
  4513  0020A8                     __end_of_Idle_I2C:
  4514                           	opt stack 0
  4515                           pclatu	equ	0xFFB
  4516                           pclath	equ	0xFFA
  4517                           tblptru	equ	0xFF8
  4518                           tblptrh	equ	0xFF7
  4519                           tblptrl	equ	0xFF6
  4520                           tablat	equ	0xFF5
  4521                           prodh	equ	0xFF4
  4522                           prodl	equ	0xFF3
  4523                           intcon	equ	0xFF2
  4524                           postinc0	equ	0xFEE
  4525                           fsr0h	equ	0xFEA
  4526                           fsr0l	equ	0xFE9
  4527                           wreg	equ	0xFE8
  4528                           postinc1	equ	0xFE6
  4529                           fsr1h	equ	0xFE2
  4530                           fsr1l	equ	0xFE1
  4531                           bsr	equ	0xFE0
  4532                           postinc2	equ	0xFDE
  4533                           postdec2	equ	0xFDD
  4534                           fsr2h	equ	0xFDA
  4535                           fsr2l	equ	0xFD9
  4536                           status	equ	0xFD8
  4537                           
  4538 ;; *************** function _NotAck_I2C *****************
  4539 ;; Defined at:
  4540 ;;		line 308 in file "system.c"
  4541 ;; Parameters:    Size  Location     Type
  4542 ;;		None
  4543 ;; Auto vars:     Size  Location     Type
  4544 ;;		None
  4545 ;; Return value:  Size  Location     Type
  4546 ;;		None               void
  4547 ;; Registers used:
  4548 ;;		None
  4549 ;; Tracked objects:
  4550 ;;		On entry : 0/0
  4551 ;;		On exit  : 0/0
  4552 ;;		Unchanged: 0/0
  4553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4558 ;;Total ram usage:        0 bytes
  4559 ;; Hardware stack levels used:    1
  4560 ;; Hardware stack levels required when called:    4
  4561 ;; This function calls:
  4562 ;;		Nothing
  4563 ;; This function is called by:
  4564 ;;		_ReadISPPACRegister
  4565 ;;		_WriteISPPACRegister
  4566 ;; This function uses a non-reentrant model
  4567 ;;
  4568                           
  4569                           	psect	text13
  4570  0020C4                     __ptext13:
  4571                           	opt stack 0
  4572  0020C4                     _NotAck_I2C:
  4573                           	opt stack 24
  4574                           
  4575                           ;system.c: 310: SSPCON2bits.ACKDT=1;
  4576                           
  4577                           ; BSR set to: 0
  4578                           ;incstack = 0
  4579  0020C4  8AC5               	bsf	4037,5,c	;volatile
  4580                           
  4581                           ;system.c: 311: SSPCON2bits.ACKEN=1;
  4582  0020C6  88C5               	bsf	4037,4,c	;volatile
  4583  0020C8                     l301:
  4584  0020C8  A8C5               	btfss	4037,4,c	;volatile
  4585  0020CA  0012               	return	
  4586  0020CC  D7FD               	goto	l301
  4587  0020CE                     __end_of_NotAck_I2C:
  4588                           	opt stack 0
  4589                           pclatu	equ	0xFFB
  4590                           pclath	equ	0xFFA
  4591                           tblptru	equ	0xFF8
  4592                           tblptrh	equ	0xFF7
  4593                           tblptrl	equ	0xFF6
  4594                           tablat	equ	0xFF5
  4595                           prodh	equ	0xFF4
  4596                           prodl	equ	0xFF3
  4597                           intcon	equ	0xFF2
  4598                           postinc0	equ	0xFEE
  4599                           fsr0h	equ	0xFEA
  4600                           fsr0l	equ	0xFE9
  4601                           wreg	equ	0xFE8
  4602                           postinc1	equ	0xFE6
  4603                           fsr1h	equ	0xFE2
  4604                           fsr1l	equ	0xFE1
  4605                           bsr	equ	0xFE0
  4606                           postinc2	equ	0xFDE
  4607                           postdec2	equ	0xFDD
  4608                           fsr2h	equ	0xFDA
  4609                           fsr2l	equ	0xFD9
  4610                           status	equ	0xFD8
  4611                           
  4612 ;; *************** function _Configure_I2C *****************
  4613 ;; Defined at:
  4614 ;;		line 250 in file "system.c"
  4615 ;; Parameters:    Size  Location     Type
  4616 ;;		None
  4617 ;; Auto vars:     Size  Location     Type
  4618 ;;		None
  4619 ;; Return value:  Size  Location     Type
  4620 ;;		None               void
  4621 ;; Registers used:
  4622 ;;		wreg, status,2, status,0
  4623 ;; Tracked objects:
  4624 ;;		On entry : 0/0
  4625 ;;		On exit  : 0/0
  4626 ;;		Unchanged: 0/0
  4627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4632 ;;Total ram usage:        0 bytes
  4633 ;; Hardware stack levels used:    1
  4634 ;; Hardware stack levels required when called:    4
  4635 ;; This function calls:
  4636 ;;		Nothing
  4637 ;; This function is called by:
  4638 ;;		_ReadISPPACRegister
  4639 ;;		_WriteISPPACRegister
  4640 ;; This function uses a non-reentrant model
  4641 ;;
  4642                           
  4643                           	psect	text14
  4644  002048                     __ptext14:
  4645                           	opt stack 0
  4646  002048                     _Configure_I2C:
  4647                           	opt stack 24
  4648                           
  4649                           ;system.c: 252: SSPSTAT &= 0x3F;
  4650                           
  4651                           ;incstack = 0
  4652  002048  0E3F               	movlw	63
  4653  00204A  16C7               	andwf	4039,f,c	;volatile
  4654                           
  4655                           ;system.c: 253: SSPCON1 = 0x00;
  4656  00204C  0E00               	movlw	0
  4657  00204E  6EC6               	movwf	4038,c	;volatile
  4658                           
  4659                           ;system.c: 254: SSPCON2 = 0x00;
  4660  002050  0E00               	movlw	0
  4661  002052  6EC5               	movwf	4037,c	;volatile
  4662                           
  4663                           ;system.c: 255: SSPCON1 |= 0x8;
  4664  002054  86C6               	bsf	4038,3,c	;volatile
  4665                           
  4666                           ;system.c: 256: SSPSTATbits.SMP=1;
  4667  002056  8EC7               	bsf	4039,7,c	;volatile
  4668                           
  4669                           ;system.c: 258: PORTCbits.RC3 = 1;
  4670  002058  8682               	bsf	3970,3,c	;volatile
  4671                           
  4672                           ;system.c: 259: PORTCbits.RC4 = 1;
  4673  00205A  8882               	bsf	3970,4,c	;volatile
  4674                           
  4675                           ;system.c: 261: SSPCON1bits.SSPEN = 1;
  4676  00205C  8AC6               	bsf	4038,5,c	;volatile
  4677                           
  4678                           ;system.c: 262: SSPADD = 0x54;
  4679  00205E  0E54               	movlw	84
  4680  002060  6EC8               	movwf	4040,c	;volatile
  4681  002062  0012               	return	
  4682  002064                     __end_of_Configure_I2C:
  4683                           	opt stack 0
  4684                           pclatu	equ	0xFFB
  4685                           pclath	equ	0xFFA
  4686                           tblptru	equ	0xFF8
  4687                           tblptrh	equ	0xFF7
  4688                           tblptrl	equ	0xFF6
  4689                           tablat	equ	0xFF5
  4690                           prodh	equ	0xFF4
  4691                           prodl	equ	0xFF3
  4692                           intcon	equ	0xFF2
  4693                           postinc0	equ	0xFEE
  4694                           fsr0h	equ	0xFEA
  4695                           fsr0l	equ	0xFE9
  4696                           wreg	equ	0xFE8
  4697                           postinc1	equ	0xFE6
  4698                           fsr1h	equ	0xFE2
  4699                           fsr1l	equ	0xFE1
  4700                           bsr	equ	0xFE0
  4701                           postinc2	equ	0xFDE
  4702                           postdec2	equ	0xFDD
  4703                           fsr2h	equ	0xFDA
  4704                           fsr2l	equ	0xFD9
  4705                           status	equ	0xFD8
  4706                           
  4707 ;; *************** function _PutCANTxFifo *****************
  4708 ;; Defined at:
  4709 ;;		line 43 in file "Can_HL.c"
  4710 ;; Parameters:    Size  Location     Type
  4711 ;;  PutMessage     14    0[BANK0 ] struct CANTxMsg
  4712 ;; Auto vars:     Size  Location     Type
  4713 ;;		None
  4714 ;; Return value:  Size  Location     Type
  4715 ;;		None               void
  4716 ;; Registers used:
  4717 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4718 ;; Tracked objects:
  4719 ;;		On entry : 0/0
  4720 ;;		On exit  : 0/0
  4721 ;;		Unchanged: 0/0
  4722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4723 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4725 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4726 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4727 ;;Total ram usage:       16 bytes
  4728 ;; Hardware stack levels used:    1
  4729 ;; Hardware stack levels required when called:    4
  4730 ;; This function calls:
  4731 ;;		Nothing
  4732 ;; This function is called by:
  4733 ;;		_main
  4734 ;; This function uses a non-reentrant model
  4735 ;;
  4736                           
  4737                           	psect	text15
  4738  001C2E                     __ptext15:
  4739                           	opt stack 0
  4740  001C2E                     _PutCANTxFifo:
  4741                           	opt stack 26
  4742                           
  4743                           ;Can_HL.c: 46: if(!CANTxFifo.Fifofull)
  4744                           
  4745                           ;incstack = 0
  4746  001C2E  0101               	movlb	1	; () banked
  4747  001C30  0101               	movlb	1	; () banked
  4748  001C32  678E               	tstfsz	(_CANTxFifo+142)& (0+255),b
  4749  001C34  0012               	return	
  4750                           
  4751                           ; BSR set to: 1
  4752                           ;Can_HL.c: 47: {
  4753                           ;Can_HL.c: 48: INTCONbits.GIE=0;
  4754  001C36  9EF2               	bcf	intcon,7,c	;volatile
  4755                           
  4756                           ; BSR set to: 1
  4757                           ;Can_HL.c: 49: CANTxFifo.CANMsg[CANTxFifo.HighIndex]=PutMessage;
  4758  001C38  EE20  F060         	lfsr	2,PutCANTxFifo@PutMessage
  4759  001C3C  0101               	movlb	1	; () banked
  4760  001C3E  0101               	movlb	1	; () banked
  4761  001C40  518D               	movf	(_CANTxFifo+141)& (0+255),w,b
  4762  001C42  0D0E               	mullw	14
  4763  001C44  0E00               	movlw	low _CANTxFifo
  4764  001C46  0100               	movlb	0	; () banked
  4765  001C48  6F6E               	movwf	??_PutCANTxFifo& (0+255),b
  4766  001C4A  0E01               	movlw	high _CANTxFifo
  4767  001C4C  6F6F               	movwf	(??_PutCANTxFifo+1)& (0+255),b
  4768  001C4E  50F3               	movf	prodl,w,c
  4769  001C50  0100               	movlb	0	; () banked
  4770  001C52  276E               	addwf	??_PutCANTxFifo& (0+255),f,b
  4771  001C54  50F4               	movf	prodh,w,c
  4772  001C56  0100               	movlb	0	; () banked
  4773  001C58  236F               	addwfc	(??_PutCANTxFifo+1)& (0+255),f,b
  4774  001C5A  C06E  FFE1         	movff	??_PutCANTxFifo,fsr1l
  4775  001C5E  C06F  FFE2         	movff	??_PutCANTxFifo+1,fsr1h
  4776  001C62  0E0E               	movlw	14
  4777  001C64                     u1901:
  4778  001C64  CFDE FFE6          	movff	postinc2,postinc1
  4779  001C68  2EE8               	decfsz	wreg,f,c
  4780  001C6A  D7FC               	goto	u1901
  4781                           
  4782                           ; BSR set to: 0
  4783                           ;Can_HL.c: 50: CANTxFifo.FifoEmpty=0;
  4784  001C6C  0100               	movlb	0	; () banked
  4785  001C6E  6F6E               	movwf	??_PutCANTxFifo& (0+255),b
  4786  001C70  0E00               	movlw	0
  4787  001C72  0101               	movlb	1	; () banked
  4788  001C74  0101               	movlb	1	; () banked
  4789  001C76  6F8F               	movwf	(_CANTxFifo+143)& (0+255),b
  4790  001C78  0100               	movlb	0	; () banked
  4791  001C7A  516E               	movf	??_PutCANTxFifo& (0+255),w,b
  4792                           
  4793                           ; BSR set to: 0
  4794                           ;Can_HL.c: 51: CANTxFifo.HighIndex++;
  4795  001C7C  0101               	movlb	1	; () banked
  4796  001C7E  0101               	movlb	1	; () banked
  4797  001C80  2B8D               	incf	(_CANTxFifo+141)& (0+255),f,b
  4798                           
  4799                           ; BSR set to: 1
  4800                           ;Can_HL.c: 53: if(CANTxFifo.HighIndex==(10))
  4801  001C82  0101               	movlb	1	; () banked
  4802  001C84  0101               	movlb	1	; () banked
  4803  001C86  518D               	movf	(_CANTxFifo+141)& (0+255),w,b
  4804  001C88  0A0A               	xorlw	10
  4805  001C8A  A4D8               	btfss	status,2,c
  4806  001C8C  D008               	goto	l2621
  4807                           
  4808                           ; BSR set to: 1
  4809                           ;Can_HL.c: 54: CANTxFifo.HighIndex=0;
  4810  001C8E  0100               	movlb	0	; () banked
  4811  001C90  6F6E               	movwf	??_PutCANTxFifo& (0+255),b
  4812  001C92  0E00               	movlw	0
  4813  001C94  0101               	movlb	1	; () banked
  4814  001C96  0101               	movlb	1	; () banked
  4815  001C98  6F8D               	movwf	(_CANTxFifo+141)& (0+255),b
  4816  001C9A  0100               	movlb	0	; () banked
  4817  001C9C  516E               	movf	??_PutCANTxFifo& (0+255),w,b
  4818  001C9E                     l2621:
  4819                           
  4820                           ;Can_HL.c: 56: if(CANTxFifo.HighIndex==CANTxFifo.LowIndex)
  4821  001C9E  0101               	movlb	1	; () banked
  4822  001CA0  0101               	movlb	1	; () banked
  4823  001CA2  518C               	movf	(_CANTxFifo+140)& (0+255),w,b
  4824  001CA4  0101               	movlb	1	; () banked
  4825  001CA6  EE21  F08D         	lfsr	2,_CANTxFifo+141
  4826  001CAA  62DF               	cpfseq	indf2,c
  4827  001CAC  D008               	goto	l2625
  4828                           
  4829                           ; BSR set to: 1
  4830                           ;Can_HL.c: 57: CANTxFifo.Fifofull=1;
  4831  001CAE  0100               	movlb	0	; () banked
  4832  001CB0  6F6E               	movwf	??_PutCANTxFifo& (0+255),b
  4833  001CB2  0E01               	movlw	1
  4834  001CB4  0101               	movlb	1	; () banked
  4835  001CB6  0101               	movlb	1	; () banked
  4836  001CB8  6F8E               	movwf	(_CANTxFifo+142)& (0+255),b
  4837  001CBA  0100               	movlb	0	; () banked
  4838  001CBC  516E               	movf	??_PutCANTxFifo& (0+255),w,b
  4839  001CBE                     l2625:
  4840                           
  4841                           ;Can_HL.c: 59: INTCONbits.GIE=1;
  4842  001CBE  8EF2               	bsf	intcon,7,c	;volatile
  4843  001CC0  0012               	return	
  4844  001CC2                     __end_of_PutCANTxFifo:
  4845                           	opt stack 0
  4846                           pclatu	equ	0xFFB
  4847                           pclath	equ	0xFFA
  4848                           tblptru	equ	0xFF8
  4849                           tblptrh	equ	0xFF7
  4850                           tblptrl	equ	0xFF6
  4851                           tablat	equ	0xFF5
  4852                           prodh	equ	0xFF4
  4853                           prodl	equ	0xFF3
  4854                           intcon	equ	0xFF2
  4855                           postinc0	equ	0xFEE
  4856                           fsr0h	equ	0xFEA
  4857                           fsr0l	equ	0xFE9
  4858                           wreg	equ	0xFE8
  4859                           postinc1	equ	0xFE6
  4860                           fsr1h	equ	0xFE2
  4861                           fsr1l	equ	0xFE1
  4862                           bsr	equ	0xFE0
  4863                           indf2	equ	0xFDF
  4864                           postinc2	equ	0xFDE
  4865                           postdec2	equ	0xFDD
  4866                           fsr2h	equ	0xFDA
  4867                           fsr2l	equ	0xFD9
  4868                           status	equ	0xFD8
  4869                           
  4870 ;; *************** function _GetCANTxFifo *****************
  4871 ;; Defined at:
  4872 ;;		line 65 in file "Can_HL.c"
  4873 ;; Parameters:    Size  Location     Type
  4874 ;;		None
  4875 ;; Auto vars:     Size  Location     Type
  4876 ;;  LocalCANTXMs   14   16[BANK0 ] struct CANTxMsg
  4877 ;; Return value:  Size  Location     Type
  4878 ;;                  14    0[BANK0 ] struct CANTxMsg
  4879 ;; Registers used:
  4880 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4881 ;; Tracked objects:
  4882 ;;		On entry : 0/0
  4883 ;;		On exit  : 0/0
  4884 ;;		Unchanged: 0/0
  4885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4886 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4887 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4888 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4889 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4890 ;;Total ram usage:       30 bytes
  4891 ;; Hardware stack levels used:    1
  4892 ;; Hardware stack levels required when called:    4
  4893 ;; This function calls:
  4894 ;;		Nothing
  4895 ;; This function is called by:
  4896 ;;		_main
  4897 ;; This function uses a non-reentrant model
  4898 ;;
  4899                           
  4900                           	psect	text16
  4901  001792                     __ptext16:
  4902                           	opt stack 0
  4903  001792                     _GetCANTxFifo:
  4904                           	opt stack 26
  4905                           
  4906                           ;Can_HL.c: 67: struct CANTxMsg LocalCANTXMsg;
  4907                           ;Can_HL.c: 70: if(!CANTxFifo.FifoEmpty)
  4908                           
  4909                           ;incstack = 0
  4910  001792  0101               	movlb	1	; () banked
  4911  001794  0101               	movlb	1	; () banked
  4912  001796  678F               	tstfsz	(_CANTxFifo+143)& (0+255),b
  4913  001798  D051               	goto	l2699
  4914                           
  4915                           ; BSR set to: 1
  4916                           ;Can_HL.c: 71: {
  4917                           ;Can_HL.c: 72: INTCONbits.GIE=0;
  4918  00179A  9EF2               	bcf	intcon,7,c	;volatile
  4919                           
  4920                           ; BSR set to: 1
  4921                           ;Can_HL.c: 74: LocalCANTXMsg=CANTxFifo.CANMsg[CANTxFifo.LowIndex];
  4922  00179C  0101               	movlb	1	; () banked
  4923  00179E  0101               	movlb	1	; () banked
  4924  0017A0  518C               	movf	(_CANTxFifo+140)& (0+255),w,b
  4925  0017A2  0D0E               	mullw	14
  4926  0017A4  0E00               	movlw	low _CANTxFifo
  4927  0017A6  0100               	movlb	0	; () banked
  4928  0017A8  6F6E               	movwf	??_GetCANTxFifo& (0+255),b
  4929  0017AA  0E01               	movlw	high _CANTxFifo
  4930  0017AC  6F6F               	movwf	(??_GetCANTxFifo+1)& (0+255),b
  4931  0017AE  50F3               	movf	prodl,w,c
  4932  0017B0  0100               	movlb	0	; () banked
  4933  0017B2  276E               	addwf	??_GetCANTxFifo& (0+255),f,b
  4934  0017B4  50F4               	movf	prodh,w,c
  4935  0017B6  0100               	movlb	0	; () banked
  4936  0017B8  236F               	addwfc	(??_GetCANTxFifo+1)& (0+255),f,b
  4937  0017BA  C06E  FFD9         	movff	??_GetCANTxFifo,fsr2l
  4938  0017BE  C06F  FFDA         	movff	??_GetCANTxFifo+1,fsr2h
  4939  0017C2  EE10  F070         	lfsr	1,GetCANTxFifo@LocalCANTXMsg
  4940  0017C6  0E0E               	movlw	14
  4941  0017C8                     u2021:
  4942  0017C8  CFDE FFE6          	movff	postinc2,postinc1
  4943  0017CC  2EE8               	decfsz	wreg,f,c
  4944  0017CE  D7FC               	goto	u2021
  4945                           
  4946                           ; BSR set to: 0
  4947                           ;Can_HL.c: 75: CANTxFifo.Fifofull=0;
  4948  0017D0  0100               	movlb	0	; () banked
  4949  0017D2  6F6E               	movwf	??_GetCANTxFifo& (0+255),b
  4950  0017D4  0E00               	movlw	0
  4951  0017D6  0101               	movlb	1	; () banked
  4952  0017D8  0101               	movlb	1	; () banked
  4953  0017DA  6F8E               	movwf	(_CANTxFifo+142)& (0+255),b
  4954  0017DC  0100               	movlb	0	; () banked
  4955  0017DE  516E               	movf	??_GetCANTxFifo& (0+255),w,b
  4956                           
  4957                           ; BSR set to: 0
  4958                           ;Can_HL.c: 76: CANTxFifo.LowIndex++;
  4959  0017E0  0101               	movlb	1	; () banked
  4960  0017E2  0101               	movlb	1	; () banked
  4961  0017E4  2B8C               	incf	(_CANTxFifo+140)& (0+255),f,b
  4962                           
  4963                           ; BSR set to: 1
  4964                           ;Can_HL.c: 78: if(CANTxFifo.LowIndex==(10))
  4965  0017E6  0101               	movlb	1	; () banked
  4966  0017E8  0101               	movlb	1	; () banked
  4967  0017EA  518C               	movf	(_CANTxFifo+140)& (0+255),w,b
  4968  0017EC  0A0A               	xorlw	10
  4969  0017EE  A4D8               	btfss	status,2,c
  4970  0017F0  D008               	goto	l2687
  4971                           
  4972                           ; BSR set to: 1
  4973                           ;Can_HL.c: 79: CANTxFifo.LowIndex=0;
  4974  0017F2  0100               	movlb	0	; () banked
  4975  0017F4  6F6E               	movwf	??_GetCANTxFifo& (0+255),b
  4976  0017F6  0E00               	movlw	0
  4977  0017F8  0101               	movlb	1	; () banked
  4978  0017FA  0101               	movlb	1	; () banked
  4979  0017FC  6F8C               	movwf	(_CANTxFifo+140)& (0+255),b
  4980  0017FE  0100               	movlb	0	; () banked
  4981  001800  516E               	movf	??_GetCANTxFifo& (0+255),w,b
  4982  001802                     l2687:
  4983                           
  4984                           ;Can_HL.c: 81: if(CANTxFifo.HighIndex==CANTxFifo.LowIndex)
  4985  001802  0101               	movlb	1	; () banked
  4986  001804  0101               	movlb	1	; () banked
  4987  001806  518C               	movf	(_CANTxFifo+140)& (0+255),w,b
  4988  001808  0101               	movlb	1	; () banked
  4989  00180A  EE21  F08D         	lfsr	2,_CANTxFifo+141
  4990  00180E  62DF               	cpfseq	indf2,c
  4991  001810  D008               	goto	l2691
  4992                           
  4993                           ; BSR set to: 1
  4994                           ;Can_HL.c: 82: CANTxFifo.FifoEmpty=1;
  4995  001812  0100               	movlb	0	; () banked
  4996  001814  6F6E               	movwf	??_GetCANTxFifo& (0+255),b
  4997  001816  0E01               	movlw	1
  4998  001818  0101               	movlb	1	; () banked
  4999  00181A  0101               	movlb	1	; () banked
  5000  00181C  6F8F               	movwf	(_CANTxFifo+143)& (0+255),b
  5001  00181E  0100               	movlb	0	; () banked
  5002  001820  516E               	movf	??_GetCANTxFifo& (0+255),w,b
  5003  001822                     l2691:
  5004                           
  5005                           ;Can_HL.c: 84: INTCONbits.GIE=1;
  5006  001822  8EF2               	bsf	intcon,7,c	;volatile
  5007                           
  5008                           ;Can_HL.c: 85: return LocalCANTXMsg;
  5009  001824  EE20  F07D         	lfsr	2,GetCANTxFifo@LocalCANTXMsg+13
  5010  001828  EE00  F06D         	lfsr	0,?_GetCANTxFifo+13
  5011  00182C  0E0E               	movlw	14
  5012  00182E                     u2051:
  5013  00182E  CFDD FFED          	movff	postdec2,postdec0
  5014  001832  2EE8               	decfsz	wreg,f,c
  5015  001834  D7FC               	goto	u2051
  5016  001836  2AE9               	incf	fsr0l,f,c
  5017  001838  22EA               	addwfc	fsr0h,f,c
  5018  00183A  0012               	return	
  5019  00183C                     l2699:
  5020                           
  5021                           ;Can_HL.c: 87: else
  5022                           ;Can_HL.c: 88: {
  5023                           ;Can_HL.c: 89: LocalCANTXMsg.id=0;
  5024  00183C  0E00               	movlw	0
  5025  00183E  0100               	movlb	0	; () banked
  5026  001840  0100               	movlb	0	; () banked
  5027  001842  6F70               	movwf	GetCANTxFifo@LocalCANTXMsg& (0+255),b
  5028  001844  0E00               	movlw	0
  5029  001846  0100               	movlb	0	; () banked
  5030  001848  6F71               	movwf	(GetCANTxFifo@LocalCANTXMsg+1)& (0+255),b
  5031  00184A  0E00               	movlw	0
  5032  00184C  0100               	movlb	0	; () banked
  5033  00184E  6F72               	movwf	(GetCANTxFifo@LocalCANTXMsg+2)& (0+255),b
  5034  001850  0E00               	movlw	0
  5035  001852  0100               	movlb	0	; () banked
  5036  001854  6F73               	movwf	(GetCANTxFifo@LocalCANTXMsg+3)& (0+255),b
  5037                           
  5038                           ; BSR set to: 0
  5039                           ;Can_HL.c: 90: return LocalCANTXMsg;
  5040  001856  EE20  F07D         	lfsr	2,GetCANTxFifo@LocalCANTXMsg+13
  5041  00185A  EE00  F06D         	lfsr	0,?_GetCANTxFifo+13
  5042  00185E  0E0E               	movlw	14
  5043  001860                     u2061:
  5044  001860  CFDD FFED          	movff	postdec2,postdec0
  5045  001864  2EE8               	decfsz	wreg,f,c
  5046  001866  D7FC               	goto	u2061
  5047  001868  2AE9               	incf	fsr0l,f,c
  5048  00186A  22EA               	addwfc	fsr0h,f,c
  5049  00186C  0012               	return	
  5050  00186E                     __end_of_GetCANTxFifo:
  5051                           	opt stack 0
  5052                           pclatu	equ	0xFFB
  5053                           pclath	equ	0xFFA
  5054                           tblptru	equ	0xFF8
  5055                           tblptrh	equ	0xFF7
  5056                           tblptrl	equ	0xFF6
  5057                           tablat	equ	0xFF5
  5058                           prodh	equ	0xFF4
  5059                           prodl	equ	0xFF3
  5060                           intcon	equ	0xFF2
  5061                           postinc0	equ	0xFEE
  5062                           postdec0	equ	0xFED
  5063                           fsr0h	equ	0xFEA
  5064                           fsr0l	equ	0xFE9
  5065                           wreg	equ	0xFE8
  5066                           postinc1	equ	0xFE6
  5067                           fsr1h	equ	0xFE2
  5068                           fsr1l	equ	0xFE1
  5069                           bsr	equ	0xFE0
  5070                           indf2	equ	0xFDF
  5071                           postinc2	equ	0xFDE
  5072                           postdec2	equ	0xFDD
  5073                           fsr2h	equ	0xFDA
  5074                           fsr2l	equ	0xFD9
  5075                           status	equ	0xFD8
  5076                           
  5077 ;; *************** function _GetCANRxFifo *****************
  5078 ;; Defined at:
  5079 ;;		line 113 in file "Can_HL.c"
  5080 ;; Parameters:    Size  Location     Type
  5081 ;;		None
  5082 ;; Auto vars:     Size  Location     Type
  5083 ;;  LocalCANRXMs   14   16[BANK0 ] struct CANRxMsg
  5084 ;; Return value:  Size  Location     Type
  5085 ;;                  14    0[BANK0 ] struct CANRxMsg
  5086 ;; Registers used:
  5087 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5088 ;; Tracked objects:
  5089 ;;		On entry : 0/0
  5090 ;;		On exit  : 0/0
  5091 ;;		Unchanged: 0/0
  5092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5093 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5094 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5095 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5096 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5097 ;;Total ram usage:       30 bytes
  5098 ;; Hardware stack levels used:    1
  5099 ;; Hardware stack levels required when called:    4
  5100 ;; This function calls:
  5101 ;;		Nothing
  5102 ;; This function is called by:
  5103 ;;		_main
  5104 ;; This function uses a non-reentrant model
  5105 ;;
  5106                           
  5107                           	psect	text17
  5108  00186E                     __ptext17:
  5109                           	opt stack 0
  5110  00186E                     _GetCANRxFifo:
  5111                           	opt stack 26
  5112                           
  5113                           ;Can_HL.c: 115: struct CANRxMsg LocalCANRXMsg;
  5114                           ;Can_HL.c: 118: if(!CANRxFifo.FifoEmpty)
  5115                           
  5116                           ;incstack = 0
  5117  00186E  0102               	movlb	2	; () banked
  5118  001870  0102               	movlb	2	; () banked
  5119  001872  678F               	tstfsz	(_CANRxFifo+143)& (0+255),b
  5120  001874  D051               	goto	l2667
  5121                           
  5122                           ; BSR set to: 2
  5123                           ;Can_HL.c: 119: {
  5124                           ;Can_HL.c: 120: INTCONbits.GIE=0;
  5125  001876  9EF2               	bcf	intcon,7,c	;volatile
  5126                           
  5127                           ; BSR set to: 2
  5128                           ;Can_HL.c: 122: LocalCANRXMsg=CANRxFifo.CANMsg[CANRxFifo.LowIndex];
  5129  001878  0102               	movlb	2	; () banked
  5130  00187A  0102               	movlb	2	; () banked
  5131  00187C  518C               	movf	(_CANRxFifo+140)& (0+255),w,b
  5132  00187E  0D0E               	mullw	14
  5133  001880  0E00               	movlw	low _CANRxFifo
  5134  001882  0100               	movlb	0	; () banked
  5135  001884  6F6E               	movwf	??_GetCANRxFifo& (0+255),b
  5136  001886  0E02               	movlw	high _CANRxFifo
  5137  001888  6F6F               	movwf	(??_GetCANRxFifo+1)& (0+255),b
  5138  00188A  50F3               	movf	prodl,w,c
  5139  00188C  0100               	movlb	0	; () banked
  5140  00188E  276E               	addwf	??_GetCANRxFifo& (0+255),f,b
  5141  001890  50F4               	movf	prodh,w,c
  5142  001892  0100               	movlb	0	; () banked
  5143  001894  236F               	addwfc	(??_GetCANRxFifo+1)& (0+255),f,b
  5144  001896  C06E  FFD9         	movff	??_GetCANRxFifo,fsr2l
  5145  00189A  C06F  FFDA         	movff	??_GetCANRxFifo+1,fsr2h
  5146  00189E  EE10  F070         	lfsr	1,GetCANRxFifo@LocalCANRXMsg
  5147  0018A2  0E0E               	movlw	14
  5148  0018A4                     u1961:
  5149  0018A4  CFDE FFE6          	movff	postinc2,postinc1
  5150  0018A8  2EE8               	decfsz	wreg,f,c
  5151  0018AA  D7FC               	goto	u1961
  5152                           
  5153                           ; BSR set to: 0
  5154                           ;Can_HL.c: 123: CANRxFifo.Fifofull=0;
  5155  0018AC  0100               	movlb	0	; () banked
  5156  0018AE  6F6E               	movwf	??_GetCANRxFifo& (0+255),b
  5157  0018B0  0E00               	movlw	0
  5158  0018B2  0102               	movlb	2	; () banked
  5159  0018B4  0102               	movlb	2	; () banked
  5160  0018B6  6F8E               	movwf	(_CANRxFifo+142)& (0+255),b
  5161  0018B8  0100               	movlb	0	; () banked
  5162  0018BA  516E               	movf	??_GetCANRxFifo& (0+255),w,b
  5163                           
  5164                           ; BSR set to: 0
  5165                           ;Can_HL.c: 124: CANRxFifo.LowIndex++;
  5166  0018BC  0102               	movlb	2	; () banked
  5167  0018BE  0102               	movlb	2	; () banked
  5168  0018C0  2B8C               	incf	(_CANRxFifo+140)& (0+255),f,b
  5169                           
  5170                           ; BSR set to: 2
  5171                           ;Can_HL.c: 126: if(CANRxFifo.LowIndex==(10))
  5172  0018C2  0102               	movlb	2	; () banked
  5173  0018C4  0102               	movlb	2	; () banked
  5174  0018C6  518C               	movf	(_CANRxFifo+140)& (0+255),w,b
  5175  0018C8  0A0A               	xorlw	10
  5176  0018CA  A4D8               	btfss	status,2,c
  5177  0018CC  D008               	goto	l2655
  5178                           
  5179                           ; BSR set to: 2
  5180                           ;Can_HL.c: 127: CANRxFifo.LowIndex=0;
  5181  0018CE  0100               	movlb	0	; () banked
  5182  0018D0  6F6E               	movwf	??_GetCANRxFifo& (0+255),b
  5183  0018D2  0E00               	movlw	0
  5184  0018D4  0102               	movlb	2	; () banked
  5185  0018D6  0102               	movlb	2	; () banked
  5186  0018D8  6F8C               	movwf	(_CANRxFifo+140)& (0+255),b
  5187  0018DA  0100               	movlb	0	; () banked
  5188  0018DC  516E               	movf	??_GetCANRxFifo& (0+255),w,b
  5189  0018DE                     l2655:
  5190                           
  5191                           ;Can_HL.c: 129: if(CANRxFifo.HighIndex==CANRxFifo.LowIndex)
  5192  0018DE  0102               	movlb	2	; () banked
  5193  0018E0  0102               	movlb	2	; () banked
  5194  0018E2  518C               	movf	(_CANRxFifo+140)& (0+255),w,b
  5195  0018E4  0102               	movlb	2	; () banked
  5196  0018E6  EE22  F08D         	lfsr	2,_CANRxFifo+141
  5197  0018EA  62DF               	cpfseq	indf2,c
  5198  0018EC  D008               	goto	l2659
  5199                           
  5200                           ; BSR set to: 2
  5201                           ;Can_HL.c: 130: CANRxFifo.FifoEmpty=1;
  5202  0018EE  0100               	movlb	0	; () banked
  5203  0018F0  6F6E               	movwf	??_GetCANRxFifo& (0+255),b
  5204  0018F2  0E01               	movlw	1
  5205  0018F4  0102               	movlb	2	; () banked
  5206  0018F6  0102               	movlb	2	; () banked
  5207  0018F8  6F8F               	movwf	(_CANRxFifo+143)& (0+255),b
  5208  0018FA  0100               	movlb	0	; () banked
  5209  0018FC  516E               	movf	??_GetCANRxFifo& (0+255),w,b
  5210  0018FE                     l2659:
  5211                           
  5212                           ;Can_HL.c: 132: INTCONbits.GIE=1;
  5213  0018FE  8EF2               	bsf	intcon,7,c	;volatile
  5214                           
  5215                           ;Can_HL.c: 133: return LocalCANRXMsg;
  5216  001900  EE20  F07D         	lfsr	2,GetCANRxFifo@LocalCANRXMsg+13
  5217  001904  EE00  F06D         	lfsr	0,?_GetCANRxFifo+13
  5218  001908  0E0E               	movlw	14
  5219  00190A                     u1991:
  5220  00190A  CFDD FFED          	movff	postdec2,postdec0
  5221  00190E  2EE8               	decfsz	wreg,f,c
  5222  001910  D7FC               	goto	u1991
  5223  001912  2AE9               	incf	fsr0l,f,c
  5224  001914  22EA               	addwfc	fsr0h,f,c
  5225  001916  0012               	return	
  5226  001918                     l2667:
  5227                           
  5228                           ;Can_HL.c: 135: else
  5229                           ;Can_HL.c: 136: {
  5230                           ;Can_HL.c: 137: LocalCANRXMsg.id=0;
  5231  001918  0E00               	movlw	0
  5232  00191A  0100               	movlb	0	; () banked
  5233  00191C  0100               	movlb	0	; () banked
  5234  00191E  6F70               	movwf	GetCANRxFifo@LocalCANRXMsg& (0+255),b
  5235  001920  0E00               	movlw	0
  5236  001922  0100               	movlb	0	; () banked
  5237  001924  6F71               	movwf	(GetCANRxFifo@LocalCANRXMsg+1)& (0+255),b
  5238  001926  0E00               	movlw	0
  5239  001928  0100               	movlb	0	; () banked
  5240  00192A  6F72               	movwf	(GetCANRxFifo@LocalCANRXMsg+2)& (0+255),b
  5241  00192C  0E00               	movlw	0
  5242  00192E  0100               	movlb	0	; () banked
  5243  001930  6F73               	movwf	(GetCANRxFifo@LocalCANRXMsg+3)& (0+255),b
  5244                           
  5245                           ; BSR set to: 0
  5246                           ;Can_HL.c: 138: return LocalCANRXMsg;
  5247  001932  EE20  F07D         	lfsr	2,GetCANRxFifo@LocalCANRXMsg+13
  5248  001936  EE00  F06D         	lfsr	0,?_GetCANRxFifo+13
  5249  00193A  0E0E               	movlw	14
  5250  00193C                     u2001:
  5251  00193C  CFDD FFED          	movff	postdec2,postdec0
  5252  001940  2EE8               	decfsz	wreg,f,c
  5253  001942  D7FC               	goto	u2001
  5254  001944  2AE9               	incf	fsr0l,f,c
  5255  001946  22EA               	addwfc	fsr0h,f,c
  5256  001948  0012               	return	
  5257  00194A                     __end_of_GetCANRxFifo:
  5258                           	opt stack 0
  5259                           pclatu	equ	0xFFB
  5260                           pclath	equ	0xFFA
  5261                           tblptru	equ	0xFF8
  5262                           tblptrh	equ	0xFF7
  5263                           tblptrl	equ	0xFF6
  5264                           tablat	equ	0xFF5
  5265                           prodh	equ	0xFF4
  5266                           prodl	equ	0xFF3
  5267                           intcon	equ	0xFF2
  5268                           postinc0	equ	0xFEE
  5269                           postdec0	equ	0xFED
  5270                           fsr0h	equ	0xFEA
  5271                           fsr0l	equ	0xFE9
  5272                           wreg	equ	0xFE8
  5273                           postinc1	equ	0xFE6
  5274                           fsr1h	equ	0xFE2
  5275                           fsr1l	equ	0xFE1
  5276                           bsr	equ	0xFE0
  5277                           indf2	equ	0xFDF
  5278                           postinc2	equ	0xFDE
  5279                           postdec2	equ	0xFDD
  5280                           fsr2h	equ	0xFDA
  5281                           fsr2l	equ	0xFD9
  5282                           status	equ	0xFD8
  5283                           
  5284 ;; *************** function _GetActuatorPosition *****************
  5285 ;; Defined at:
  5286 ;;		line 315 in file "system.c"
  5287 ;; Parameters:    Size  Location     Type
  5288 ;;		None
  5289 ;; Auto vars:     Size  Location     Type
  5290 ;;  adc_result      2    8[BANK0 ] unsigned int 
  5291 ;; Return value:  Size  Location     Type
  5292 ;;                  1    wreg      unsigned char 
  5293 ;; Registers used:
  5294 ;;		wreg, status,2, status,0, cstack
  5295 ;; Tracked objects:
  5296 ;;		On entry : 0/0
  5297 ;;		On exit  : 0/0
  5298 ;;		Unchanged: 0/0
  5299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5301 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5303 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5304 ;;Total ram usage:        2 bytes
  5305 ;; Hardware stack levels used:    1
  5306 ;; Hardware stack levels required when called:    5
  5307 ;; This function calls:
  5308 ;;		___lwdiv
  5309 ;; This function is called by:
  5310 ;;		_main
  5311 ;; This function uses a non-reentrant model
  5312 ;;
  5313                           
  5314                           	psect	text18
  5315  001CC2                     __ptext18:
  5316                           	opt stack 0
  5317  001CC2                     _GetActuatorPosition:
  5318                           	opt stack 25
  5319                           
  5320                           ;system.c: 317: unsigned int adc_result;
  5321                           ;system.c: 319: ADCON0bits.GO=1;
  5322                           
  5323                           ;incstack = 0
  5324  001CC2  82C2               	bsf	4034,1,c	;volatile
  5325  001CC4                     l307:
  5326  001CC4  B2C2               	btfsc	4034,1,c	;volatile
  5327  001CC6  D7FE               	goto	l307
  5328                           
  5329                           ;system.c: 321: adc_result=(ADRESH);
  5330  001CC8  0100               	movlb	0	; () banked
  5331  001CCA  CFC4 F068          	movff	4036,GetActuatorPosition@adc_result	;volatile
  5332  001CCE  0100               	movlb	0	; () banked
  5333  001CD0  0100               	movlb	0	; () banked
  5334  001CD2  6B69               	clrf	(GetActuatorPosition@adc_result+1)& (0+255),b
  5335                           
  5336                           ; BSR set to: 0
  5337                           ;system.c: 322: adc_result=adc_result<<8;
  5338  001CD4  0100               	movlb	0	; () banked
  5339  001CD6  0100               	movlb	0	; () banked
  5340  001CD8  5168               	movf	GetActuatorPosition@adc_result& (0+255),w,b
  5341  001CDA  0100               	movlb	0	; () banked
  5342  001CDC  0100               	movlb	0	; () banked
  5343  001CDE  6F69               	movwf	(GetActuatorPosition@adc_result+1)& (0+255),b
  5344  001CE0  0100               	movlb	0	; () banked
  5345  001CE2  6B68               	clrf	GetActuatorPosition@adc_result& (0+255),b
  5346                           
  5347                           ; BSR set to: 0
  5348                           ;system.c: 323: adc_result=adc_result | ADRESL;
  5349  001CE4  0100               	movlb	0	; () banked
  5350  001CE6  0100               	movlb	0	; () banked
  5351  001CE8  5168               	movf	GetActuatorPosition@adc_result& (0+255),w,b
  5352  001CEA  10C3               	iorwf	4035,w,c	;volatile
  5353  001CEC  0100               	movlb	0	; () banked
  5354  001CEE  0100               	movlb	0	; () banked
  5355  001CF0  6F68               	movwf	GetActuatorPosition@adc_result& (0+255),b
  5356  001CF2  0100               	movlb	0	; () banked
  5357  001CF4  0100               	movlb	0	; () banked
  5358  001CF6  5169               	movf	(GetActuatorPosition@adc_result+1)& (0+255),w,b
  5359  001CF8  0100               	movlb	0	; () banked
  5360  001CFA  6F69               	movwf	(GetActuatorPosition@adc_result+1)& (0+255),b
  5361                           
  5362                           ; BSR set to: 0
  5363                           ;system.c: 325: adc_result=adc_result/34;
  5364  001CFC  C068  F060         	movff	GetActuatorPosition@adc_result,___lwdiv@dividend
  5365  001D00  C069  F061         	movff	GetActuatorPosition@adc_result+1,___lwdiv@dividend+1
  5366  001D04  0E00               	movlw	0
  5367  001D06  0100               	movlb	0	; () banked
  5368  001D08  0100               	movlb	0	; () banked
  5369  001D0A  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
  5370  001D0C  0E22               	movlw	34
  5371  001D0E  0100               	movlb	0	; () banked
  5372  001D10  6F62               	movwf	___lwdiv@divisor& (0+255),b
  5373  001D12  ECC2  F00D         	call	___lwdiv	;wreg free
  5374  001D16  0100               	movlb	0	; () banked
  5375  001D18  C060  F068         	movff	?___lwdiv,GetActuatorPosition@adc_result
  5376  001D1C  0100               	movlb	0	; () banked
  5377  001D1E  C061  F069         	movff	?___lwdiv+1,GetActuatorPosition@adc_result+1
  5378                           
  5379                           ; BSR set to: 0
  5380                           ;system.c: 327: if(adc_result>100)
  5381  001D22  0E65               	movlw	101
  5382  001D24  0100               	movlb	0	; () banked
  5383  001D26  0100               	movlb	0	; () banked
  5384  001D28  5D68               	subwf	GetActuatorPosition@adc_result& (0+255),w,b
  5385  001D2A  0E00               	movlw	0
  5386  001D2C  0100               	movlb	0	; () banked
  5387  001D2E  5969               	subwfb	(GetActuatorPosition@adc_result+1)& (0+255),w,b
  5388  001D30  A0D8               	btfss	status,0,c
  5389  001D32  D007               	goto	l310
  5390                           
  5391                           ; BSR set to: 0
  5392                           ;system.c: 328: adc_result=100;
  5393  001D34  0E00               	movlw	0
  5394  001D36  0100               	movlb	0	; () banked
  5395  001D38  0100               	movlb	0	; () banked
  5396  001D3A  6F69               	movwf	(GetActuatorPosition@adc_result+1)& (0+255),b
  5397  001D3C  0E64               	movlw	100
  5398  001D3E  0100               	movlb	0	; () banked
  5399  001D40  6F68               	movwf	GetActuatorPosition@adc_result& (0+255),b
  5400  001D42                     l310:
  5401                           
  5402                           ; BSR set to: 0
  5403                           ;system.c: 331: return (char) adc_result;
  5404  001D42  0100               	movlb	0	; () banked
  5405  001D44  0100               	movlb	0	; () banked
  5406  001D46  5168               	movf	GetActuatorPosition@adc_result& (0+255),w,b
  5407  001D48  0012               	return	
  5408  001D4A                     __end_of_GetActuatorPosition:
  5409                           	opt stack 0
  5410                           pclatu	equ	0xFFB
  5411                           pclath	equ	0xFFA
  5412                           tblptru	equ	0xFF8
  5413                           tblptrh	equ	0xFF7
  5414                           tblptrl	equ	0xFF6
  5415                           tablat	equ	0xFF5
  5416                           prodh	equ	0xFF4
  5417                           prodl	equ	0xFF3
  5418                           intcon	equ	0xFF2
  5419                           postinc0	equ	0xFEE
  5420                           postdec0	equ	0xFED
  5421                           fsr0h	equ	0xFEA
  5422                           fsr0l	equ	0xFE9
  5423                           wreg	equ	0xFE8
  5424                           postinc1	equ	0xFE6
  5425                           fsr1h	equ	0xFE2
  5426                           fsr1l	equ	0xFE1
  5427                           bsr	equ	0xFE0
  5428                           indf2	equ	0xFDF
  5429                           postinc2	equ	0xFDE
  5430                           postdec2	equ	0xFDD
  5431                           fsr2h	equ	0xFDA
  5432                           fsr2l	equ	0xFD9
  5433                           status	equ	0xFD8
  5434                           
  5435 ;; *************** function ___lwdiv *****************
  5436 ;; Defined at:
  5437 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lwdiv.c"
  5438 ;; Parameters:    Size  Location     Type
  5439 ;;  dividend        2    0[BANK0 ] unsigned int 
  5440 ;;  divisor         2    2[BANK0 ] unsigned int 
  5441 ;; Auto vars:     Size  Location     Type
  5442 ;;  quotient        2    5[BANK0 ] unsigned int 
  5443 ;;  counter         1    7[BANK0 ] unsigned char 
  5444 ;; Return value:  Size  Location     Type
  5445 ;;                  2    0[BANK0 ] unsigned int 
  5446 ;; Registers used:
  5447 ;;		wreg, status,2, status,0
  5448 ;; Tracked objects:
  5449 ;;		On entry : 0/0
  5450 ;;		On exit  : 0/0
  5451 ;;		Unchanged: 0/0
  5452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5453 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5454 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5455 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5456 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5457 ;;Total ram usage:        8 bytes
  5458 ;; Hardware stack levels used:    1
  5459 ;; Hardware stack levels required when called:    4
  5460 ;; This function calls:
  5461 ;;		Nothing
  5462 ;; This function is called by:
  5463 ;;		_GetActuatorPosition
  5464 ;; This function uses a non-reentrant model
  5465 ;;
  5466                           
  5467                           	psect	text19
  5468  001B84                     __ptext19:
  5469                           	opt stack 0
  5470  001B84                     ___lwdiv:
  5471                           	opt stack 25
  5472                           
  5473                           ; BSR set to: 0
  5474                           ;incstack = 0
  5475  001B84  0E00               	movlw	0
  5476  001B86  0100               	movlb	0	; () banked
  5477  001B88  0100               	movlb	0	; () banked
  5478  001B8A  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
  5479  001B8C  0E00               	movlw	0
  5480  001B8E  0100               	movlb	0	; () banked
  5481  001B90  6F65               	movwf	___lwdiv@quotient& (0+255),b
  5482                           
  5483                           ; BSR set to: 0
  5484  001B92  0100               	movlb	0	; () banked
  5485  001B94  0100               	movlb	0	; () banked
  5486  001B96  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  5487  001B98  1162               	iorwf	___lwdiv@divisor& (0+255),w,b
  5488  001B9A  B4D8               	btfsc	status,2,c
  5489  001B9C  D043               	goto	l1031
  5490                           
  5491                           ; BSR set to: 0
  5492  001B9E  0100               	movlb	0	; () banked
  5493  001BA0  6F64               	movwf	??___lwdiv& (0+255),b
  5494  001BA2  0E01               	movlw	1
  5495  001BA4  0100               	movlb	0	; () banked
  5496  001BA6  0100               	movlb	0	; () banked
  5497  001BA8  6F67               	movwf	___lwdiv@counter& (0+255),b
  5498  001BAA  0100               	movlb	0	; () banked
  5499  001BAC  5164               	movf	??___lwdiv& (0+255),w,b
  5500  001BAE  D009               	goto	l3041
  5501  001BB0                     l3039:
  5502                           
  5503                           ; BSR set to: 0
  5504  001BB0  0100               	movlb	0	; () banked
  5505  001BB2  0100               	movlb	0	; () banked
  5506  001BB4  0100               	movlb	0	; () banked
  5507  001BB6  90D8               	bcf	status,0,c
  5508  001BB8  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
  5509  001BBA  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  5510  001BBC  0100               	movlb	0	; () banked
  5511  001BBE  0100               	movlb	0	; () banked
  5512  001BC0  2B67               	incf	___lwdiv@counter& (0+255),f,b
  5513  001BC2                     l3041:
  5514                           
  5515                           ; BSR set to: 0
  5516  001BC2  0100               	movlb	0	; () banked
  5517  001BC4  0100               	movlb	0	; () banked
  5518  001BC6  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  5519  001BC8  D7F3               	goto	l3039
  5520  001BCA                     l3043:
  5521                           
  5522                           ; BSR set to: 0
  5523  001BCA  0100               	movlb	0	; () banked
  5524  001BCC  0100               	movlb	0	; () banked
  5525  001BCE  0100               	movlb	0	; () banked
  5526  001BD0  90D8               	bcf	status,0,c
  5527  001BD2  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
  5528  001BD4  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  5529                           
  5530                           ; BSR set to: 0
  5531  001BD6  0100               	movlb	0	; () banked
  5532  001BD8  0100               	movlb	0	; () banked
  5533  001BDA  5162               	movf	___lwdiv@divisor& (0+255),w,b
  5534  001BDC  0100               	movlb	0	; () banked
  5535  001BDE  0100               	movlb	0	; () banked
  5536  001BE0  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
  5537  001BE2  0100               	movlb	0	; () banked
  5538  001BE4  0100               	movlb	0	; () banked
  5539  001BE6  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  5540  001BE8  0100               	movlb	0	; () banked
  5541  001BEA  0100               	movlb	0	; () banked
  5542  001BEC  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  5543  001BEE  A0D8               	btfss	status,0,c
  5544  001BF0  D00F               	goto	l3051
  5545                           
  5546                           ; BSR set to: 0
  5547  001BF2  0100               	movlb	0	; () banked
  5548  001BF4  0100               	movlb	0	; () banked
  5549  001BF6  5162               	movf	___lwdiv@divisor& (0+255),w,b
  5550  001BF8  0100               	movlb	0	; () banked
  5551  001BFA  0100               	movlb	0	; () banked
  5552  001BFC  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
  5553  001BFE  0100               	movlb	0	; () banked
  5554  001C00  0100               	movlb	0	; () banked
  5555  001C02  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  5556  001C04  0100               	movlb	0	; () banked
  5557  001C06  0100               	movlb	0	; () banked
  5558  001C08  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  5559                           
  5560                           ; BSR set to: 0
  5561  001C0A  0100               	movlb	0	; () banked
  5562  001C0C  0100               	movlb	0	; () banked
  5563  001C0E  8165               	bsf	___lwdiv@quotient& (0+255),0,b
  5564  001C10                     l3051:
  5565                           
  5566                           ; BSR set to: 0
  5567  001C10  0100               	movlb	0	; () banked
  5568  001C12  0100               	movlb	0	; () banked
  5569  001C14  0100               	movlb	0	; () banked
  5570  001C16  90D8               	bcf	status,0,c
  5571  001C18  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  5572  001C1A  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
  5573                           
  5574                           ; BSR set to: 0
  5575  001C1C  0100               	movlb	0	; () banked
  5576  001C1E  0100               	movlb	0	; () banked
  5577  001C20  2F67               	decfsz	___lwdiv@counter& (0+255),f,b
  5578  001C22  D7D3               	goto	l3043
  5579  001C24                     l1031:
  5580                           
  5581                           ; BSR set to: 0
  5582  001C24  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
  5583  001C28  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5584                           
  5585                           ; BSR set to: 0
  5586  001C2C  0012               	return	
  5587  001C2E                     __end_of___lwdiv:
  5588                           	opt stack 0
  5589                           pclatu	equ	0xFFB
  5590                           pclath	equ	0xFFA
  5591                           tblptru	equ	0xFF8
  5592                           tblptrh	equ	0xFF7
  5593                           tblptrl	equ	0xFF6
  5594                           tablat	equ	0xFF5
  5595                           prodh	equ	0xFF4
  5596                           prodl	equ	0xFF3
  5597                           intcon	equ	0xFF2
  5598                           postinc0	equ	0xFEE
  5599                           postdec0	equ	0xFED
  5600                           fsr0h	equ	0xFEA
  5601                           fsr0l	equ	0xFE9
  5602                           wreg	equ	0xFE8
  5603                           postinc1	equ	0xFE6
  5604                           fsr1h	equ	0xFE2
  5605                           fsr1l	equ	0xFE1
  5606                           bsr	equ	0xFE0
  5607                           indf2	equ	0xFDF
  5608                           postinc2	equ	0xFDE
  5609                           postdec2	equ	0xFDD
  5610                           fsr2h	equ	0xFDA
  5611                           fsr2l	equ	0xFD9
  5612                           status	equ	0xFD8
  5613                           
  5614 ;; *************** function _ECANSendMessage *****************
  5615 ;; Defined at:
  5616 ;;		line 610 in file "ECANPoll.c"
  5617 ;; Parameters:    Size  Location     Type
  5618 ;;  id              4   11[BANK0 ] unsigned long 
  5619 ;;  data            2   15[BANK0 ] PTR unsigned char 
  5620 ;;		 -> main@TempCANTxMsg(14), 
  5621 ;;  dataLen         1   17[BANK0 ] unsigned char 
  5622 ;;  msgFlags        1   18[BANK0 ] enum E19280
  5623 ;; Auto vars:     Size  Location     Type
  5624 ;;  pb             18   20[BANK0 ] PTR unsigned char [9]
  5625 ;;		 -> TXB2CON(1), TXB1CON(1), TXB0CON(1), 
  5626 ;;  ptr             2   43[BANK0 ] PTR unsigned char 
  5627 ;;		 -> TXB2CON(1), TXB1CON(1), TXB0CON(1), 
  5628 ;;  tempPtr         2   39[BANK0 ] PTR unsigned char 
  5629 ;;		 -> TXB2CON(1), TXB1CON(1), TXB0CON(1), 
  5630 ;;  i               1   42[BANK0 ] unsigned char 
  5631 ;;  temp            1   41[BANK0 ] unsigned char 
  5632 ;;  j               1   38[BANK0 ] unsigned char 
  5633 ;; Return value:  Size  Location     Type
  5634 ;;                  1    wreg      enum E18559
  5635 ;; Registers used:
  5636 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5637 ;; Tracked objects:
  5638 ;;		On entry : 0/0
  5639 ;;		On exit  : 0/0
  5640 ;;		Unchanged: 0/0
  5641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5642 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5643 ;;      Locals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5644 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5645 ;;      Totals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5646 ;;Total ram usage:       34 bytes
  5647 ;; Hardware stack levels used:    1
  5648 ;; Hardware stack levels required when called:    5
  5649 ;; This function calls:
  5650 ;;		__CANIDToRegs
  5651 ;; This function is called by:
  5652 ;;		_main
  5653 ;; This function uses a non-reentrant model
  5654 ;;
  5655                           
  5656                           	psect	text20
  5657  000FFE                     __ptext20:
  5658                           	opt stack 0
  5659  000FFE                     _ECANSendMessage:
  5660                           	opt stack 25
  5661                           
  5662                           ;ECANPoll.c: 625: BYTE i,j;
  5663                           ;ECANPoll.c: 626: BYTE *ptr, *tempPtr;
  5664                           ;ECANPoll.c: 627: BYTE* pb[9];
  5665                           ;ECANPoll.c: 628: BYTE temp;
  5666                           ;ECANPoll.c: 638: pb[0]=(BYTE*)&TXB0CON;
  5667                           
  5668                           ; BSR set to: 0
  5669                           ;incstack = 0
  5670  000FFE  010F               	movlb	15	; () banked
  5671  001000  0E0F               	movlw	15	;volatile
  5672  001002  0100               	movlb	0	; () banked
  5673  001004  0100               	movlb	0	; () banked
  5674  001006  6F75               	movwf	(ECANSendMessage@pb+1)& (0+255),b
  5675  001008  010F               	movlb	15	; () banked
  5676  00100A  0E20               	movlw	32	;volatile
  5677  00100C  0100               	movlb	0	; () banked
  5678  00100E  0100               	movlb	0	; () banked
  5679  001010  6F74               	movwf	ECANSendMessage@pb& (0+255),b
  5680                           
  5681                           ;ECANPoll.c: 639: pb[1]=(BYTE*)&TXB1CON;
  5682  001012  010F               	movlb	15	; () banked
  5683  001014  0E0F               	movlw	15	;volatile
  5684  001016  0100               	movlb	0	; () banked
  5685  001018  0100               	movlb	0	; () banked
  5686  00101A  6F77               	movwf	(ECANSendMessage@pb+3)& (0+255),b
  5687  00101C  010F               	movlb	15	; () banked
  5688  00101E  0E10               	movlw	16	;volatile
  5689  001020  0100               	movlb	0	; () banked
  5690  001022  0100               	movlb	0	; () banked
  5691  001024  6F76               	movwf	(ECANSendMessage@pb+2)& (0+255),b
  5692                           
  5693                           ;ECANPoll.c: 640: pb[2]=(BYTE*)&TXB2CON;
  5694  001026  010F               	movlb	15	; () banked
  5695  001028  0E0F               	movlw	15	;volatile
  5696  00102A  0100               	movlb	0	; () banked
  5697  00102C  0100               	movlb	0	; () banked
  5698  00102E  6F79               	movwf	(ECANSendMessage@pb+5)& (0+255),b
  5699  001030  010F               	movlb	15	; () banked
  5700  001032  0E00               	movlw	0	;volatile
  5701  001034  0100               	movlb	0	; () banked
  5702  001036  0100               	movlb	0	; () banked
  5703  001038  6F78               	movwf	(ECANSendMessage@pb+4)& (0+255),b
  5704                           
  5705                           ; BSR set to: 0
  5706                           ;ECANPoll.c: 670: for ( i = 0; i < 2; i++ )
  5707  00103A  0100               	movlb	0	; () banked
  5708  00103C  6F73               	movwf	??_ECANSendMessage& (0+255),b
  5709  00103E  0E00               	movlw	0
  5710  001040  0100               	movlb	0	; () banked
  5711  001042  0100               	movlb	0	; () banked
  5712  001044  6F8A               	movwf	ECANSendMessage@i& (0+255),b
  5713  001046  0100               	movlb	0	; () banked
  5714  001048  5173               	movf	??_ECANSendMessage& (0+255),w,b
  5715                           
  5716                           ; BSR set to: 0
  5717  00104A  0E01               	movlw	1
  5718  00104C  0100               	movlb	0	; () banked
  5719  00104E  0100               	movlb	0	; () banked
  5720  001050  658A               	cpfsgt	ECANSendMessage@i& (0+255),b
  5721  001052  D001               	goto	l2713
  5722  001054  0012               	return	
  5723  001056                     l2713:
  5724                           
  5725                           ; BSR set to: 0
  5726                           ;ECANPoll.c: 685: {
  5727                           ;ECANPoll.c: 690: ptr = pb[i];
  5728  001056  0100               	movlb	0	; () banked
  5729  001058  0100               	movlb	0	; () banked
  5730  00105A  518A               	movf	ECANSendMessage@i& (0+255),w,b
  5731  00105C  0D02               	mullw	2
  5732  00105E  0100               	movlb	0	; () banked
  5733  001060  0E74               	movlw	low ECANSendMessage@pb
  5734  001062  24F3               	addwf	prodl,w,c
  5735  001064  6ED9               	movwf	fsr2l,c
  5736  001066  0100               	movlb	0	; () banked
  5737  001068  0E00               	movlw	high ECANSendMessage@pb
  5738  00106A  20F4               	addwfc	prodh,w,c
  5739  00106C  6EDA               	movwf	fsr2h,c
  5740  00106E  0100               	movlb	0	; () banked
  5741  001070  CFDE F08B          	movff	postinc2,ECANSendMessage@ptr
  5742  001074  0100               	movlb	0	; () banked
  5743  001076  CFDD F08C          	movff	postdec2,ECANSendMessage@ptr+1
  5744                           
  5745                           ; BSR set to: 0
  5746                           ;ECANPoll.c: 691: tempPtr = ptr;
  5747  00107A  0100               	movlb	0	; () banked
  5748  00107C  0100               	movlb	0	; () banked
  5749  00107E  C08C  F088         	movff	ECANSendMessage@ptr+1,ECANSendMessage@tempPtr+1
  5750  001082  0100               	movlb	0	; () banked
  5751  001084  0100               	movlb	0	; () banked
  5752  001086  C08B  F087         	movff	ECANSendMessage@ptr,ECANSendMessage@tempPtr
  5753                           
  5754                           ; BSR set to: 0
  5755                           ;ECANPoll.c: 717: if ( !(*ptr & 0x08) )
  5756  00108A  C08B  FFD9         	movff	ECANSendMessage@ptr,fsr2l
  5757  00108E  C08C  FFDA         	movff	ECANSendMessage@ptr+1,fsr2h
  5758  001092  50DF               	movf	indf2,w,c
  5759  001094  0100               	movlb	0	; () banked
  5760  001096  6F73               	movwf	??_ECANSendMessage& (0+255),b
  5761  001098  0100               	movlb	0	; () banked
  5762  00109A  B773               	btfsc	??_ECANSendMessage& (0+255),3,b
  5763  00109C  D093               	goto	l2757
  5764                           
  5765                           ; BSR set to: 0
  5766                           ;ECANPoll.c: 718: {
  5767                           ;ECANPoll.c: 720: *ptr &= ~ECAN_TX_PRIORITY_BITS;
  5768  00109E  C08B  FFD9         	movff	ECANSendMessage@ptr,fsr2l
  5769  0010A2  C08C  FFDA         	movff	ECANSendMessage@ptr+1,fsr2h
  5770  0010A6  0EFC               	movlw	252
  5771  0010A8  16DF               	andwf	indf2,f,c
  5772                           
  5773                           ; BSR set to: 0
  5774                           ;ECANPoll.c: 721: *ptr |= msgFlags & ECAN_TX_PRIORITY_BITS;
  5775  0010AA  C072  F073         	movff	ECANSendMessage@msgFlags,??_ECANSendMessage
  5776  0010AE  0E03               	movlw	3
  5777  0010B0  0100               	movlb	0	; () banked
  5778  0010B2  1773               	andwf	??_ECANSendMessage& (0+255),f,b
  5779  0010B4  C08B  FFD9         	movff	ECANSendMessage@ptr,fsr2l
  5780  0010B8  C08C  FFDA         	movff	ECANSendMessage@ptr+1,fsr2h
  5781  0010BC  0100               	movlb	0	; () banked
  5782  0010BE  5173               	movf	??_ECANSendMessage& (0+255),w,b
  5783  0010C0  12DF               	iorwf	indf2,f,c
  5784                           
  5785                           ; BSR set to: 0
  5786                           ;ECANPoll.c: 724: if ( msgFlags & ECAN_TX_RTR_BIT )
  5787  0010C2  0100               	movlb	0	; () banked
  5788  0010C4  0100               	movlb	0	; () banked
  5789  0010C6  AD72               	btfss	ECANSendMessage@msgFlags& (0+255),6,b
  5790  0010C8  D008               	goto	l408
  5791                           
  5792                           ; BSR set to: 0
  5793                           ;ECANPoll.c: 725: temp = 0x40 | dataLen;
  5794  0010CA  0100               	movlb	0	; () banked
  5795  0010CC  0100               	movlb	0	; () banked
  5796  0010CE  5171               	movf	ECANSendMessage@dataLen& (0+255),w,b
  5797  0010D0  0940               	iorlw	64
  5798  0010D2  0100               	movlb	0	; () banked
  5799  0010D4  0100               	movlb	0	; () banked
  5800  0010D6  6F89               	movwf	ECANSendMessage@temp& (0+255),b
  5801  0010D8  D002               	goto	l2727
  5802  0010DA                     l408:
  5803                           
  5804                           ; BSR set to: 0
  5805                           ;ECANPoll.c: 726: else
  5806                           ;ECANPoll.c: 727: temp = dataLen;
  5807  0010DA  C071  F089         	movff	ECANSendMessage@dataLen,ECANSendMessage@temp
  5808  0010DE                     l2727:
  5809                           
  5810                           ; BSR set to: 0
  5811                           ;ECANPoll.c: 729: *(ptr+5) = temp;
  5812  0010DE  0100               	movlb	0	; () banked
  5813  0010E0  EE20 F005          	lfsr	2,5
  5814  0010E4  0100               	movlb	0	; () banked
  5815  0010E6  518B               	movf	ECANSendMessage@ptr& (0+255),w,b
  5816  0010E8  26D9               	addwf	fsr2l,f,c
  5817  0010EA  0100               	movlb	0	; () banked
  5818  0010EC  518C               	movf	(ECANSendMessage@ptr+1)& (0+255),w,b
  5819  0010EE  22DA               	addwfc	fsr2h,f,c
  5820  0010F0  0100               	movlb	0	; () banked
  5821  0010F2  C089  FFDF         	movff	ECANSendMessage@temp,indf2
  5822                           
  5823                           ; BSR set to: 0
  5824                           ;ECANPoll.c: 732: if ( msgFlags & ECAN_TX_FRAME_BIT )
  5825  0010F6  0100               	movlb	0	; () banked
  5826  0010F8  0100               	movlb	0	; () banked
  5827  0010FA  AB72               	btfss	ECANSendMessage@msgFlags& (0+255),5,b
  5828  0010FC  D004               	goto	l2733
  5829                           
  5830                           ; BSR set to: 0
  5831                           ;ECANPoll.c: 733: temp = 1;
  5832  0010FE  0100               	movlb	0	; () banked
  5833  001100  6F73               	movwf	??_ECANSendMessage& (0+255),b
  5834  001102  0E01               	movlw	1
  5835  001104  D003               	goto	L2
  5836  001106                     l2733:
  5837                           
  5838                           ; BSR set to: 0
  5839                           ;ECANPoll.c: 735: else
  5840                           ;ECANPoll.c: 736: temp = 0;
  5841  001106  0100               	movlb	0	; () banked
  5842  001108  6F73               	movwf	??_ECANSendMessage& (0+255),b
  5843  00110A  0E00               	movlw	0
  5844  00110C                     L2:
  5845  00110C  0100               	movlb	0	; () banked
  5846  00110E  0100               	movlb	0	; () banked
  5847  001110  6F89               	movwf	ECANSendMessage@temp& (0+255),b
  5848  001112  0100               	movlb	0	; () banked
  5849  001114  5173               	movf	??_ECANSendMessage& (0+255),w,b
  5850                           
  5851                           ; BSR set to: 0
  5852                           ;ECANPoll.c: 739: _CANIDToRegs((BYTE*)(ptr+1), id, temp);
  5853                           
  5854                           ; BSR set to: 0
  5855  001116  0E01               	movlw	1
  5856  001118  0100               	movlb	0	; () banked
  5857  00111A  0100               	movlb	0	; () banked
  5858  00111C  258B               	addwf	ECANSendMessage@ptr& (0+255),w,b
  5859  00111E  0100               	movlb	0	; () banked
  5860  001120  0100               	movlb	0	; () banked
  5861  001122  6F60               	movwf	__CANIDToRegs@ptr& (0+255),b
  5862  001124  0E00               	movlw	0
  5863  001126  0100               	movlb	0	; () banked
  5864  001128  0100               	movlb	0	; () banked
  5865  00112A  218C               	addwfc	(ECANSendMessage@ptr+1)& (0+255),w,b
  5866  00112C  0100               	movlb	0	; () banked
  5867  00112E  6F61               	movwf	(__CANIDToRegs@ptr+1)& (0+255),b
  5868  001130  C06B  F062         	movff	ECANSendMessage@id,__CANIDToRegs@val
  5869  001134  C06C  F063         	movff	ECANSendMessage@id+1,__CANIDToRegs@val+1
  5870  001138  C06D  F064         	movff	ECANSendMessage@id+2,__CANIDToRegs@val+2
  5871  00113C  C06E  F065         	movff	ECANSendMessage@id+3,__CANIDToRegs@val+3
  5872  001140  C089  F066         	movff	ECANSendMessage@temp,__CANIDToRegs@type
  5873  001144  EC23  F006         	call	__CANIDToRegs	;wreg free
  5874                           
  5875                           ;ECANPoll.c: 742: ptr += 6;
  5876  001148  0E06               	movlw	6
  5877  00114A  0100               	movlb	0	; () banked
  5878  00114C  0100               	movlb	0	; () banked
  5879  00114E  278B               	addwf	ECANSendMessage@ptr& (0+255),f,b
  5880  001150  0E00               	movlw	0
  5881  001152  0100               	movlb	0	; () banked
  5882  001154  238C               	addwfc	(ECANSendMessage@ptr+1)& (0+255),f,b
  5883                           
  5884                           ; BSR set to: 0
  5885                           ;ECANPoll.c: 744: for ( j = 0 ; j < dataLen; j++ )
  5886  001156  0100               	movlb	0	; () banked
  5887  001158  6F73               	movwf	??_ECANSendMessage& (0+255),b
  5888  00115A  0E00               	movlw	0
  5889  00115C  0100               	movlb	0	; () banked
  5890  00115E  0100               	movlb	0	; () banked
  5891  001160  6F86               	movwf	ECANSendMessage@j& (0+255),b
  5892  001162  0100               	movlb	0	; () banked
  5893  001164  5173               	movf	??_ECANSendMessage& (0+255),w,b
  5894  001166  D015               	goto	l2749
  5895  001168                     l2741:
  5896                           
  5897                           ; BSR set to: 0
  5898                           ;ECANPoll.c: 745: *ptr++ = *data++;
  5899  001168  C06F  FFD9         	movff	ECANSendMessage@data,fsr2l
  5900  00116C  C070  FFDA         	movff	ECANSendMessage@data+1,fsr2h
  5901  001170  C08B  FFE1         	movff	ECANSendMessage@ptr,fsr1l
  5902  001174  C08C  FFE2         	movff	ECANSendMessage@ptr+1,fsr1h
  5903  001178  CFDF FFE7          	movff	indf2,indf1
  5904                           
  5905                           ; BSR set to: 0
  5906  00117C  0100               	movlb	0	; () banked
  5907  00117E  0100               	movlb	0	; () banked
  5908  001180  4B6F               	infsnz	ECANSendMessage@data& (0+255),f,b
  5909  001182  2B70               	incf	(ECANSendMessage@data+1)& (0+255),f,b
  5910                           
  5911                           ; BSR set to: 0
  5912  001184  0100               	movlb	0	; () banked
  5913  001186  0100               	movlb	0	; () banked
  5914  001188  4B8B               	infsnz	ECANSendMessage@ptr& (0+255),f,b
  5915  00118A  2B8C               	incf	(ECANSendMessage@ptr+1)& (0+255),f,b
  5916                           
  5917                           ; BSR set to: 0
  5918  00118C  0100               	movlb	0	; () banked
  5919  00118E  0100               	movlb	0	; () banked
  5920  001190  2B86               	incf	ECANSendMessage@j& (0+255),f,b
  5921  001192                     l2749:
  5922                           
  5923                           ; BSR set to: 0
  5924  001192  0100               	movlb	0	; () banked
  5925  001194  0100               	movlb	0	; () banked
  5926  001196  5171               	movf	ECANSendMessage@dataLen& (0+255),w,b
  5927  001198  0100               	movlb	0	; () banked
  5928  00119A  0100               	movlb	0	; () banked
  5929  00119C  5D86               	subwf	ECANSendMessage@j& (0+255),w,b
  5930  00119E  A0D8               	btfss	status,0,c
  5931  0011A0  D7E3               	goto	l2741
  5932                           
  5933                           ; BSR set to: 0
  5934                           ;ECANPoll.c: 749: if ( !(*tempPtr & 0x04) )
  5935                           
  5936                           ; BSR set to: 0
  5937  0011A2  C087  FFD9         	movff	ECANSendMessage@tempPtr,fsr2l
  5938  0011A6  C088  FFDA         	movff	ECANSendMessage@tempPtr+1,fsr2h
  5939  0011AA  50DF               	movf	indf2,w,c
  5940  0011AC  0100               	movlb	0	; () banked
  5941  0011AE  6F73               	movwf	??_ECANSendMessage& (0+255),b
  5942  0011B0  0100               	movlb	0	; () banked
  5943  0011B2  B573               	btfsc	??_ECANSendMessage& (0+255),2,b
  5944  0011B4  0012               	return	
  5945                           
  5946                           ; BSR set to: 0
  5947                           ;ECANPoll.c: 750: *tempPtr |= 0x08;
  5948  0011B6  C087  FFD9         	movff	ECANSendMessage@tempPtr,fsr2l
  5949  0011BA  C088  FFDA         	movff	ECANSendMessage@tempPtr+1,fsr2h
  5950  0011BE  0E00               	movlw	0
  5951  0011C0  86DB               	bsf	plusw2,3,c
  5952  0011C2  0012               	return	
  5953  0011C4                     l2757:
  5954                           
  5955                           ; BSR set to: 0
  5956  0011C4  0100               	movlb	0	; () banked
  5957  0011C6  0100               	movlb	0	; () banked
  5958  0011C8  2B8A               	incf	ECANSendMessage@i& (0+255),f,b
  5959                           
  5960                           ; BSR set to: 0
  5961  0011CA  0E01               	movlw	1
  5962  0011CC  0100               	movlb	0	; () banked
  5963  0011CE  0100               	movlb	0	; () banked
  5964  0011D0  658A               	cpfsgt	ECANSendMessage@i& (0+255),b
  5965  0011D2  D741               	goto	l2713
  5966  0011D4  0012               	return	
  5967  0011D6                     __end_of_ECANSendMessage:
  5968                           	opt stack 0
  5969                           pclatu	equ	0xFFB
  5970                           pclath	equ	0xFFA
  5971                           tblptru	equ	0xFF8
  5972                           tblptrh	equ	0xFF7
  5973                           tblptrl	equ	0xFF6
  5974                           tablat	equ	0xFF5
  5975                           prodh	equ	0xFF4
  5976                           prodl	equ	0xFF3
  5977                           intcon	equ	0xFF2
  5978                           postinc0	equ	0xFEE
  5979                           postdec0	equ	0xFED
  5980                           fsr0h	equ	0xFEA
  5981                           fsr0l	equ	0xFE9
  5982                           wreg	equ	0xFE8
  5983                           indf1	equ	0xFE7
  5984                           postinc1	equ	0xFE6
  5985                           fsr1h	equ	0xFE2
  5986                           fsr1l	equ	0xFE1
  5987                           bsr	equ	0xFE0
  5988                           indf2	equ	0xFDF
  5989                           postinc2	equ	0xFDE
  5990                           postdec2	equ	0xFDD
  5991                           plusw2	equ	0xFDB
  5992                           fsr2h	equ	0xFDA
  5993                           fsr2l	equ	0xFD9
  5994                           status	equ	0xFD8
  5995                           
  5996 ;; *************** function __CANIDToRegs *****************
  5997 ;; Defined at:
  5998 ;;		line 1097 in file "ECANPoll.c"
  5999 ;; Parameters:    Size  Location     Type
  6000 ;;  ptr             2    0[BANK0 ] PTR unsigned char 
  6001 ;;		 -> TXB2CON(1), TXB1CON(1), TXB0CON(1), 
  6002 ;;  val             4    2[BANK0 ] unsigned long 
  6003 ;;  type            1    6[BANK0 ] unsigned char 
  6004 ;; Auto vars:     Size  Location     Type
  6005 ;;  Value           2    9[BANK0 ] PTR struct _CAN_MESSAGE_
  6006 ;;		 -> _CANIDToRegs@val(4), 
  6007 ;; Return value:  Size  Location     Type
  6008 ;;		None               void
  6009 ;; Registers used:
  6010 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6011 ;; Tracked objects:
  6012 ;;		On entry : 0/0
  6013 ;;		On exit  : 0/0
  6014 ;;		Unchanged: 0/0
  6015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6016 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6017 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6018 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6019 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6020 ;;Total ram usage:       11 bytes
  6021 ;; Hardware stack levels used:    1
  6022 ;; Hardware stack levels required when called:    4
  6023 ;; This function calls:
  6024 ;;		Nothing
  6025 ;; This function is called by:
  6026 ;;		_ECANSendMessage
  6027 ;; This function uses a non-reentrant model
  6028 ;;
  6029                           
  6030                           	psect	text21
  6031  000C46                     __ptext21:
  6032                           	opt stack 0
  6033  000C46                     __CANIDToRegs:
  6034                           	opt stack 25
  6035                           
  6036                           ;ECANPoll.c: 1101: CAN_MESSAGE_ID *Value;
  6037                           ;ECANPoll.c: 1103: Value = (CAN_MESSAGE_ID*)&val;
  6038                           
  6039                           ; BSR set to: 0
  6040                           ;incstack = 0
  6041  000C46  0100               	movlb	0	; () banked
  6042  000C48  0E00               	movlw	high __CANIDToRegs@val
  6043  000C4A  0100               	movlb	0	; () banked
  6044  000C4C  0100               	movlb	0	; () banked
  6045  000C4E  6F6A               	movwf	(__CANIDToRegs@Value+1)& (0+255),b
  6046  000C50  0100               	movlb	0	; () banked
  6047  000C52  0E62               	movlw	low __CANIDToRegs@val
  6048  000C54  0100               	movlb	0	; () banked
  6049  000C56  0100               	movlb	0	; () banked
  6050  000C58  6F69               	movwf	__CANIDToRegs@Value& (0+255),b
  6051                           
  6052                           ; BSR set to: 0
  6053                           ;ECANPoll.c: 1105: if ( type == 0 )
  6054  000C5A  0100               	movlb	0	; () banked
  6055  000C5C  0100               	movlb	0	; () banked
  6056  000C5E  6766               	tstfsz	__CANIDToRegs@type& (0+255),b
  6057  000C60  D04D               	goto	l2889
  6058                           
  6059                           ; BSR set to: 0
  6060                           ;ECANPoll.c: 1106: {
  6061                           ;ECANPoll.c: 1108: *ptr = Value->BYTES.BYTE_1 >> 3;
  6062  000C62  C069  FFD9         	movff	__CANIDToRegs@Value,fsr2l
  6063  000C66  C06A  FFDA         	movff	__CANIDToRegs@Value+1,fsr2h
  6064  000C6A  50DF               	movf	indf2,w,c
  6065  000C6C  0100               	movlb	0	; () banked
  6066  000C6E  6F67               	movwf	??__CANIDToRegs& (0+255),b
  6067  000C70  0100               	movlb	0	; () banked
  6068  000C72  90D8               	bcf	status,0,c
  6069  000C74  3367               	rrcf	??__CANIDToRegs& (0+255),f,b
  6070  000C76  0100               	movlb	0	; () banked
  6071  000C78  90D8               	bcf	status,0,c
  6072  000C7A  3367               	rrcf	??__CANIDToRegs& (0+255),f,b
  6073  000C7C  0100               	movlb	0	; () banked
  6074  000C7E  90D8               	bcf	status,0,c
  6075  000C80  3167               	rrcf	??__CANIDToRegs& (0+255),w,b
  6076  000C82  C060  FFD9         	movff	__CANIDToRegs@ptr,fsr2l
  6077  000C86  C061  FFDA         	movff	__CANIDToRegs@ptr+1,fsr2h
  6078  000C8A  6EDF               	movwf	indf2,c
  6079                           
  6080                           ;ECANPoll.c: 1109: *ptr |= (Value->BYTES.BYTE_2 << 5);
  6081  000C8C  0100               	movlb	0	; () banked
  6082  000C8E  EE20 F001          	lfsr	2,1
  6083  000C92  0100               	movlb	0	; () banked
  6084  000C94  5169               	movf	__CANIDToRegs@Value& (0+255),w,b
  6085  000C96  26D9               	addwf	fsr2l,f,c
  6086  000C98  0100               	movlb	0	; () banked
  6087  000C9A  516A               	movf	(__CANIDToRegs@Value+1)& (0+255),w,b
  6088  000C9C  22DA               	addwfc	fsr2h,f,c
  6089  000C9E  50DF               	movf	indf2,w,c
  6090  000CA0  0100               	movlb	0	; () banked
  6091  000CA2  6F67               	movwf	??__CANIDToRegs& (0+255),b
  6092  000CA4  0E05               	movlw	5
  6093  000CA6  0100               	movlb	0	; () banked
  6094  000CA8  6F68               	movwf	(??__CANIDToRegs+1)& (0+255),b
  6095  000CAA                     u2245:
  6096  000CAA  0100               	movlb	0	; () banked
  6097  000CAC  90D8               	bcf	status,0,c
  6098  000CAE  3767               	rlcf	??__CANIDToRegs& (0+255),f,b
  6099  000CB0  0100               	movlb	0	; () banked
  6100  000CB2  2F68               	decfsz	(??__CANIDToRegs+1)& (0+255),f,b
  6101  000CB4  D7FA               	goto	u2245
  6102  000CB6  C060  FFD9         	movff	__CANIDToRegs@ptr,fsr2l
  6103  000CBA  C061  FFDA         	movff	__CANIDToRegs@ptr+1,fsr2h
  6104  000CBE  0100               	movlb	0	; () banked
  6105  000CC0  5167               	movf	??__CANIDToRegs& (0+255),w,b
  6106  000CC2  12DF               	iorwf	indf2,f,c
  6107                           
  6108                           ; BSR set to: 0
  6109                           ;ECANPoll.c: 1110: ptr++;
  6110  000CC4  0100               	movlb	0	; () banked
  6111  000CC6  0100               	movlb	0	; () banked
  6112  000CC8  4B60               	infsnz	__CANIDToRegs@ptr& (0+255),f,b
  6113  000CCA  2B61               	incf	(__CANIDToRegs@ptr+1)& (0+255),f,b
  6114                           
  6115                           ; BSR set to: 0
  6116                           ;ECANPoll.c: 1111: *ptr = Value->BYTES.BYTE_1 << 5;
  6117  000CCC  C069  FFD9         	movff	__CANIDToRegs@Value,fsr2l
  6118  000CD0  C06A  FFDA         	movff	__CANIDToRegs@Value+1,fsr2h
  6119  000CD4  50DF               	movf	indf2,w,c
  6120  000CD6  0100               	movlb	0	; () banked
  6121  000CD8  6F67               	movwf	??__CANIDToRegs& (0+255),b
  6122  000CDA  0E05               	movlw	5
  6123  000CDC  0100               	movlb	0	; () banked
  6124  000CDE  6F68               	movwf	(??__CANIDToRegs+1)& (0+255),b
  6125  000CE0                     u2255:
  6126  000CE0  0100               	movlb	0	; () banked
  6127  000CE2  90D8               	bcf	status,0,c
  6128  000CE4  3767               	rlcf	??__CANIDToRegs& (0+255),f,b
  6129  000CE6  0100               	movlb	0	; () banked
  6130  000CE8  2F68               	decfsz	(??__CANIDToRegs+1)& (0+255),f,b
  6131  000CEA  D7FA               	goto	u2255
  6132  000CEC  0100               	movlb	0	; () banked
  6133  000CEE  5167               	movf	??__CANIDToRegs& (0+255),w,b
  6134  000CF0  C060  FFD9         	movff	__CANIDToRegs@ptr,fsr2l
  6135  000CF4  C061  FFDA         	movff	__CANIDToRegs@ptr+1,fsr2h
  6136  000CF8  6EDF               	movwf	indf2,c
  6137                           
  6138                           ;ECANPoll.c: 1112: }
  6139  000CFA  0012               	return	
  6140  000CFC                     l2889:
  6141                           
  6142                           ; BSR set to: 0
  6143                           ;ECANPoll.c: 1113: else
  6144                           ;ECANPoll.c: 1114: {
  6145                           ;ECANPoll.c: 1116: *ptr = Value->BYTES.BYTE_3 >> 5;
  6146  000CFC  0100               	movlb	0	; () banked
  6147  000CFE  EE20 F002          	lfsr	2,2
  6148  000D02  0100               	movlb	0	; () banked
  6149  000D04  5169               	movf	__CANIDToRegs@Value& (0+255),w,b
  6150  000D06  26D9               	addwf	fsr2l,f,c
  6151  000D08  0100               	movlb	0	; () banked
  6152  000D0A  516A               	movf	(__CANIDToRegs@Value+1)& (0+255),w,b
  6153  000D0C  22DA               	addwfc	fsr2h,f,c
  6154  000D0E  50DF               	movf	indf2,w,c
  6155  000D10  0100               	movlb	0	; () banked
  6156  000D12  6F67               	movwf	??__CANIDToRegs& (0+255),b
  6157  000D14  0E05               	movlw	5
  6158  000D16  0100               	movlb	0	; () banked
  6159  000D18  6F68               	movwf	(??__CANIDToRegs+1)& (0+255),b
  6160  000D1A                     u2265:
  6161  000D1A  0100               	movlb	0	; () banked
  6162  000D1C  90D8               	bcf	status,0,c
  6163  000D1E  3367               	rrcf	??__CANIDToRegs& (0+255),f,b
  6164  000D20  0100               	movlb	0	; () banked
  6165  000D22  2F68               	decfsz	(??__CANIDToRegs+1)& (0+255),f,b
  6166  000D24  D7FA               	goto	u2265
  6167  000D26  0100               	movlb	0	; () banked
  6168  000D28  5167               	movf	??__CANIDToRegs& (0+255),w,b
  6169  000D2A  C060  FFD9         	movff	__CANIDToRegs@ptr,fsr2l
  6170  000D2E  C061  FFDA         	movff	__CANIDToRegs@ptr+1,fsr2h
  6171  000D32  6EDF               	movwf	indf2,c
  6172                           
  6173                           ;ECANPoll.c: 1117: *ptr |= Value->BYTES.BYTE_4 << 3;
  6174  000D34  0100               	movlb	0	; () banked
  6175  000D36  EE20 F003          	lfsr	2,3
  6176  000D3A  0100               	movlb	0	; () banked
  6177  000D3C  5169               	movf	__CANIDToRegs@Value& (0+255),w,b
  6178  000D3E  26D9               	addwf	fsr2l,f,c
  6179  000D40  0100               	movlb	0	; () banked
  6180  000D42  516A               	movf	(__CANIDToRegs@Value+1)& (0+255),w,b
  6181  000D44  22DA               	addwfc	fsr2h,f,c
  6182  000D46  50DF               	movf	indf2,w,c
  6183  000D48  0100               	movlb	0	; () banked
  6184  000D4A  6F67               	movwf	??__CANIDToRegs& (0+255),b
  6185  000D4C  0100               	movlb	0	; () banked
  6186  000D4E  90D8               	bcf	status,0,c
  6187  000D50  3767               	rlcf	??__CANIDToRegs& (0+255),f,b
  6188  000D52  0100               	movlb	0	; () banked
  6189  000D54  90D8               	bcf	status,0,c
  6190  000D56  3767               	rlcf	??__CANIDToRegs& (0+255),f,b
  6191  000D58  0100               	movlb	0	; () banked
  6192  000D5A  90D8               	bcf	status,0,c
  6193  000D5C  3767               	rlcf	??__CANIDToRegs& (0+255),f,b
  6194  000D5E  C060  FFD9         	movff	__CANIDToRegs@ptr,fsr2l
  6195  000D62  C061  FFDA         	movff	__CANIDToRegs@ptr+1,fsr2h
  6196  000D66  0100               	movlb	0	; () banked
  6197  000D68  5167               	movf	??__CANIDToRegs& (0+255),w,b
  6198  000D6A  12DF               	iorwf	indf2,f,c
  6199                           
  6200                           ; BSR set to: 0
  6201                           ;ECANPoll.c: 1118: ptr++;
  6202  000D6C  0100               	movlb	0	; () banked
  6203  000D6E  0100               	movlb	0	; () banked
  6204  000D70  4B60               	infsnz	__CANIDToRegs@ptr& (0+255),f,b
  6205  000D72  2B61               	incf	(__CANIDToRegs@ptr+1)& (0+255),f,b
  6206                           
  6207                           ; BSR set to: 0
  6208                           ;ECANPoll.c: 1119: *ptr = (Value->BYTES.BYTE_3 << 3) & 0xE0;
  6209  000D74  0100               	movlb	0	; () banked
  6210  000D76  EE20 F002          	lfsr	2,2
  6211  000D7A  0100               	movlb	0	; () banked
  6212  000D7C  5169               	movf	__CANIDToRegs@Value& (0+255),w,b
  6213  000D7E  26D9               	addwf	fsr2l,f,c
  6214  000D80  0100               	movlb	0	; () banked
  6215  000D82  516A               	movf	(__CANIDToRegs@Value+1)& (0+255),w,b
  6216  000D84  22DA               	addwfc	fsr2h,f,c
  6217  000D86  50DF               	movf	indf2,w,c
  6218  000D88  0100               	movlb	0	; () banked
  6219  000D8A  6F67               	movwf	??__CANIDToRegs& (0+255),b
  6220  000D8C  0100               	movlb	0	; () banked
  6221  000D8E  90D8               	bcf	status,0,c
  6222  000D90  3767               	rlcf	??__CANIDToRegs& (0+255),f,b
  6223  000D92  0100               	movlb	0	; () banked
  6224  000D94  90D8               	bcf	status,0,c
  6225  000D96  3767               	rlcf	??__CANIDToRegs& (0+255),f,b
  6226  000D98  0100               	movlb	0	; () banked
  6227  000D9A  90D8               	bcf	status,0,c
  6228  000D9C  3567               	rlcf	??__CANIDToRegs& (0+255),w,b
  6229  000D9E  0BE0               	andlw	224
  6230  000DA0  C060  FFD9         	movff	__CANIDToRegs@ptr,fsr2l
  6231  000DA4  C061  FFDA         	movff	__CANIDToRegs@ptr+1,fsr2h
  6232  000DA8  6EDF               	movwf	indf2,c
  6233                           
  6234                           ; BSR set to: 0
  6235                           ;ECANPoll.c: 1121: *ptr |= 0b00001000;
  6236  000DAA  C060  FFD9         	movff	__CANIDToRegs@ptr,fsr2l
  6237  000DAE  C061  FFDA         	movff	__CANIDToRegs@ptr+1,fsr2h
  6238  000DB2  0E00               	movlw	0
  6239  000DB4  86DB               	bsf	plusw2,3,c
  6240                           
  6241                           ; BSR set to: 0
  6242                           ;ECANPoll.c: 1122: *ptr |= Value->BYTES.BYTE_3 & 0x03;
  6243  000DB6  0100               	movlb	0	; () banked
  6244  000DB8  EE20 F002          	lfsr	2,2
  6245  000DBC  0100               	movlb	0	; () banked
  6246  000DBE  5169               	movf	__CANIDToRegs@Value& (0+255),w,b
  6247  000DC0  26D9               	addwf	fsr2l,f,c
  6248  000DC2  0100               	movlb	0	; () banked
  6249  000DC4  516A               	movf	(__CANIDToRegs@Value+1)& (0+255),w,b
  6250  000DC6  22DA               	addwfc	fsr2h,f,c
  6251  000DC8  50DF               	movf	indf2,w,c
  6252  000DCA  0100               	movlb	0	; () banked
  6253  000DCC  6F67               	movwf	??__CANIDToRegs& (0+255),b
  6254  000DCE  0E03               	movlw	3
  6255  000DD0  0100               	movlb	0	; () banked
  6256  000DD2  1767               	andwf	??__CANIDToRegs& (0+255),f,b
  6257  000DD4  C060  FFD9         	movff	__CANIDToRegs@ptr,fsr2l
  6258  000DD8  C061  FFDA         	movff	__CANIDToRegs@ptr+1,fsr2h
  6259  000DDC  0100               	movlb	0	; () banked
  6260  000DDE  5167               	movf	??__CANIDToRegs& (0+255),w,b
  6261  000DE0  12DF               	iorwf	indf2,f,c
  6262                           
  6263                           ;ECANPoll.c: 1123: ptr++;
  6264  000DE2  0100               	movlb	0	; () banked
  6265  000DE4  0100               	movlb	0	; () banked
  6266  000DE6  4B60               	infsnz	__CANIDToRegs@ptr& (0+255),f,b
  6267  000DE8  2B61               	incf	(__CANIDToRegs@ptr+1)& (0+255),f,b
  6268                           
  6269                           ; BSR set to: 0
  6270                           ;ECANPoll.c: 1124: *ptr = Value->BYTES.BYTE_2;
  6271  000DEA  0100               	movlb	0	; () banked
  6272  000DEC  EE20 F001          	lfsr	2,1
  6273  000DF0  0100               	movlb	0	; () banked
  6274  000DF2  5169               	movf	__CANIDToRegs@Value& (0+255),w,b
  6275  000DF4  26D9               	addwf	fsr2l,f,c
  6276  000DF6  0100               	movlb	0	; () banked
  6277  000DF8  516A               	movf	(__CANIDToRegs@Value+1)& (0+255),w,b
  6278  000DFA  22DA               	addwfc	fsr2h,f,c
  6279  000DFC  C060  FFE1         	movff	__CANIDToRegs@ptr,fsr1l
  6280  000E00  C061  FFE2         	movff	__CANIDToRegs@ptr+1,fsr1h
  6281  000E04  CFDF FFE7          	movff	indf2,indf1
  6282                           
  6283                           ; BSR set to: 0
  6284                           ;ECANPoll.c: 1125: ptr++;
  6285  000E08  0100               	movlb	0	; () banked
  6286  000E0A  0100               	movlb	0	; () banked
  6287  000E0C  4B60               	infsnz	__CANIDToRegs@ptr& (0+255),f,b
  6288  000E0E  2B61               	incf	(__CANIDToRegs@ptr+1)& (0+255),f,b
  6289                           
  6290                           ; BSR set to: 0
  6291                           ;ECANPoll.c: 1126: *ptr = Value->BYTES.BYTE_1;
  6292  000E10  C069  FFD9         	movff	__CANIDToRegs@Value,fsr2l
  6293  000E14  C06A  FFDA         	movff	__CANIDToRegs@Value+1,fsr2h
  6294  000E18  C060  FFE1         	movff	__CANIDToRegs@ptr,fsr1l
  6295  000E1C  C061  FFE2         	movff	__CANIDToRegs@ptr+1,fsr1h
  6296  000E20  CFDF FFE7          	movff	indf2,indf1
  6297  000E24  0012               	return	
  6298  000E26                     __end_of__CANIDToRegs:
  6299                           	opt stack 0
  6300                           pclatu	equ	0xFFB
  6301                           pclath	equ	0xFFA
  6302                           tblptru	equ	0xFF8
  6303                           tblptrh	equ	0xFF7
  6304                           tblptrl	equ	0xFF6
  6305                           tablat	equ	0xFF5
  6306                           prodh	equ	0xFF4
  6307                           prodl	equ	0xFF3
  6308                           intcon	equ	0xFF2
  6309                           postinc0	equ	0xFEE
  6310                           postdec0	equ	0xFED
  6311                           fsr0h	equ	0xFEA
  6312                           fsr0l	equ	0xFE9
  6313                           wreg	equ	0xFE8
  6314                           indf1	equ	0xFE7
  6315                           postinc1	equ	0xFE6
  6316                           fsr1h	equ	0xFE2
  6317                           fsr1l	equ	0xFE1
  6318                           bsr	equ	0xFE0
  6319                           indf2	equ	0xFDF
  6320                           postinc2	equ	0xFDE
  6321                           postdec2	equ	0xFDD
  6322                           plusw2	equ	0xFDB
  6323                           fsr2h	equ	0xFDA
  6324                           fsr2l	equ	0xFD9
  6325                           status	equ	0xFD8
  6326                           
  6327 ;; *************** function _ECANInitialize *****************
  6328 ;; Defined at:
  6329 ;;		line 164 in file "ECANPoll.c"
  6330 ;; Parameters:    Size  Location     Type
  6331 ;;		None
  6332 ;; Auto vars:     Size  Location     Type
  6333 ;;		None
  6334 ;; Return value:  Size  Location     Type
  6335 ;;		None               void
  6336 ;; Registers used:
  6337 ;;		wreg, status,2, status,0, cstack
  6338 ;; Tracked objects:
  6339 ;;		On entry : 0/0
  6340 ;;		On exit  : 0/0
  6341 ;;		Unchanged: 0/0
  6342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6346 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6347 ;;Total ram usage:        0 bytes
  6348 ;; Hardware stack levels used:    1
  6349 ;; Hardware stack levels required when called:    5
  6350 ;; This function calls:
  6351 ;;		_ECANSetOperationMode
  6352 ;; This function is called by:
  6353 ;;		_main
  6354 ;; This function uses a non-reentrant model
  6355 ;;
  6356                           
  6357                           	psect	text22
  6358  00194A                     __ptext22:
  6359                           	opt stack 0
  6360  00194A                     _ECANInitialize:
  6361                           	opt stack 25
  6362                           
  6363                           ;ECANPoll.c: 168: ECANSetOperationMode(ECAN_OP_MODE_CONFIG);
  6364                           
  6365                           ; BSR set to: 0
  6366                           ;incstack = 0
  6367  00194A  0E80               	movlw	128
  6368  00194C  EC14  F010         	call	_ECANSetOperationMode
  6369                           
  6370                           ;ECANPoll.c: 172: BRGCON1 = ((1-1) << 6) | (2-1);
  6371  001950  0E01               	movlw	1
  6372  001952  010E               	movlb	14	; () banked
  6373  001954  010E               	movlb	14	; () banked
  6374  001956  6F43               	movwf	67,b	;volatile
  6375                           
  6376                           ; BSR set to: 14
  6377                           ;ECANPoll.c: 173: BRGCON2 = (0 << 7) | (1 << 6) | ((7-1) << 3) | (1-1);
  6378  001958  0E70               	movlw	112
  6379  00195A  010E               	movlb	14	; () banked
  6380  00195C  010E               	movlb	14	; () banked
  6381  00195E  6F44               	movwf	68,b	;volatile
  6382                           
  6383                           ; BSR set to: 14
  6384                           ;ECANPoll.c: 177: BRGCON3 = (0 << 7) |
  6385                           ;ECANPoll.c: 178: (0 << 6) |
  6386                           ;ECANPoll.c: 179: (1-1);
  6387  001960  0E00               	movlw	0
  6388  001962  010E               	movlb	14	; () banked
  6389  001964  010E               	movlb	14	; () banked
  6390  001966  6F45               	movwf	69,b	;volatile
  6391                           
  6392                           ; BSR set to: 14
  6393                           ;ECANPoll.c: 182: CIOCON = 0 << 7 | 0 << 6 | 1 << 5 | 1 << 4;
  6394  001968  0E30               	movlw	48
  6395  00196A  6E70               	movwf	3952,c	;volatile
  6396                           
  6397                           ; BSR set to: 14
  6398                           ;ECANPoll.c: 189: MDSEL1 = 0x00 >> 7;
  6399  00196C  9E72               	bcf	3954,7,c	;volatile
  6400                           
  6401                           ; BSR set to: 14
  6402                           ;ECANPoll.c: 190: MDSEL0 = 0x00 >> 6;
  6403  00196E  9C72               	bcf	3954,6,c	;volatile
  6404                           
  6405                           ; BSR set to: 14
  6406                           ;ECANPoll.c: 195: RXB0CON = (0 << 5) | (0 << 2);
  6407  001970  0E00               	movlw	0
  6408  001972  6E60               	movwf	3936,c	;volatile
  6409                           
  6410                           ; BSR set to: 14
  6411                           ;ECANPoll.c: 196: RXB1CON = 0 << 5;
  6412  001974  0E00               	movlw	0
  6413  001976  010F               	movlb	15	; () banked
  6414  001978  010F               	movlb	15	; () banked
  6415  00197A  6F30               	movwf	48,b	;volatile
  6416                           
  6417                           ; BSR set to: 15
  6418                           ;ECANPoll.c: 290: RXF0SIDH = (long)0x0L >> 3L;RXF0SIDL = (long)0x0L << 5L;
  6419  00197C  0E00               	movlw	0
  6420  00197E  010E               	movlb	14	; () banked
  6421  001980  010E               	movlb	14	; () banked
  6422  001982  6FE0               	movwf	224,b	;volatile
  6423                           
  6424                           ; BSR set to: 14
  6425  001984  0E00               	movlw	0
  6426  001986  010E               	movlb	14	; () banked
  6427  001988  010E               	movlb	14	; () banked
  6428  00198A  6FE1               	movwf	225,b	;volatile
  6429                           
  6430                           ; BSR set to: 14
  6431                           ;ECANPoll.c: 298: RXF1SIDH = (long)0x0L >> 3L;RXF1SIDL = (long)0x0L << 5L;
  6432  00198C  0E00               	movlw	0
  6433  00198E  010E               	movlb	14	; () banked
  6434  001990  010E               	movlb	14	; () banked
  6435  001992  6FE4               	movwf	228,b	;volatile
  6436                           
  6437                           ; BSR set to: 14
  6438  001994  0E00               	movlw	0
  6439  001996  010E               	movlb	14	; () banked
  6440  001998  010E               	movlb	14	; () banked
  6441  00199A  6FE5               	movwf	229,b	;volatile
  6442                           
  6443                           ; BSR set to: 14
  6444                           ;ECANPoll.c: 307: RXF2SIDH = (long)0x0L >> 3L;RXF2SIDL = (long)0x0L << 5L;
  6445  00199C  0E00               	movlw	0
  6446  00199E  010E               	movlb	14	; () banked
  6447  0019A0  010E               	movlb	14	; () banked
  6448  0019A2  6FE8               	movwf	232,b	;volatile
  6449                           
  6450                           ; BSR set to: 14
  6451  0019A4  0E00               	movlw	0
  6452  0019A6  010E               	movlb	14	; () banked
  6453  0019A8  010E               	movlb	14	; () banked
  6454  0019AA  6FE9               	movwf	233,b	;volatile
  6455                           
  6456                           ; BSR set to: 14
  6457                           ;ECANPoll.c: 316: RXF3SIDH = (long)0x0L >> 3L;RXF3SIDL = (long)0x0L << 5L;
  6458  0019AC  0E00               	movlw	0
  6459  0019AE  010E               	movlb	14	; () banked
  6460  0019B0  010E               	movlb	14	; () banked
  6461  0019B2  6FEC               	movwf	236,b	;volatile
  6462                           
  6463                           ; BSR set to: 14
  6464  0019B4  0E00               	movlw	0
  6465  0019B6  010E               	movlb	14	; () banked
  6466  0019B8  010E               	movlb	14	; () banked
  6467  0019BA  6FED               	movwf	237,b	;volatile
  6468                           
  6469                           ; BSR set to: 14
  6470                           ;ECANPoll.c: 325: RXF4SIDH = (long)0x0L >> 3L;RXF4SIDL = (long)0x0L << 5L;
  6471  0019BC  0E00               	movlw	0
  6472  0019BE  010E               	movlb	14	; () banked
  6473  0019C0  010E               	movlb	14	; () banked
  6474  0019C2  6FF0               	movwf	240,b	;volatile
  6475                           
  6476                           ; BSR set to: 14
  6477  0019C4  0E00               	movlw	0
  6478  0019C6  010E               	movlb	14	; () banked
  6479  0019C8  010E               	movlb	14	; () banked
  6480  0019CA  6FF1               	movwf	241,b	;volatile
  6481                           
  6482                           ; BSR set to: 14
  6483                           ;ECANPoll.c: 333: RXF5SIDH = (long)0x0L >> 3L;RXF5SIDL = (long)0x0L << 5L;
  6484  0019CC  0E00               	movlw	0
  6485  0019CE  010E               	movlb	14	; () banked
  6486  0019D0  010E               	movlb	14	; () banked
  6487  0019D2  6FF4               	movwf	244,b	;volatile
  6488                           
  6489                           ; BSR set to: 14
  6490  0019D4  0E00               	movlw	0
  6491  0019D6  010E               	movlb	14	; () banked
  6492  0019D8  010E               	movlb	14	; () banked
  6493  0019DA  6FF5               	movwf	245,b	;volatile
  6494                           
  6495                           ; BSR set to: 14
  6496                           ;ECANPoll.c: 475: RXM0SIDH = (long)0x0L >> 3L; RXM0SIDL = (long)0x0L << 5L;
  6497  0019DC  0E00               	movlw	0
  6498  0019DE  010E               	movlb	14	; () banked
  6499  0019E0  010E               	movlb	14	; () banked
  6500  0019E2  6FF8               	movwf	248,b	;volatile
  6501                           
  6502                           ; BSR set to: 14
  6503  0019E4  0E00               	movlw	0
  6504  0019E6  010E               	movlb	14	; () banked
  6505  0019E8  010E               	movlb	14	; () banked
  6506  0019EA  6FF9               	movwf	249,b	;volatile
  6507                           
  6508                           ; BSR set to: 14
  6509                           ;ECANPoll.c: 476: RXM0EXIDM = 0;
  6510  0019EC  010E               	movlb	14
  6511  0019EE  010E               	movlb	14	; () banked
  6512  0019F0  97F9               	bcf	249,3,b	;volatile
  6513                           
  6514                           ; BSR set to: 14
  6515                           ;ECANPoll.c: 483: RXM1SIDH = (long)0x0L >> 3L; RXM1SIDL = (long)0x0L << 5L;
  6516  0019F2  0E00               	movlw	0
  6517  0019F4  010E               	movlb	14	; () banked
  6518  0019F6  010E               	movlb	14	; () banked
  6519  0019F8  6FFC               	movwf	252,b	;volatile
  6520                           
  6521                           ; BSR set to: 14
  6522  0019FA  0E00               	movlw	0
  6523  0019FC  010E               	movlb	14	; () banked
  6524  0019FE  010E               	movlb	14	; () banked
  6525  001A00  6FFD               	movwf	253,b	;volatile
  6526                           
  6527                           ; BSR set to: 14
  6528                           ;ECANPoll.c: 484: RXM1EXIDEN = 0;
  6529  001A02  010E               	movlb	14
  6530  001A04  010E               	movlb	14	; () banked
  6531  001A06  97FD               	bcf	253,3,b	;volatile
  6532                           
  6533                           ;ECANPoll.c: 495: ECANSetOperationMode(0x00);
  6534  001A08  0E00               	movlw	0
  6535  001A0A  EC14  F010         	call	_ECANSetOperationMode
  6536  001A0E  0012               	return	
  6537  001A10                     __end_of_ECANInitialize:
  6538                           	opt stack 0
  6539                           pclatu	equ	0xFFB
  6540                           pclath	equ	0xFFA
  6541                           tblptru	equ	0xFF8
  6542                           tblptrh	equ	0xFF7
  6543                           tblptrl	equ	0xFF6
  6544                           tablat	equ	0xFF5
  6545                           prodh	equ	0xFF4
  6546                           prodl	equ	0xFF3
  6547                           intcon	equ	0xFF2
  6548                           postinc0	equ	0xFEE
  6549                           postdec0	equ	0xFED
  6550                           fsr0h	equ	0xFEA
  6551                           fsr0l	equ	0xFE9
  6552                           wreg	equ	0xFE8
  6553                           indf1	equ	0xFE7
  6554                           postinc1	equ	0xFE6
  6555                           fsr1h	equ	0xFE2
  6556                           fsr1l	equ	0xFE1
  6557                           bsr	equ	0xFE0
  6558                           indf2	equ	0xFDF
  6559                           postinc2	equ	0xFDE
  6560                           postdec2	equ	0xFDD
  6561                           plusw2	equ	0xFDB
  6562                           fsr2h	equ	0xFDA
  6563                           fsr2l	equ	0xFD9
  6564                           status	equ	0xFD8
  6565                           
  6566 ;; *************** function _ECANSetOperationMode *****************
  6567 ;; Defined at:
  6568 ;;		line 1012 in file "ECANPoll.c"
  6569 ;; Parameters:    Size  Location     Type
  6570 ;;  mode            1    wreg     enum E19311
  6571 ;; Auto vars:     Size  Location     Type
  6572 ;;  mode            1    0[BANK0 ] enum E19311
  6573 ;; Return value:  Size  Location     Type
  6574 ;;		None               void
  6575 ;; Registers used:
  6576 ;;		wreg, status,2, status,0
  6577 ;; Tracked objects:
  6578 ;;		On entry : 0/0
  6579 ;;		On exit  : 0/0
  6580 ;;		Unchanged: 0/0
  6581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6583 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6585 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6586 ;;Total ram usage:        1 bytes
  6587 ;; Hardware stack levels used:    1
  6588 ;; Hardware stack levels required when called:    4
  6589 ;; This function calls:
  6590 ;;		Nothing
  6591 ;; This function is called by:
  6592 ;;		_ECANInitialize
  6593 ;; This function uses a non-reentrant model
  6594 ;;
  6595                           
  6596                           	psect	text23
  6597  002028                     __ptext23:
  6598                           	opt stack 0
  6599  002028                     _ECANSetOperationMode:
  6600                           	opt stack 25
  6601                           
  6602                           ;incstack = 0
  6603                           ;ECANSetOperationMode@mode stored from wreg
  6604  002028  CFE8 F060          	movff	wreg,ECANSetOperationMode@mode
  6605                           
  6606                           ;ECANPoll.c: 1014: CANCON &= 0x1F;
  6607  00202C  0E1F               	movlw	31
  6608  00202E  166F               	andwf	3951,f,c	;volatile
  6609                           
  6610                           ;ECANPoll.c: 1015: CANCON |= mode;
  6611  002030  0100               	movlb	0	; () banked
  6612  002032  0100               	movlb	0	; () banked
  6613  002034  5160               	movf	ECANSetOperationMode@mode& (0+255),w,b
  6614  002036  126F               	iorwf	3951,f,c	;volatile
  6615  002038                     l2877:
  6616                           
  6617                           ; BSR set to: 0
  6618  002038  506E               	movf	3950,w,c	;volatile
  6619  00203A  0BE0               	andlw	224
  6620  00203C  0100               	movlb	0	; () banked
  6621  00203E  0100               	movlb	0	; () banked
  6622  002040  1960               	xorwf	ECANSetOperationMode@mode& (0+255),w,b
  6623  002042  B4D8               	btfsc	status,2,c
  6624                           
  6625                           ; BSR set to: 0
  6626                           
  6627                           ; BSR set to: 0
  6628  002044  0012               	return	
  6629  002046  D7F8               	goto	l2877
  6630  002048                     __end_of_ECANSetOperationMode:
  6631                           	opt stack 0
  6632                           pclatu	equ	0xFFB
  6633                           pclath	equ	0xFFA
  6634                           tblptru	equ	0xFF8
  6635                           tblptrh	equ	0xFF7
  6636                           tblptrl	equ	0xFF6
  6637                           tablat	equ	0xFF5
  6638                           prodh	equ	0xFF4
  6639                           prodl	equ	0xFF3
  6640                           intcon	equ	0xFF2
  6641                           postinc0	equ	0xFEE
  6642                           postdec0	equ	0xFED
  6643                           fsr0h	equ	0xFEA
  6644                           fsr0l	equ	0xFE9
  6645                           wreg	equ	0xFE8
  6646                           indf1	equ	0xFE7
  6647                           postinc1	equ	0xFE6
  6648                           fsr1h	equ	0xFE2
  6649                           fsr1l	equ	0xFE1
  6650                           bsr	equ	0xFE0
  6651                           indf2	equ	0xFDF
  6652                           postinc2	equ	0xFDE
  6653                           postdec2	equ	0xFDD
  6654                           plusw2	equ	0xFDB
  6655                           fsr2h	equ	0xFDA
  6656                           fsr2l	equ	0xFD9
  6657                           status	equ	0xFD8
  6658                           
  6659 ;; *************** function _ECANFiltersInit *****************
  6660 ;; Defined at:
  6661 ;;		line 143 in file "Can_HL.c"
  6662 ;; Parameters:    Size  Location     Type
  6663 ;;		None
  6664 ;; Auto vars:     Size  Location     Type
  6665 ;;  mask            2    2[BANK0 ] unsigned int 
  6666 ;; Return value:  Size  Location     Type
  6667 ;;		None               void
  6668 ;; Registers used:
  6669 ;;		wreg, status,2, status,0
  6670 ;; Tracked objects:
  6671 ;;		On entry : 0/0
  6672 ;;		On exit  : 0/0
  6673 ;;		Unchanged: 0/0
  6674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6676 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6677 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6678 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6679 ;;Total ram usage:        4 bytes
  6680 ;; Hardware stack levels used:    1
  6681 ;; Hardware stack levels required when called:    4
  6682 ;; This function calls:
  6683 ;;		Nothing
  6684 ;; This function is called by:
  6685 ;;		_main
  6686 ;; This function uses a non-reentrant model
  6687 ;;
  6688                           
  6689                           	psect	text24
  6690  001A10                     __ptext24:
  6691                           	opt stack 0
  6692  001A10                     _ECANFiltersInit:
  6693                           	opt stack 26
  6694                           
  6695                           ;Can_HL.c: 145: unsigned int mask;
  6696                           ;Can_HL.c: 148: RXM0SIDH = 0b11111110;
  6697                           
  6698                           ; BSR set to: 0
  6699                           ;incstack = 0
  6700  001A10  0EFE               	movlw	254
  6701  001A12  010E               	movlb	14	; () banked
  6702  001A14  010E               	movlb	14	; () banked
  6703  001A16  6FF8               	movwf	248,b	;volatile
  6704                           
  6705                           ;Can_HL.c: 149: RXM0SIDL = 0b00000000;
  6706  001A18  0E00               	movlw	0
  6707  001A1A  010E               	movlb	14	; () banked
  6708  001A1C  010E               	movlb	14	; () banked
  6709  001A1E  6FF9               	movwf	249,b	;volatile
  6710                           
  6711                           ;Can_HL.c: 151: RXM1SIDH = 0b11111110;
  6712  001A20  0EFE               	movlw	254
  6713  001A22  010E               	movlb	14	; () banked
  6714  001A24  010E               	movlb	14	; () banked
  6715  001A26  6FFC               	movwf	252,b	;volatile
  6716                           
  6717                           ;Can_HL.c: 152: RXM1SIDL = 0b00000000;
  6718  001A28  0E00               	movlw	0
  6719  001A2A  010E               	movlb	14	; () banked
  6720  001A2C  010E               	movlb	14	; () banked
  6721  001A2E  6FFD               	movwf	253,b	;volatile
  6722                           
  6723                           ;Can_HL.c: 156: mask = (8<<7 | 0<<4 |0000);
  6724  001A30  0E04               	movlw	4
  6725  001A32  0100               	movlb	0	; () banked
  6726  001A34  0100               	movlb	0	; () banked
  6727  001A36  6F63               	movwf	(ECANFiltersInit@mask+1)& (0+255),b
  6728  001A38  0E00               	movlw	0
  6729  001A3A  0100               	movlb	0	; () banked
  6730  001A3C  6F62               	movwf	ECANFiltersInit@mask& (0+255),b
  6731                           
  6732                           ; BSR set to: 0
  6733                           ;Can_HL.c: 157: RXF0SIDH = (char) (mask >> 3);
  6734  001A3E  0100               	movlb	0	; () banked
  6735  001A40  C062  F060         	movff	ECANFiltersInit@mask,??_ECANFiltersInit
  6736  001A44  0100               	movlb	0	; () banked
  6737  001A46  C063  F061         	movff	ECANFiltersInit@mask+1,??_ECANFiltersInit+1
  6738  001A4A  0100               	movlb	0	; () banked
  6739  001A4C  90D8               	bcf	status,0,c
  6740  001A4E  3361               	rrcf	(??_ECANFiltersInit+1)& (0+255),f,b
  6741  001A50  3360               	rrcf	??_ECANFiltersInit& (0+255),f,b
  6742  001A52  0100               	movlb	0	; () banked
  6743  001A54  90D8               	bcf	status,0,c
  6744  001A56  3361               	rrcf	(??_ECANFiltersInit+1)& (0+255),f,b
  6745  001A58  3360               	rrcf	??_ECANFiltersInit& (0+255),f,b
  6746  001A5A  0100               	movlb	0	; () banked
  6747  001A5C  90D8               	bcf	status,0,c
  6748  001A5E  3361               	rrcf	(??_ECANFiltersInit+1)& (0+255),f,b
  6749  001A60  3360               	rrcf	??_ECANFiltersInit& (0+255),f,b
  6750  001A62  0100               	movlb	0	; () banked
  6751  001A64  5160               	movf	??_ECANFiltersInit& (0+255),w,b
  6752  001A66  010E               	movlb	14	; () banked
  6753  001A68  010E               	movlb	14	; () banked
  6754  001A6A  6FE0               	movwf	224,b	;volatile
  6755                           
  6756                           ; BSR set to: 14
  6757                           ;Can_HL.c: 158: RXF0SIDL = (char) (mask << 5);
  6758  001A6C  0100               	movlb	0	; () banked
  6759  001A6E  0100               	movlb	0	; () banked
  6760  001A70  3962               	swapf	ECANFiltersInit@mask& (0+255),w,b
  6761  001A72  46E8               	rlncf	wreg,f,c
  6762  001A74  0BE0               	andlw	224
  6763  001A76  010E               	movlb	14	; () banked
  6764  001A78  010E               	movlb	14	; () banked
  6765  001A7A  6FE1               	movwf	225,b	;volatile
  6766                           
  6767                           ;Can_HL.c: 162: RXF1SIDH=0;
  6768  001A7C  0E00               	movlw	0
  6769  001A7E  010E               	movlb	14	; () banked
  6770  001A80  010E               	movlb	14	; () banked
  6771  001A82  6FE4               	movwf	228,b	;volatile
  6772                           
  6773                           ;Can_HL.c: 163: RXF1SIDL=0;
  6774  001A84  0E00               	movlw	0
  6775  001A86  010E               	movlb	14	; () banked
  6776  001A88  010E               	movlb	14	; () banked
  6777  001A8A  6FE5               	movwf	229,b	;volatile
  6778                           
  6779                           ;Can_HL.c: 165: RXF2SIDH=0;
  6780  001A8C  0E00               	movlw	0
  6781  001A8E  010E               	movlb	14	; () banked
  6782  001A90  010E               	movlb	14	; () banked
  6783  001A92  6FE8               	movwf	232,b	;volatile
  6784                           
  6785                           ;Can_HL.c: 166: RXF2SIDL=0;
  6786  001A94  0E00               	movlw	0
  6787  001A96  010E               	movlb	14	; () banked
  6788  001A98  010E               	movlb	14	; () banked
  6789  001A9A  6FE9               	movwf	233,b	;volatile
  6790                           
  6791                           ;Can_HL.c: 168: RXF3SIDH=0;
  6792  001A9C  0E00               	movlw	0
  6793  001A9E  010E               	movlb	14	; () banked
  6794  001AA0  010E               	movlb	14	; () banked
  6795  001AA2  6FEC               	movwf	236,b	;volatile
  6796                           
  6797                           ;Can_HL.c: 169: RXF3SIDL=0;
  6798  001AA4  0E00               	movlw	0
  6799  001AA6  010E               	movlb	14	; () banked
  6800  001AA8  010E               	movlb	14	; () banked
  6801  001AAA  6FED               	movwf	237,b	;volatile
  6802                           
  6803                           ;Can_HL.c: 171: RXF4SIDH = 0;
  6804  001AAC  0E00               	movlw	0
  6805  001AAE  010E               	movlb	14	; () banked
  6806  001AB0  010E               	movlb	14	; () banked
  6807  001AB2  6FF0               	movwf	240,b	;volatile
  6808                           
  6809                           ;Can_HL.c: 172: RXF4SIDL = 0;
  6810  001AB4  0E00               	movlw	0
  6811  001AB6  010E               	movlb	14	; () banked
  6812  001AB8  010E               	movlb	14	; () banked
  6813  001ABA  6FF1               	movwf	241,b	;volatile
  6814                           
  6815                           ;Can_HL.c: 174: RXF5SIDH = 0;
  6816  001ABC  0E00               	movlw	0
  6817  001ABE  010E               	movlb	14	; () banked
  6818  001AC0  010E               	movlb	14	; () banked
  6819  001AC2  6FF4               	movwf	244,b	;volatile
  6820                           
  6821                           ;Can_HL.c: 175: RXF5SIDL = 0;
  6822  001AC4  0E00               	movlw	0
  6823  001AC6  010E               	movlb	14	; () banked
  6824  001AC8  010E               	movlb	14	; () banked
  6825  001ACA  6FF5               	movwf	245,b	;volatile
  6826                           
  6827                           ; BSR set to: 14
  6828  001ACC  0012               	return	
  6829  001ACE                     __end_of_ECANFiltersInit:
  6830                           	opt stack 0
  6831                           pclatu	equ	0xFFB
  6832                           pclath	equ	0xFFA
  6833                           tblptru	equ	0xFF8
  6834                           tblptrh	equ	0xFF7
  6835                           tblptrl	equ	0xFF6
  6836                           tablat	equ	0xFF5
  6837                           prodh	equ	0xFF4
  6838                           prodl	equ	0xFF3
  6839                           intcon	equ	0xFF2
  6840                           postinc0	equ	0xFEE
  6841                           postdec0	equ	0xFED
  6842                           fsr0h	equ	0xFEA
  6843                           fsr0l	equ	0xFE9
  6844                           wreg	equ	0xFE8
  6845                           indf1	equ	0xFE7
  6846                           postinc1	equ	0xFE6
  6847                           fsr1h	equ	0xFE2
  6848                           fsr1l	equ	0xFE1
  6849                           bsr	equ	0xFE0
  6850                           indf2	equ	0xFDF
  6851                           postinc2	equ	0xFDE
  6852                           postdec2	equ	0xFDD
  6853                           plusw2	equ	0xFDB
  6854                           fsr2h	equ	0xFDA
  6855                           fsr2l	equ	0xFD9
  6856                           status	equ	0xFD8
  6857                           
  6858 ;; *************** function _ConfigureTimers *****************
  6859 ;; Defined at:
  6860 ;;		line 110 in file "system.c"
  6861 ;; Parameters:    Size  Location     Type
  6862 ;;		None
  6863 ;; Auto vars:     Size  Location     Type
  6864 ;;		None
  6865 ;; Return value:  Size  Location     Type
  6866 ;;		None               void
  6867 ;; Registers used:
  6868 ;;		wreg, status,2
  6869 ;; Tracked objects:
  6870 ;;		On entry : 0/0
  6871 ;;		On exit  : 0/0
  6872 ;;		Unchanged: 0/0
  6873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6878 ;;Total ram usage:        0 bytes
  6879 ;; Hardware stack levels used:    1
  6880 ;; Hardware stack levels required when called:    4
  6881 ;; This function calls:
  6882 ;;		Nothing
  6883 ;; This function is called by:
  6884 ;;		_main
  6885 ;; This function uses a non-reentrant model
  6886 ;;
  6887                           
  6888                           	psect	text25
  6889  002064                     __ptext25:
  6890                           	opt stack 0
  6891  002064                     _ConfigureTimers:
  6892                           	opt stack 26
  6893                           
  6894                           ;system.c: 112: T0CONbits.T08BIT = 0;
  6895                           
  6896                           ; BSR set to: 14
  6897                           ;incstack = 0
  6898  002064  9CD5               	bcf	4053,6,c	;volatile
  6899                           
  6900                           ;system.c: 113: T0CONbits.T0CS = 0;
  6901  002066  9AD5               	bcf	4053,5,c	;volatile
  6902                           
  6903                           ;system.c: 114: T0CONbits.PSA = 0;
  6904  002068  96D5               	bcf	4053,3,c	;volatile
  6905                           
  6906                           ;system.c: 115: T0CONbits.T0PS=6;
  6907  00206A  50D5               	movf	4053,w,c	;volatile
  6908  00206C  0BF8               	andlw	-8
  6909  00206E  0906               	iorlw	6
  6910  002070  6ED5               	movwf	4053,c	;volatile
  6911                           
  6912                           ;system.c: 117: TMR0H = 0xFB;
  6913  002072  0EFB               	movlw	251
  6914  002074  6ED7               	movwf	4055,c	;volatile
  6915                           
  6916                           ;system.c: 118: TMR0L = 0x1E;
  6917  002076  0E1E               	movlw	30
  6918  002078  6ED6               	movwf	4054,c	;volatile
  6919                           
  6920                           ;system.c: 120: T0CONbits.TMR0ON = 1;
  6921  00207A  8ED5               	bsf	4053,7,c	;volatile
  6922  00207C  0012               	return	
  6923  00207E                     __end_of_ConfigureTimers:
  6924                           	opt stack 0
  6925                           pclatu	equ	0xFFB
  6926                           pclath	equ	0xFFA
  6927                           tblptru	equ	0xFF8
  6928                           tblptrh	equ	0xFF7
  6929                           tblptrl	equ	0xFF6
  6930                           tablat	equ	0xFF5
  6931                           prodh	equ	0xFF4
  6932                           prodl	equ	0xFF3
  6933                           intcon	equ	0xFF2
  6934                           postinc0	equ	0xFEE
  6935                           postdec0	equ	0xFED
  6936                           fsr0h	equ	0xFEA
  6937                           fsr0l	equ	0xFE9
  6938                           wreg	equ	0xFE8
  6939                           indf1	equ	0xFE7
  6940                           postinc1	equ	0xFE6
  6941                           fsr1h	equ	0xFE2
  6942                           fsr1l	equ	0xFE1
  6943                           bsr	equ	0xFE0
  6944                           indf2	equ	0xFDF
  6945                           postinc2	equ	0xFDE
  6946                           postdec2	equ	0xFDD
  6947                           plusw2	equ	0xFDB
  6948                           fsr2h	equ	0xFDA
  6949                           fsr2l	equ	0xFD9
  6950                           status	equ	0xFD8
  6951                           
  6952 ;; *************** function _ConfigureOscillator *****************
  6953 ;; Defined at:
  6954 ;;		line 32 in file "system.c"
  6955 ;; Parameters:    Size  Location     Type
  6956 ;;		None
  6957 ;; Auto vars:     Size  Location     Type
  6958 ;;		None
  6959 ;; Return value:  Size  Location     Type
  6960 ;;		None               void
  6961 ;; Registers used:
  6962 ;;		wreg, status,2
  6963 ;; Tracked objects:
  6964 ;;		On entry : 0/0
  6965 ;;		On exit  : 0/0
  6966 ;;		Unchanged: 0/0
  6967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6971 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6972 ;;Total ram usage:        0 bytes
  6973 ;; Hardware stack levels used:    1
  6974 ;; Hardware stack levels required when called:    4
  6975 ;; This function calls:
  6976 ;;		Nothing
  6977 ;; This function is called by:
  6978 ;;		_main
  6979 ;; This function uses a non-reentrant model
  6980 ;;
  6981                           
  6982                           	psect	text26
  6983  0020B6                     __ptext26:
  6984                           	opt stack 0
  6985  0020B6                     _ConfigureOscillator:
  6986                           	opt stack 26
  6987                           
  6988                           ;system.c: 35: OSCCONbits.IDLEN=1;
  6989                           
  6990                           ;incstack = 0
  6991  0020B6  8ED3               	bsf	4051,7,c	;volatile
  6992                           
  6993                           ;system.c: 36: OSCCONbits.IRCF=0;
  6994  0020B8  98D3               	bcf	4051,4,c	;volatile
  6995  0020BA  9AD3               	bcf	4051,5,c	;volatile
  6996  0020BC  9CD3               	bcf	4051,6,c	;volatile
  6997                           
  6998                           ;system.c: 37: OSCCONbits.SCS=0;
  6999  0020BE  0EFC               	movlw	-4
  7000  0020C0  16D3               	andwf	4051,f,c	;volatile
  7001  0020C2  0012               	return	
  7002  0020C4                     __end_of_ConfigureOscillator:
  7003                           	opt stack 0
  7004                           pclatu	equ	0xFFB
  7005                           pclath	equ	0xFFA
  7006                           tblptru	equ	0xFF8
  7007                           tblptrh	equ	0xFF7
  7008                           tblptrl	equ	0xFF6
  7009                           tablat	equ	0xFF5
  7010                           prodh	equ	0xFF4
  7011                           prodl	equ	0xFF3
  7012                           intcon	equ	0xFF2
  7013                           postinc0	equ	0xFEE
  7014                           postdec0	equ	0xFED
  7015                           fsr0h	equ	0xFEA
  7016                           fsr0l	equ	0xFE9
  7017                           wreg	equ	0xFE8
  7018                           indf1	equ	0xFE7
  7019                           postinc1	equ	0xFE6
  7020                           fsr1h	equ	0xFE2
  7021                           fsr1l	equ	0xFE1
  7022                           bsr	equ	0xFE0
  7023                           indf2	equ	0xFDF
  7024                           postinc2	equ	0xFDE
  7025                           postdec2	equ	0xFDD
  7026                           plusw2	equ	0xFDB
  7027                           fsr2h	equ	0xFDA
  7028                           fsr2l	equ	0xFD9
  7029                           status	equ	0xFD8
  7030                           
  7031 ;; *************** function _ConfigureInterrupts *****************
  7032 ;; Defined at:
  7033 ;;		line 78 in file "system.c"
  7034 ;; Parameters:    Size  Location     Type
  7035 ;;		None
  7036 ;; Auto vars:     Size  Location     Type
  7037 ;;		None
  7038 ;; Return value:  Size  Location     Type
  7039 ;;		None               void
  7040 ;; Registers used:
  7041 ;;		wreg, status,2
  7042 ;; Tracked objects:
  7043 ;;		On entry : 0/0
  7044 ;;		On exit  : 0/0
  7045 ;;		Unchanged: 0/0
  7046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7051 ;;Total ram usage:        0 bytes
  7052 ;; Hardware stack levels used:    1
  7053 ;; Hardware stack levels required when called:    4
  7054 ;; This function calls:
  7055 ;;		Nothing
  7056 ;; This function is called by:
  7057 ;;		_main
  7058 ;; This function uses a non-reentrant model
  7059 ;;
  7060                           
  7061                           	psect	text27
  7062  001E98                     __ptext27:
  7063                           	opt stack 0
  7064  001E98                     _ConfigureInterrupts:
  7065                           	opt stack 26
  7066                           
  7067                           ;system.c: 82: RCONbits.IPEN = 1;
  7068                           
  7069                           ;incstack = 0
  7070  001E98  8ED0               	bsf	4048,7,c	;volatile
  7071                           
  7072                           ;system.c: 84: INTCON = 0b00100000;
  7073  001E9A  0E20               	movlw	32
  7074  001E9C  6EF2               	movwf	intcon,c	;volatile
  7075                           
  7076                           ;system.c: 85: INTCON2 = 0b11111000;
  7077  001E9E  0EF8               	movlw	248
  7078  001EA0  6EF1               	movwf	intcon2,c	;volatile
  7079                           
  7080                           ;system.c: 86: INTCON3 = 0b00000000;
  7081  001EA2  0E00               	movlw	0
  7082  001EA4  6EF0               	movwf	intcon3,c	;volatile
  7083                           
  7084                           ;system.c: 88: PIR1 = 0;
  7085  001EA6  0E00               	movlw	0
  7086  001EA8  6E9E               	movwf	3998,c	;volatile
  7087                           
  7088                           ;system.c: 89: PIR2 = 0;
  7089  001EAA  0E00               	movlw	0
  7090  001EAC  6EA1               	movwf	4001,c	;volatile
  7091                           
  7092                           ;system.c: 90: PIR3 = 0;
  7093  001EAE  0E00               	movlw	0
  7094  001EB0  6EA4               	movwf	4004,c	;volatile
  7095                           
  7096                           ;system.c: 91: PIR4 = 0;
  7097  001EB2  0E00               	movlw	0
  7098  001EB4  6EB7               	movwf	4023,c	;volatile
  7099                           
  7100                           ;system.c: 92: PIR5 = 0;
  7101  001EB6  0E00               	movlw	0
  7102  001EB8  6E77               	movwf	3959,c	;volatile
  7103                           
  7104                           ;system.c: 94: PIE1 = 0b00100000;
  7105  001EBA  0E20               	movlw	32
  7106  001EBC  6E9D               	movwf	3997,c	;volatile
  7107                           
  7108                           ;system.c: 95: PIE2 = 0;
  7109  001EBE  0E00               	movlw	0
  7110  001EC0  6EA0               	movwf	4000,c	;volatile
  7111                           
  7112                           ;system.c: 96: PIE3 = 0b00100000;
  7113  001EC2  0E20               	movlw	32
  7114  001EC4  6EA3               	movwf	4003,c	;volatile
  7115                           
  7116                           ;system.c: 97: PIE4 = 0;
  7117  001EC6  0E00               	movlw	0
  7118  001EC8  6EB6               	movwf	4022,c	;volatile
  7119                           
  7120                           ;system.c: 98: PIE5 = 0b00000011;
  7121  001ECA  0E03               	movlw	3
  7122  001ECC  6E76               	movwf	3958,c	;volatile
  7123                           
  7124                           ;system.c: 100: IPR1= 0 ;
  7125  001ECE  0E00               	movlw	0
  7126  001ED0  6E9F               	movwf	3999,c	;volatile
  7127                           
  7128                           ;system.c: 101: IPR2= 0 ;
  7129  001ED2  0E00               	movlw	0
  7130  001ED4  6EA2               	movwf	4002,c	;volatile
  7131                           
  7132                           ;system.c: 102: IPR3= 0 ;
  7133  001ED6  0E00               	movlw	0
  7134  001ED8  6EA5               	movwf	4005,c	;volatile
  7135                           
  7136                           ;system.c: 103: IPR4= 0 ;
  7137  001EDA  0E00               	movlw	0
  7138  001EDC  6EB8               	movwf	4024,c	;volatile
  7139                           
  7140                           ;system.c: 104: IPR5= 0b00000011 ;
  7141  001EDE  0E03               	movlw	3
  7142  001EE0  6E78               	movwf	3960,c	;volatile
  7143                           
  7144                           ;system.c: 106: INTCONbits.GIE=1;
  7145  001EE2  8EF2               	bsf	intcon,7,c	;volatile
  7146                           
  7147                           ;system.c: 107: INTCONbits.PEIE=1;
  7148  001EE4  8CF2               	bsf	intcon,6,c	;volatile
  7149  001EE6  0012               	return	
  7150  001EE8                     __end_of_ConfigureInterrupts:
  7151                           	opt stack 0
  7152                           pclatu	equ	0xFFB
  7153                           pclath	equ	0xFFA
  7154                           tblptru	equ	0xFF8
  7155                           tblptrh	equ	0xFF7
  7156                           tblptrl	equ	0xFF6
  7157                           tablat	equ	0xFF5
  7158                           prodh	equ	0xFF4
  7159                           prodl	equ	0xFF3
  7160                           intcon	equ	0xFF2
  7161                           intcon2	equ	0xFF1
  7162                           intcon3	equ	0xFF0
  7163                           postinc0	equ	0xFEE
  7164                           postdec0	equ	0xFED
  7165                           fsr0h	equ	0xFEA
  7166                           fsr0l	equ	0xFE9
  7167                           wreg	equ	0xFE8
  7168                           indf1	equ	0xFE7
  7169                           postinc1	equ	0xFE6
  7170                           fsr1h	equ	0xFE2
  7171                           fsr1l	equ	0xFE1
  7172                           bsr	equ	0xFE0
  7173                           indf2	equ	0xFDF
  7174                           postinc2	equ	0xFDE
  7175                           postdec2	equ	0xFDD
  7176                           plusw2	equ	0xFDB
  7177                           fsr2h	equ	0xFDA
  7178                           fsr2l	equ	0xFD9
  7179                           status	equ	0xFD8
  7180                           
  7181 ;; *************** function _ConfigureGPIO *****************
  7182 ;; Defined at:
  7183 ;;		line 43 in file "system.c"
  7184 ;; Parameters:    Size  Location     Type
  7185 ;;		None
  7186 ;; Auto vars:     Size  Location     Type
  7187 ;;		None
  7188 ;; Return value:  Size  Location     Type
  7189 ;;		None               void
  7190 ;; Registers used:
  7191 ;;		wreg, status,2
  7192 ;; Tracked objects:
  7193 ;;		On entry : 0/0
  7194 ;;		On exit  : 0/0
  7195 ;;		Unchanged: 0/0
  7196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7200 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7201 ;;Total ram usage:        0 bytes
  7202 ;; Hardware stack levels used:    1
  7203 ;; Hardware stack levels required when called:    4
  7204 ;; This function calls:
  7205 ;;		Nothing
  7206 ;; This function is called by:
  7207 ;;		_main
  7208 ;; This function uses a non-reentrant model
  7209 ;;
  7210                           
  7211                           	psect	text28
  7212  001E3C                     __ptext28:
  7213                           	opt stack 0
  7214  001E3C                     _ConfigureGPIO:
  7215                           	opt stack 26
  7216                           
  7217                           ;system.c: 46: ADCON0bits.CHS = 0;
  7218                           
  7219                           ;incstack = 0
  7220  001E3C  94C2               	bcf	4034,2,c	;volatile
  7221  001E3E  96C2               	bcf	4034,3,c	;volatile
  7222  001E40  98C2               	bcf	4034,4,c	;volatile
  7223  001E42  9AC2               	bcf	4034,5,c	;volatile
  7224  001E44  9CC2               	bcf	4034,6,c	;volatile
  7225                           
  7226                           ;system.c: 47: ADCON0bits.ADON=1;
  7227  001E46  80C2               	bsf	4034,0,c	;volatile
  7228                           
  7229                           ;system.c: 49: ADCON1=0;
  7230  001E48  0E00               	movlw	0
  7231  001E4A  6EC1               	movwf	4033,c	;volatile
  7232                           
  7233                           ;system.c: 50: ADCON1bits.VCFG = 0b10;
  7234  001E4C  50C1               	movf	4033,w,c	;volatile
  7235  001E4E  0BCF               	andlw	-49
  7236  001E50  0920               	iorlw	32
  7237  001E52  6EC1               	movwf	4033,c	;volatile
  7238                           
  7239                           ;system.c: 52: ADCON2bits.ADFM = 1;
  7240  001E54  8EC0               	bsf	4032,7,c	;volatile
  7241                           
  7242                           ;system.c: 53: ADCON2bits.ACQT = 0x07;
  7243  001E56  86C0               	bsf	4032,3,c	;volatile
  7244  001E58  88C0               	bsf	4032,4,c	;volatile
  7245  001E5A  8AC0               	bsf	4032,5,c	;volatile
  7246                           
  7247                           ;system.c: 54: ADCON2bits.ADCS = 0x06;
  7248  001E5C  50C0               	movf	4032,w,c	;volatile
  7249  001E5E  0BF8               	andlw	-8
  7250  001E60  0906               	iorlw	6
  7251  001E62  6EC0               	movwf	4032,c	;volatile
  7252                           
  7253                           ;system.c: 56: ANCON0 = 0b0000001;
  7254  001E64  0E01               	movlw	1
  7255  001E66  010F               	movlb	15	; () banked
  7256  001E68  010F               	movlb	15	; () banked
  7257  001E6A  6F5D               	movwf	93,b	;volatile
  7258                           
  7259                           ;system.c: 57: ANCON1 = 0;
  7260  001E6C  0E00               	movlw	0
  7261  001E6E  010F               	movlb	15	; () banked
  7262  001E70  010F               	movlb	15	; () banked
  7263  001E72  6F5C               	movwf	92,b	;volatile
  7264                           
  7265                           ;system.c: 59: TRISA = 0b00111111;
  7266  001E74  0E3F               	movlw	63
  7267  001E76  6E92               	movwf	3986,c	;volatile
  7268                           
  7269                           ;system.c: 61: TRISB = 0b11111000;
  7270  001E78  0EF8               	movlw	248
  7271  001E7A  6E93               	movwf	3987,c	;volatile
  7272                           
  7273                           ; BSR set to: 15
  7274                           ;system.c: 62: LATBbits.LATB2=1;
  7275  001E7C  848A               	bsf	3978,2,c	;volatile
  7276                           
  7277                           ;system.c: 64: TRISC = 0b00011010;
  7278  001E7E  0E1A               	movlw	26
  7279  001E80  6E94               	movwf	3988,c	;volatile
  7280                           
  7281                           ; BSR set to: 15
  7282                           ;system.c: 65: LATCbits.LATC2 = 0;
  7283  001E82  948B               	bcf	3979,2,c	;volatile
  7284                           
  7285                           ; BSR set to: 15
  7286                           ;system.c: 66: LATCbits.LATC6=0;
  7287  001E84  9C8B               	bcf	3979,6,c	;volatile
  7288                           
  7289                           ;system.c: 68: TRISD = 0x00;
  7290  001E86  0E00               	movlw	0
  7291  001E88  6E95               	movwf	3989,c	;volatile
  7292                           
  7293                           ; BSR set to: 15
  7294                           ;system.c: 69: LATDbits.LATD4 = 1;
  7295  001E8A  888C               	bsf	3980,4,c	;volatile
  7296                           
  7297                           ; BSR set to: 15
  7298                           ;system.c: 70: LATDbits.LATD5 = 1;
  7299  001E8C  8A8C               	bsf	3980,5,c	;volatile
  7300                           
  7301                           ;system.c: 72: TRISE = 0b00000000;
  7302  001E8E  0E00               	movlw	0
  7303  001E90  6E96               	movwf	3990,c	;volatile
  7304                           
  7305                           ;system.c: 73: LATE=0;
  7306  001E92  0E00               	movlw	0
  7307  001E94  6E8D               	movwf	3981,c	;volatile
  7308                           
  7309                           ; BSR set to: 15
  7310  001E96  0012               	return	
  7311  001E98                     __end_of_ConfigureGPIO:
  7312                           	opt stack 0
  7313                           pclatu	equ	0xFFB
  7314                           pclath	equ	0xFFA
  7315                           tblptru	equ	0xFF8
  7316                           tblptrh	equ	0xFF7
  7317                           tblptrl	equ	0xFF6
  7318                           tablat	equ	0xFF5
  7319                           prodh	equ	0xFF4
  7320                           prodl	equ	0xFF3
  7321                           intcon	equ	0xFF2
  7322                           intcon2	equ	0xFF1
  7323                           intcon3	equ	0xFF0
  7324                           postinc0	equ	0xFEE
  7325                           postdec0	equ	0xFED
  7326                           fsr0h	equ	0xFEA
  7327                           fsr0l	equ	0xFE9
  7328                           wreg	equ	0xFE8
  7329                           indf1	equ	0xFE7
  7330                           postinc1	equ	0xFE6
  7331                           fsr1h	equ	0xFE2
  7332                           fsr1l	equ	0xFE1
  7333                           bsr	equ	0xFE0
  7334                           indf2	equ	0xFDF
  7335                           postinc2	equ	0xFDE
  7336                           postdec2	equ	0xFDD
  7337                           plusw2	equ	0xFDB
  7338                           fsr2h	equ	0xFDA
  7339                           fsr2l	equ	0xFD9
  7340                           status	equ	0xFD8
  7341                           
  7342 ;; *************** function _CANTxFifoInit *****************
  7343 ;; Defined at:
  7344 ;;		line 27 in file "Can_HL.c"
  7345 ;; Parameters:    Size  Location     Type
  7346 ;;		None
  7347 ;; Auto vars:     Size  Location     Type
  7348 ;;		None
  7349 ;; Return value:  Size  Location     Type
  7350 ;;		None               void
  7351 ;; Registers used:
  7352 ;;		status,2
  7353 ;; Tracked objects:
  7354 ;;		On entry : 0/0
  7355 ;;		On exit  : 0/0
  7356 ;;		Unchanged: 0/0
  7357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7360 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7361 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7362 ;;Total ram usage:        1 bytes
  7363 ;; Hardware stack levels used:    1
  7364 ;; Hardware stack levels required when called:    4
  7365 ;; This function calls:
  7366 ;;		Nothing
  7367 ;; This function is called by:
  7368 ;;		_main
  7369 ;; This function uses a non-reentrant model
  7370 ;;
  7371                           
  7372                           	psect	text29
  7373  001F78                     __ptext29:
  7374                           	opt stack 0
  7375  001F78                     _CANTxFifoInit:
  7376                           	opt stack 26
  7377                           
  7378                           ;Can_HL.c: 29: CANTxFifo.FifoEmpty=1;
  7379                           
  7380                           ; BSR set to: 15
  7381                           ;incstack = 0
  7382  001F78  0100               	movlb	0	; () banked
  7383  001F7A  6F60               	movwf	??_CANTxFifoInit& (0+255),b
  7384  001F7C  0E01               	movlw	1
  7385  001F7E  0101               	movlb	1	; () banked
  7386  001F80  0101               	movlb	1	; () banked
  7387  001F82  6F8F               	movwf	(_CANTxFifo+143)& (0+255),b
  7388  001F84  0100               	movlb	0	; () banked
  7389  001F86  5160               	movf	??_CANTxFifoInit& (0+255),w,b
  7390                           
  7391                           ;Can_HL.c: 30: CANTxFifo.Fifofull=0;
  7392  001F88  0100               	movlb	0	; () banked
  7393  001F8A  6F60               	movwf	??_CANTxFifoInit& (0+255),b
  7394  001F8C  0E00               	movlw	0
  7395  001F8E  0101               	movlb	1	; () banked
  7396  001F90  0101               	movlb	1	; () banked
  7397  001F92  6F8E               	movwf	(_CANTxFifo+142)& (0+255),b
  7398  001F94  0100               	movlb	0	; () banked
  7399  001F96  5160               	movf	??_CANTxFifoInit& (0+255),w,b
  7400                           
  7401                           ;Can_HL.c: 31: CANTxFifo.LowIndex=0;
  7402  001F98  0100               	movlb	0	; () banked
  7403  001F9A  6F60               	movwf	??_CANTxFifoInit& (0+255),b
  7404  001F9C  0E00               	movlw	0
  7405  001F9E  0101               	movlb	1	; () banked
  7406  001FA0  0101               	movlb	1	; () banked
  7407  001FA2  6F8C               	movwf	(_CANTxFifo+140)& (0+255),b
  7408  001FA4  0100               	movlb	0	; () banked
  7409  001FA6  5160               	movf	??_CANTxFifoInit& (0+255),w,b
  7410                           
  7411                           ;Can_HL.c: 32: CANTxFifo.HighIndex=0;
  7412  001FA8  0100               	movlb	0	; () banked
  7413  001FAA  6F60               	movwf	??_CANTxFifoInit& (0+255),b
  7414  001FAC  0E00               	movlw	0
  7415  001FAE  0101               	movlb	1	; () banked
  7416  001FB0  0101               	movlb	1	; () banked
  7417  001FB2  6F8D               	movwf	(_CANTxFifo+141)& (0+255),b
  7418  001FB4  0100               	movlb	0	; () banked
  7419  001FB6  5160               	movf	??_CANTxFifoInit& (0+255),w,b
  7420                           
  7421                           ; BSR set to: 0
  7422  001FB8  0012               	return	
  7423  001FBA                     __end_of_CANTxFifoInit:
  7424                           	opt stack 0
  7425                           pclatu	equ	0xFFB
  7426                           pclath	equ	0xFFA
  7427                           tblptru	equ	0xFF8
  7428                           tblptrh	equ	0xFF7
  7429                           tblptrl	equ	0xFF6
  7430                           tablat	equ	0xFF5
  7431                           prodh	equ	0xFF4
  7432                           prodl	equ	0xFF3
  7433                           intcon	equ	0xFF2
  7434                           intcon2	equ	0xFF1
  7435                           intcon3	equ	0xFF0
  7436                           postinc0	equ	0xFEE
  7437                           postdec0	equ	0xFED
  7438                           fsr0h	equ	0xFEA
  7439                           fsr0l	equ	0xFE9
  7440                           wreg	equ	0xFE8
  7441                           indf1	equ	0xFE7
  7442                           postinc1	equ	0xFE6
  7443                           fsr1h	equ	0xFE2
  7444                           fsr1l	equ	0xFE1
  7445                           bsr	equ	0xFE0
  7446                           indf2	equ	0xFDF
  7447                           postinc2	equ	0xFDE
  7448                           postdec2	equ	0xFDD
  7449                           plusw2	equ	0xFDB
  7450                           fsr2h	equ	0xFDA
  7451                           fsr2l	equ	0xFD9
  7452                           status	equ	0xFD8
  7453                           
  7454 ;; *************** function _CANRxFifoInit *****************
  7455 ;; Defined at:
  7456 ;;		line 35 in file "Can_HL.c"
  7457 ;; Parameters:    Size  Location     Type
  7458 ;;		None
  7459 ;; Auto vars:     Size  Location     Type
  7460 ;;		None
  7461 ;; Return value:  Size  Location     Type
  7462 ;;		None               void
  7463 ;; Registers used:
  7464 ;;		status,2
  7465 ;; Tracked objects:
  7466 ;;		On entry : 0/0
  7467 ;;		On exit  : 0/0
  7468 ;;		Unchanged: 0/0
  7469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7472 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7473 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7474 ;;Total ram usage:        1 bytes
  7475 ;; Hardware stack levels used:    1
  7476 ;; Hardware stack levels required when called:    4
  7477 ;; This function calls:
  7478 ;;		Nothing
  7479 ;; This function is called by:
  7480 ;;		_main
  7481 ;; This function uses a non-reentrant model
  7482 ;;
  7483                           
  7484                           	psect	text30
  7485  001FBA                     __ptext30:
  7486                           	opt stack 0
  7487  001FBA                     _CANRxFifoInit:
  7488                           	opt stack 26
  7489                           
  7490                           ;Can_HL.c: 37: CANRxFifo.FifoEmpty=1;
  7491                           
  7492                           ; BSR set to: 0
  7493                           ;incstack = 0
  7494  001FBA  0100               	movlb	0	; () banked
  7495  001FBC  6F60               	movwf	??_CANRxFifoInit& (0+255),b
  7496  001FBE  0E01               	movlw	1
  7497  001FC0  0102               	movlb	2	; () banked
  7498  001FC2  0102               	movlb	2	; () banked
  7499  001FC4  6F8F               	movwf	(_CANRxFifo+143)& (0+255),b
  7500  001FC6  0100               	movlb	0	; () banked
  7501  001FC8  5160               	movf	??_CANRxFifoInit& (0+255),w,b
  7502                           
  7503                           ;Can_HL.c: 38: CANRxFifo.Fifofull=0;
  7504  001FCA  0100               	movlb	0	; () banked
  7505  001FCC  6F60               	movwf	??_CANRxFifoInit& (0+255),b
  7506  001FCE  0E00               	movlw	0
  7507  001FD0  0102               	movlb	2	; () banked
  7508  001FD2  0102               	movlb	2	; () banked
  7509  001FD4  6F8E               	movwf	(_CANRxFifo+142)& (0+255),b
  7510  001FD6  0100               	movlb	0	; () banked
  7511  001FD8  5160               	movf	??_CANRxFifoInit& (0+255),w,b
  7512                           
  7513                           ;Can_HL.c: 39: CANRxFifo.LowIndex=0;
  7514  001FDA  0100               	movlb	0	; () banked
  7515  001FDC  6F60               	movwf	??_CANRxFifoInit& (0+255),b
  7516  001FDE  0E00               	movlw	0
  7517  001FE0  0102               	movlb	2	; () banked
  7518  001FE2  0102               	movlb	2	; () banked
  7519  001FE4  6F8C               	movwf	(_CANRxFifo+140)& (0+255),b
  7520  001FE6  0100               	movlb	0	; () banked
  7521  001FE8  5160               	movf	??_CANRxFifoInit& (0+255),w,b
  7522                           
  7523                           ;Can_HL.c: 40: CANRxFifo.HighIndex=0;
  7524  001FEA  0100               	movlb	0	; () banked
  7525  001FEC  6F60               	movwf	??_CANRxFifoInit& (0+255),b
  7526  001FEE  0E00               	movlw	0
  7527  001FF0  0102               	movlb	2	; () banked
  7528  001FF2  0102               	movlb	2	; () banked
  7529  001FF4  6F8D               	movwf	(_CANRxFifo+141)& (0+255),b
  7530  001FF6  0100               	movlb	0	; () banked
  7531  001FF8  5160               	movf	??_CANRxFifoInit& (0+255),w,b
  7532                           
  7533                           ; BSR set to: 0
  7534  001FFA  0012               	return	
  7535  001FFC                     __end_of_CANRxFifoInit:
  7536                           	opt stack 0
  7537                           pclatu	equ	0xFFB
  7538                           pclath	equ	0xFFA
  7539                           tblptru	equ	0xFF8
  7540                           tblptrh	equ	0xFF7
  7541                           tblptrl	equ	0xFF6
  7542                           tablat	equ	0xFF5
  7543                           prodh	equ	0xFF4
  7544                           prodl	equ	0xFF3
  7545                           intcon	equ	0xFF2
  7546                           intcon2	equ	0xFF1
  7547                           intcon3	equ	0xFF0
  7548                           postinc0	equ	0xFEE
  7549                           postdec0	equ	0xFED
  7550                           fsr0h	equ	0xFEA
  7551                           fsr0l	equ	0xFE9
  7552                           wreg	equ	0xFE8
  7553                           indf1	equ	0xFE7
  7554                           postinc1	equ	0xFE6
  7555                           fsr1h	equ	0xFE2
  7556                           fsr1l	equ	0xFE1
  7557                           bsr	equ	0xFE0
  7558                           indf2	equ	0xFDF
  7559                           postinc2	equ	0xFDE
  7560                           postdec2	equ	0xFDD
  7561                           plusw2	equ	0xFDB
  7562                           fsr2h	equ	0xFDA
  7563                           fsr2l	equ	0xFD9
  7564                           status	equ	0xFD8
  7565                           
  7566 ;; *************** function _high_isr *****************
  7567 ;; Defined at:
  7568 ;;		line 33 in file "interrupts.c"
  7569 ;; Parameters:    Size  Location     Type
  7570 ;;		None
  7571 ;; Auto vars:     Size  Location     Type
  7572 ;;  CANRxNewMess   14   55[COMRAM] struct CANRxMsg
  7573 ;; Return value:  Size  Location     Type
  7574 ;;		None               void
  7575 ;; Registers used:
  7576 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  7577 ;; Tracked objects:
  7578 ;;		On entry : 0/0
  7579 ;;		On exit  : 0/0
  7580 ;;		Unchanged: 0/0
  7581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7583 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7584 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7585 ;;      Totals:        28       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7586 ;;Total ram usage:       28 bytes
  7587 ;; Hardware stack levels used:    1
  7588 ;; Hardware stack levels required when called:    2
  7589 ;; This function calls:
  7590 ;;		_ECANReceiveMessage
  7591 ;;		_PutCANRxFifo
  7592 ;; This function is called by:
  7593 ;;		Interrupt level 2
  7594 ;; This function uses a non-reentrant model
  7595 ;;
  7596                           
  7597                           	psect	intcode
  7598  000008                     __pintcode:
  7599                           	opt stack 0
  7600  000008                     _high_isr:
  7601                           	opt stack 23
  7602                           
  7603                           ;incstack = 0
  7604  000008  CFFA F02A          	movff	pclath,??_high_isr
  7605  00000C  CFFB F02B          	movff	pclatu,??_high_isr+1
  7606  000010  EF67  F00D         	goto	int_func
  7607                           pclatu	equ	0xFFB
  7608                           pclath	equ	0xFFA
  7609                           tblptru	equ	0xFF8
  7610                           tblptrh	equ	0xFF7
  7611                           tblptrl	equ	0xFF6
  7612                           tablat	equ	0xFF5
  7613                           prodh	equ	0xFF4
  7614                           prodl	equ	0xFF3
  7615                           intcon	equ	0xFF2
  7616                           intcon2	equ	0xFF1
  7617                           intcon3	equ	0xFF0
  7618                           postinc0	equ	0xFEE
  7619                           postdec0	equ	0xFED
  7620                           fsr0h	equ	0xFEA
  7621                           fsr0l	equ	0xFE9
  7622                           wreg	equ	0xFE8
  7623                           indf1	equ	0xFE7
  7624                           postinc1	equ	0xFE6
  7625                           fsr1h	equ	0xFE2
  7626                           fsr1l	equ	0xFE1
  7627                           bsr	equ	0xFE0
  7628                           indf2	equ	0xFDF
  7629                           postinc2	equ	0xFDE
  7630                           postdec2	equ	0xFDD
  7631                           plusw2	equ	0xFDB
  7632                           fsr2h	equ	0xFDA
  7633                           fsr2l	equ	0xFD9
  7634                           status	equ	0xFD8
  7635                           
  7636                           	psect	intcode_body
  7637  001ACE                     __pintcode_body:
  7638                           	opt stack 23
  7639  001ACE                     int_func:
  7640                           	opt stack 23
  7641  001ACE  CFE9 F02C          	movff	fsr0l,??_high_isr+2
  7642  001AD2  CFEA F02D          	movff	fsr0h,??_high_isr+3
  7643  001AD6  CFE1 F02E          	movff	fsr1l,??_high_isr+4
  7644  001ADA  CFE2 F02F          	movff	fsr1h,??_high_isr+5
  7645  001ADE  CFD9 F030          	movff	fsr2l,??_high_isr+6
  7646  001AE2  CFDA F031          	movff	fsr2h,??_high_isr+7
  7647  001AE6  CFF3 F032          	movff	prodl,??_high_isr+8
  7648  001AEA  CFF4 F033          	movff	prodh,??_high_isr+9
  7649  001AEE  CFF6 F034          	movff	tblptrl,??_high_isr+10
  7650  001AF2  CFF7 F035          	movff	tblptrh,??_high_isr+11
  7651  001AF6  CFF8 F036          	movff	tblptru,??_high_isr+12
  7652  001AFA  CFF5 F037          	movff	tablat,??_high_isr+13
  7653                           
  7654                           ;interrupts.c: 43: struct CANRxMsg CANRxNewMessage;
  7655                           ;interrupts.c: 50: if(PIR5bits.RXB0IF==1 | PIR5bits.RXB1IF==1)
  7656  001AFE  0E00               	movlw	0
  7657  001B00  B077               	btfsc	3959,0,c	;volatile
  7658  001B02  0E01               	movlw	1
  7659  001B04  B277               	btfsc	3959,1,c	;volatile
  7660  001B06  0E01               	movlw	1
  7661  001B08  A0E8               	btfss	wreg,0,c
  7662  001B0A  D01F               	goto	i2l20
  7663                           
  7664                           ;interrupts.c: 51: {
  7665                           ;interrupts.c: 53: ECANReceiveMessage(&CANRxNewMessage.id, CANRxNewMessage.data_RX, &CAN
      +                          RxNewMessage.dataLen, &CANRxNewMessage.flags);
  7666  001B0C  0E00               	movlw	high high_isr@CANRxNewMessage
  7667  001B0E  6E1C               	movwf	ECANReceiveMessage@id+1,c
  7668  001B10  0E38               	movlw	low high_isr@CANRxNewMessage
  7669  001B12  6E1B               	movwf	ECANReceiveMessage@id,c
  7670  001B14  0E00               	movlw	high (high_isr@CANRxNewMessage+4)
  7671  001B16  6E1E               	movwf	ECANReceiveMessage@data+1,c
  7672  001B18  0E3C               	movlw	low (high_isr@CANRxNewMessage+4)
  7673  001B1A  6E1D               	movwf	ECANReceiveMessage@data,c
  7674  001B1C  0E00               	movlw	high (high_isr@CANRxNewMessage+12)
  7675  001B1E  6E20               	movwf	ECANReceiveMessage@dataLen+1,c
  7676  001B20  0E44               	movlw	low (high_isr@CANRxNewMessage+12)
  7677  001B22  6E1F               	movwf	ECANReceiveMessage@dataLen,c
  7678  001B24  0E00               	movlw	high (high_isr@CANRxNewMessage+13)
  7679  001B26  6E22               	movwf	ECANReceiveMessage@msgFlags+1,c
  7680  001B28  0E45               	movlw	low (high_isr@CANRxNewMessage+13)
  7681  001B2A  6E21               	movwf	ECANReceiveMessage@msgFlags,c
  7682  001B2C  EC79  F00A         	call	_ECANReceiveMessage	;wreg free
  7683                           
  7684                           ;interrupts.c: 54: PutCANRxFifo(CANRxNewMessage);
  7685  001B30  EE20  F038         	lfsr	2,high_isr@CANRxNewMessage
  7686  001B34  EE10  F012         	lfsr	1,PutCANRxFifo@PutMessage
  7687  001B38  0E0E               	movlw	14
  7688  001B3A                     i2u134_41:
  7689  001B3A  CFDE FFE6          	movff	postinc2,postinc1
  7690  001B3E  2EE8               	decfsz	wreg,f,c
  7691  001B40  D7FC               	goto	i2u134_41
  7692  001B42  ECA5  F00E         	call	_PutCANRxFifo	;wreg free
  7693                           
  7694                           ;interrupts.c: 56: PIR5bits.RXB0IF=0;
  7695  001B46  9077               	bcf	3959,0,c	;volatile
  7696                           
  7697                           ;interrupts.c: 57: PIR5bits.RXB1IF=0;
  7698  001B48  9277               	bcf	3959,1,c	;volatile
  7699  001B4A                     i2l20:
  7700  001B4A  C037  FFF5         	movff	??_high_isr+13,tablat
  7701  001B4E  C036  FFF8         	movff	??_high_isr+12,tblptru
  7702  001B52  C035  FFF7         	movff	??_high_isr+11,tblptrh
  7703  001B56  C034  FFF6         	movff	??_high_isr+10,tblptrl
  7704  001B5A  C033  FFF4         	movff	??_high_isr+9,prodh
  7705  001B5E  C032  FFF3         	movff	??_high_isr+8,prodl
  7706  001B62  C031  FFDA         	movff	??_high_isr+7,fsr2h
  7707  001B66  C030  FFD9         	movff	??_high_isr+6,fsr2l
  7708  001B6A  C02F  FFE2         	movff	??_high_isr+5,fsr1h
  7709  001B6E  C02E  FFE1         	movff	??_high_isr+4,fsr1l
  7710  001B72  C02D  FFEA         	movff	??_high_isr+3,fsr0h
  7711  001B76  C02C  FFE9         	movff	??_high_isr+2,fsr0l
  7712  001B7A  C02B  FFFB         	movff	??_high_isr+1,pclatu
  7713  001B7E  C02A  FFFA         	movff	??_high_isr,pclath
  7714  001B82  0011               	retfie		f
  7715  001B84                     __end_of_high_isr:
  7716                           	opt stack 0
  7717                           pclatu	equ	0xFFB
  7718                           pclath	equ	0xFFA
  7719                           tblptru	equ	0xFF8
  7720                           tblptrh	equ	0xFF7
  7721                           tblptrl	equ	0xFF6
  7722                           tablat	equ	0xFF5
  7723                           prodh	equ	0xFF4
  7724                           prodl	equ	0xFF3
  7725                           intcon	equ	0xFF2
  7726                           intcon2	equ	0xFF1
  7727                           intcon3	equ	0xFF0
  7728                           postinc0	equ	0xFEE
  7729                           postdec0	equ	0xFED
  7730                           fsr0h	equ	0xFEA
  7731                           fsr0l	equ	0xFE9
  7732                           wreg	equ	0xFE8
  7733                           indf1	equ	0xFE7
  7734                           postinc1	equ	0xFE6
  7735                           fsr1h	equ	0xFE2
  7736                           fsr1l	equ	0xFE1
  7737                           bsr	equ	0xFE0
  7738                           indf2	equ	0xFDF
  7739                           postinc2	equ	0xFDE
  7740                           postdec2	equ	0xFDD
  7741                           plusw2	equ	0xFDB
  7742                           fsr2h	equ	0xFDA
  7743                           fsr2l	equ	0xFD9
  7744                           status	equ	0xFD8
  7745                           
  7746 ;; *************** function _PutCANRxFifo *****************
  7747 ;; Defined at:
  7748 ;;		line 95 in file "Can_HL.c"
  7749 ;; Parameters:    Size  Location     Type
  7750 ;;  PutMessage     14   17[COMRAM] struct CANRxMsg
  7751 ;; Auto vars:     Size  Location     Type
  7752 ;;		None
  7753 ;; Return value:  Size  Location     Type
  7754 ;;		None               void
  7755 ;; Registers used:
  7756 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7757 ;; Tracked objects:
  7758 ;;		On entry : 0/0
  7759 ;;		On exit  : 0/0
  7760 ;;		Unchanged: 0/0
  7761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7762 ;;      Params:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7764 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7765 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7766 ;;Total ram usage:       16 bytes
  7767 ;; Hardware stack levels used:    1
  7768 ;; This function calls:
  7769 ;;		Nothing
  7770 ;; This function is called by:
  7771 ;;		_high_isr
  7772 ;; This function uses a non-reentrant model
  7773 ;;
  7774                           
  7775                           	psect	text33
  7776  001D4A                     __ptext33:
  7777                           	opt stack 0
  7778  001D4A                     _PutCANRxFifo:
  7779                           	opt stack 24
  7780                           
  7781                           ;Can_HL.c: 98: if(!CANRxFifo.Fifofull)
  7782                           
  7783                           ;incstack = 0
  7784  001D4A  0102               	movlb	2	; () banked
  7785  001D4C  0102               	movlb	2	; () banked
  7786  001D4E  678E               	tstfsz	(_CANRxFifo+142)& (0+255),b
  7787  001D50  0012               	return	
  7788                           
  7789                           ; BSR set to: 2
  7790                           ;Can_HL.c: 99: {
  7791                           ;Can_HL.c: 100: CANRxFifo.CANMsg[CANRxFifo.HighIndex]=PutMessage;
  7792  001D52  EE20  F012         	lfsr	2,PutCANRxFifo@PutMessage
  7793  001D56  0102               	movlb	2	; () banked
  7794  001D58  0102               	movlb	2	; () banked
  7795  001D5A  518D               	movf	(_CANRxFifo+141)& (0+255),w,b
  7796  001D5C  0D0E               	mullw	14
  7797  001D5E  0E00               	movlw	low _CANRxFifo
  7798  001D60  6E20               	movwf	??_PutCANRxFifo& (0+255),c
  7799  001D62  0E02               	movlw	high _CANRxFifo
  7800  001D64  6E21               	movwf	(??_PutCANRxFifo+1)& (0+255),c
  7801  001D66  50F3               	movf	prodl,w,c
  7802  001D68  2620               	addwf	??_PutCANRxFifo,f,c
  7803  001D6A  50F4               	movf	prodh,w,c
  7804  001D6C  2221               	addwfc	??_PutCANRxFifo+1,f,c
  7805  001D6E  C020  FFE1         	movff	??_PutCANRxFifo,fsr1l
  7806  001D72  C021  FFE2         	movff	??_PutCANRxFifo+1,fsr1h
  7807  001D76  0E0E               	movlw	14
  7808  001D78                     i2u136_41:
  7809  001D78  CFDE FFE6          	movff	postinc2,postinc1
  7810  001D7C  2EE8               	decfsz	wreg,f,c
  7811  001D7E  D7FC               	goto	i2u136_41
  7812                           
  7813                           ; BSR set to: 2
  7814                           ;Can_HL.c: 101: CANRxFifo.FifoEmpty=0;
  7815  001D80  6E20               	movwf	??_PutCANRxFifo& (0+255),c
  7816  001D82  0E00               	movlw	0
  7817  001D84  0102               	movlb	2	; () banked
  7818  001D86  0102               	movlb	2	; () banked
  7819  001D88  6F8F               	movwf	(_CANRxFifo+143)& (0+255),b
  7820  001D8A  5020               	movf	??_PutCANRxFifo& (0+255),w,c
  7821                           
  7822                           ; BSR set to: 2
  7823                           ;Can_HL.c: 102: CANRxFifo.HighIndex++;
  7824  001D8C  0102               	movlb	2	; () banked
  7825  001D8E  0102               	movlb	2	; () banked
  7826  001D90  2B8D               	incf	(_CANRxFifo+141)& (0+255),f,b
  7827                           
  7828                           ; BSR set to: 2
  7829                           ;Can_HL.c: 104: if(CANRxFifo.HighIndex==(10))
  7830  001D92  0102               	movlb	2	; () banked
  7831  001D94  0102               	movlb	2	; () banked
  7832  001D96  518D               	movf	(_CANRxFifo+141)& (0+255),w,b
  7833  001D98  0A0A               	xorlw	10
  7834  001D9A  A4D8               	btfss	status,2,c
  7835  001D9C  D006               	goto	i2l2195
  7836                           
  7837                           ; BSR set to: 2
  7838                           ;Can_HL.c: 105: CANRxFifo.HighIndex=0;
  7839  001D9E  6E20               	movwf	??_PutCANRxFifo& (0+255),c
  7840  001DA0  0E00               	movlw	0
  7841  001DA2  0102               	movlb	2	; () banked
  7842  001DA4  0102               	movlb	2	; () banked
  7843  001DA6  6F8D               	movwf	(_CANRxFifo+141)& (0+255),b
  7844  001DA8  5020               	movf	??_PutCANRxFifo& (0+255),w,c
  7845  001DAA                     i2l2195:
  7846                           
  7847                           ; BSR set to: 2
  7848                           ;Can_HL.c: 107: if(CANRxFifo.HighIndex==CANRxFifo.LowIndex)
  7849  001DAA  0102               	movlb	2	; () banked
  7850  001DAC  0102               	movlb	2	; () banked
  7851  001DAE  518C               	movf	(_CANRxFifo+140)& (0+255),w,b
  7852  001DB0  0102               	movlb	2	; () banked
  7853  001DB2  EE22  F08D         	lfsr	2,_CANRxFifo+141
  7854  001DB6  62DF               	cpfseq	indf2,c
  7855  001DB8  0012               	return	
  7856                           
  7857                           ; BSR set to: 2
  7858                           ;Can_HL.c: 108: CANRxFifo.Fifofull=1;
  7859  001DBA  6E20               	movwf	??_PutCANRxFifo& (0+255),c
  7860  001DBC  0E01               	movlw	1
  7861  001DBE  0102               	movlb	2	; () banked
  7862  001DC0  0102               	movlb	2	; () banked
  7863  001DC2  6F8E               	movwf	(_CANRxFifo+142)& (0+255),b
  7864  001DC4  5020               	movf	??_PutCANRxFifo& (0+255),w,c
  7865  001DC6  0012               	return	
  7866  001DC8                     __end_of_PutCANRxFifo:
  7867                           	opt stack 0
  7868                           pclatu	equ	0xFFB
  7869                           pclath	equ	0xFFA
  7870                           tblptru	equ	0xFF8
  7871                           tblptrh	equ	0xFF7
  7872                           tblptrl	equ	0xFF6
  7873                           tablat	equ	0xFF5
  7874                           prodh	equ	0xFF4
  7875                           prodl	equ	0xFF3
  7876                           intcon	equ	0xFF2
  7877                           intcon2	equ	0xFF1
  7878                           intcon3	equ	0xFF0
  7879                           postinc0	equ	0xFEE
  7880                           postdec0	equ	0xFED
  7881                           fsr0h	equ	0xFEA
  7882                           fsr0l	equ	0xFE9
  7883                           wreg	equ	0xFE8
  7884                           indf1	equ	0xFE7
  7885                           postinc1	equ	0xFE6
  7886                           fsr1h	equ	0xFE2
  7887                           fsr1l	equ	0xFE1
  7888                           bsr	equ	0xFE0
  7889                           indf2	equ	0xFDF
  7890                           postinc2	equ	0xFDE
  7891                           postdec2	equ	0xFDD
  7892                           plusw2	equ	0xFDB
  7893                           fsr2h	equ	0xFDA
  7894                           fsr2l	equ	0xFD9
  7895                           status	equ	0xFD8
  7896                           
  7897 ;; *************** function _ECANReceiveMessage *****************
  7898 ;; Defined at:
  7899 ;;		line 796 in file "ECANPoll.c"
  7900 ;; Parameters:    Size  Location     Type
  7901 ;;  id              2   26[COMRAM] PTR unsigned long 
  7902 ;;		 -> high_isr@CANRxNewMessage(14), 
  7903 ;;  data            2   28[COMRAM] PTR unsigned char 
  7904 ;;		 -> high_isr@CANRxNewMessage(14), 
  7905 ;;  dataLen         2   30[COMRAM] PTR unsigned char 
  7906 ;;		 -> high_isr@CANRxNewMessage(14), 
  7907 ;;  msgFlags        2   32[COMRAM] PTR enum E19298
  7908 ;;		 -> high_isr@CANRxNewMessage(14), 
  7909 ;; Auto vars:     Size  Location     Type
  7910 ;;  ptr             2   38[COMRAM] PTR unsigned char 
  7911 ;;		 -> RXB1CON(1), RXB0CON(1), 
  7912 ;;  savedPtr        2   35[COMRAM] PTR unsigned char 
  7913 ;;		 -> RXB1CON(1), RXB0CON(1), 
  7914 ;;  temp            1   40[COMRAM] struct .
  7915 ;;  i               1   37[COMRAM] unsigned char 
  7916 ;; Return value:  Size  Location     Type
  7917 ;;                  1    wreg      enum E18559
  7918 ;; Registers used:
  7919 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  7920 ;; Tracked objects:
  7921 ;;		On entry : 0/0
  7922 ;;		On exit  : 0/0
  7923 ;;		Unchanged: 0/0
  7924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7925 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7926 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7927 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7928 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7929 ;;Total ram usage:       15 bytes
  7930 ;; Hardware stack levels used:    1
  7931 ;; Hardware stack levels required when called:    1
  7932 ;; This function calls:
  7933 ;;		__RegsToCANID
  7934 ;; This function is called by:
  7935 ;;		_high_isr
  7936 ;; This function uses a non-reentrant model
  7937 ;;
  7938                           
  7939                           	psect	text34
  7940  0014F2                     __ptext34:
  7941                           	opt stack 0
  7942  0014F2                     _ECANReceiveMessage:
  7943                           	opt stack 23
  7944                           
  7945                           ;ECANPoll.c: 805: BYTE *ptr, *savedPtr;
  7946                           ;ECANPoll.c: 806: char i;
  7947                           ;ECANPoll.c: 807: BYTE_VAL temp;
  7948                           ;ECANPoll.c: 809: _ECANRxFilterHitInfo.Val = 0;
  7949                           
  7950                           ; BSR set to: 2
  7951                           ;incstack = 0
  7952  0014F2  6E23               	movwf	??_ECANReceiveMessage& (0+255),c
  7953  0014F4  0E00               	movlw	0
  7954  0014F6  6E46               	movwf	__ECANRxFilterHitInfo,c
  7955  0014F8  5023               	movf	??_ECANReceiveMessage& (0+255),w,c
  7956                           
  7957                           ;ECANPoll.c: 819: {
  7958                           ;ECANPoll.c: 821: if ( RXB0FUL )
  7959  0014FA  AE60               	btfss	3936,7,c	;volatile
  7960  0014FC  D013               	goto	i2l419
  7961                           
  7962                           ;ECANPoll.c: 822: {
  7963                           ;ECANPoll.c: 824: RXB0IF = 0;
  7964  0014FE  9077               	bcf	3959,0,c	;volatile
  7965                           
  7966                           ;ECANPoll.c: 827: if ( RXB0OVFL )
  7967  001500  AE71               	btfss	3953,7,c	;volatile
  7968  001502  D007               	goto	i2l1261
  7969                           
  7970                           ;ECANPoll.c: 828: {
  7971                           ;ECANPoll.c: 829: *msgFlags |= ECAN_RX_OVERFLOW;
  7972  001504  C021  FFD9         	movff	ECANReceiveMessage@msgFlags,fsr2l
  7973  001508  C022  FFDA         	movff	ECANReceiveMessage@msgFlags+1,fsr2h
  7974  00150C  0E00               	movlw	0
  7975  00150E  86DB               	bsf	plusw2,3,c
  7976                           
  7977                           ;ECANPoll.c: 830: RXB0OVFL = 0;
  7978  001510  9E71               	bcf	3953,7,c	;volatile
  7979  001512                     i2l1261:
  7980                           
  7981                           ;ECANPoll.c: 831: }
  7982                           ;ECANPoll.c: 833: _ECANRxFilterHitInfo.bits.b0 = RXB0FILHIT0;
  7983  001512  A060               	btfss	3936,0,c	;volatile
  7984  001514  D002               	bra	i2u5_45
  7985  001516  8046               	bsf	__ECANRxFilterHitInfo,0,c
  7986  001518  D001               	bra	i2u5_47
  7987  00151A                     i2u5_45:
  7988  00151A  9046               	bcf	__ECANRxFilterHitInfo,0,c
  7989  00151C                     i2u5_47:
  7990                           
  7991                           ;ECANPoll.c: 835: ptr = (BYTE*)&RXB0CON;
  7992  00151C  0E0F               	movlw	15	;volatile
  7993  00151E  6E28               	movwf	ECANReceiveMessage@ptr+1,c
  7994  001520  0E60               	movlw	96	;volatile
  7995  001522  D021               	goto	L3
  7996  001524                     i2l419:
  7997                           
  7998                           ;ECANPoll.c: 838: else if ( RXB1FUL )
  7999  001524  010F               	movlb	15
  8000  001526  AF30               	btfss	48,7,b	;volatile
  8001  001528  0012               	return	
  8002                           
  8003                           ;ECANPoll.c: 839: {
  8004                           ;ECANPoll.c: 841: RXB1IF = 0;
  8005  00152A  9277               	bcf	3959,1,c	;volatile
  8006                           
  8007                           ;ECANPoll.c: 844: if ( RXB1OVFL )
  8008  00152C  AC71               	btfss	3953,6,c	;volatile
  8009  00152E  D007               	goto	i2l1271
  8010                           
  8011                           ;ECANPoll.c: 845: {
  8012                           ;ECANPoll.c: 846: *msgFlags |= ECAN_RX_OVERFLOW;
  8013  001530  C021  FFD9         	movff	ECANReceiveMessage@msgFlags,fsr2l
  8014  001534  C022  FFDA         	movff	ECANReceiveMessage@msgFlags+1,fsr2h
  8015  001538  0E00               	movlw	0
  8016  00153A  86DB               	bsf	plusw2,3,c
  8017                           
  8018                           ;ECANPoll.c: 847: RXB1OVFL = 0;
  8019  00153C  9C71               	bcf	3953,6,c	;volatile
  8020  00153E                     i2l1271:
  8021                           
  8022                           ;ECANPoll.c: 848: }
  8023                           ;ECANPoll.c: 850: _ECANRxFilterHitInfo.Val = RXB1CON & 0x07;
  8024  00153E  010F               	movlb	15	; () banked
  8025  001540  010F               	movlb	15	; () banked
  8026  001542  5130               	movf	48,w,b	;volatile
  8027  001544  0B07               	andlw	7
  8028  001546  6E46               	movwf	__ECANRxFilterHitInfo,c
  8029                           
  8030                           ; BSR set to: 15
  8031                           ;ECANPoll.c: 852: if ( _ECANRxFilterHitInfo.Val < 0x02 )
  8032  001548  0E02               	movlw	2
  8033  00154A  5C46               	subwf	__ECANRxFilterHitInfo,w,c
  8034  00154C  B0D8               	btfsc	status,0,c
  8035  00154E  D006               	goto	i2l1277
  8036                           
  8037                           ; BSR set to: 15
  8038                           ;ECANPoll.c: 853: *msgFlags |= ECAN_RX_DBL_BUFFERED;
  8039  001550  C021  FFD9         	movff	ECANReceiveMessage@msgFlags,fsr2l
  8040  001554  C022  FFDA         	movff	ECANReceiveMessage@msgFlags+1,fsr2h
  8041  001558  0E00               	movlw	0
  8042  00155A  8EDB               	bsf	plusw2,7,c
  8043  00155C                     i2l1277:
  8044                           
  8045                           ; BSR set to: 15
  8046                           ;ECANPoll.c: 856: ptr = (BYTE*)&RXB1CON;
  8047  00155C  010F               	movlb	15	; () banked
  8048  00155E  0E0F               	movlw	15	;volatile
  8049  001560  6E28               	movwf	ECANReceiveMessage@ptr+1,c
  8050  001562  010F               	movlb	15	; () banked
  8051  001564  0E30               	movlw	48	;volatile
  8052  001566                     L3:
  8053  001566  6E27               	movwf	ECANReceiveMessage@ptr,c
  8054                           
  8055                           ;ECANPoll.c: 939: savedPtr = ptr;
  8056                           
  8057                           ; BSR set to: 15
  8058                           
  8059                           ;ECANPoll.c: 862: }
  8060                           ;ECANPoll.c: 938: _SaveMessage:
  8061                           
  8062                           ; BSR set to: 15
  8063                           ;ECANPoll.c: 861: goto _SaveMessage;
  8064                           
  8065                           ; BSR set to: 15
  8066                           
  8067                           ; BSR set to: 15
  8068                           ;ECANPoll.c: 858: else
  8069                           ;ECANPoll.c: 859: return FALSE;
  8070                           ;	Return value of _ECANReceiveMessage is never used
  8071                           
  8072                           ;ECANPoll.c: 857: }
  8073  001568  C028  F025         	movff	ECANReceiveMessage@ptr+1,ECANReceiveMessage@savedPtr+1
  8074  00156C  C027  F024         	movff	ECANReceiveMessage@ptr,ECANReceiveMessage@savedPtr
  8075                           
  8076                           ;ECANPoll.c: 940: *msgFlags = 0;
  8077  001570  C021  FFD9         	movff	ECANReceiveMessage@msgFlags,fsr2l
  8078  001574  C022  FFDA         	movff	ECANReceiveMessage@msgFlags+1,fsr2h
  8079  001578  0E00               	movlw	0
  8080  00157A  6EDF               	movwf	indf2,c
  8081                           
  8082                           ;ECANPoll.c: 943: temp.Val = *(ptr+5);
  8083  00157C  EE20 F005          	lfsr	2,5
  8084  001580  5027               	movf	ECANReceiveMessage@ptr,w,c
  8085  001582  26D9               	addwf	fsr2l,f,c
  8086  001584  5028               	movf	ECANReceiveMessage@ptr+1,w,c
  8087  001586  22DA               	addwfc	fsr2h,f,c
  8088  001588  50DF               	movf	indf2,w,c
  8089  00158A  6E29               	movwf	ECANReceiveMessage@temp,c
  8090                           
  8091                           ;ECANPoll.c: 944: *dataLen = temp.Val & 0b00001111;
  8092  00158C  5029               	movf	ECANReceiveMessage@temp,w,c
  8093  00158E  0B0F               	andlw	15
  8094  001590  C01F  FFD9         	movff	ECANReceiveMessage@dataLen,fsr2l
  8095  001594  C020  FFDA         	movff	ECANReceiveMessage@dataLen+1,fsr2h
  8096  001598  6EDF               	movwf	indf2,c
  8097                           
  8098                           ;ECANPoll.c: 947: if ( temp.bits.b6 )
  8099  00159A  AC29               	btfss	ECANReceiveMessage@temp,6,c
  8100  00159C  D006               	goto	i2l428
  8101                           
  8102                           ;ECANPoll.c: 948: *msgFlags |= ECAN_RX_RTR_FRAME;
  8103  00159E  C021  FFD9         	movff	ECANReceiveMessage@msgFlags,fsr2l
  8104  0015A2  C022  FFDA         	movff	ECANReceiveMessage@msgFlags+1,fsr2h
  8105  0015A6  0E00               	movlw	0
  8106  0015A8  8CDB               	bsf	plusw2,6,c
  8107  0015AA                     i2l428:
  8108                           
  8109                           ;ECANPoll.c: 951: temp.Val = *(ptr+2);
  8110  0015AA  EE20 F002          	lfsr	2,2
  8111  0015AE  5027               	movf	ECANReceiveMessage@ptr,w,c
  8112  0015B0  26D9               	addwf	fsr2l,f,c
  8113  0015B2  5028               	movf	ECANReceiveMessage@ptr+1,w,c
  8114  0015B4  22DA               	addwfc	fsr2h,f,c
  8115  0015B6  50DF               	movf	indf2,w,c
  8116  0015B8  6E29               	movwf	ECANReceiveMessage@temp,c
  8117                           
  8118                           ;ECANPoll.c: 952: if ( temp.bits.b3 )
  8119  0015BA  A629               	btfss	ECANReceiveMessage@temp,3,c
  8120  0015BC  D009               	goto	i2l1297
  8121                           
  8122                           ;ECANPoll.c: 953: {
  8123                           ;ECANPoll.c: 954: *msgFlags |= ECAN_RX_XTD_FRAME;
  8124  0015BE  C021  FFD9         	movff	ECANReceiveMessage@msgFlags,fsr2l
  8125  0015C2  C022  FFDA         	movff	ECANReceiveMessage@msgFlags+1,fsr2h
  8126  0015C6  0E00               	movlw	0
  8127  0015C8  8ADB               	bsf	plusw2,5,c
  8128                           
  8129                           ;ECANPoll.c: 955: temp.Val = 1;
  8130  0015CA  6E23               	movwf	??_ECANReceiveMessage& (0+255),c
  8131  0015CC  0E01               	movlw	1
  8132  0015CE  D002               	goto	L4
  8133  0015D0                     i2l1297:
  8134                           
  8135                           ;ECANPoll.c: 957: else
  8136                           ;ECANPoll.c: 958: temp.Val = 0;
  8137  0015D0  6E23               	movwf	??_ECANReceiveMessage& (0+255),c
  8138  0015D2  0E00               	movlw	0
  8139  0015D4                     L4:
  8140  0015D4  6E29               	movwf	ECANReceiveMessage@temp,c
  8141  0015D6  5023               	movf	??_ECANReceiveMessage& (0+255),w,c
  8142                           
  8143                           ;ECANPoll.c: 960: _RegsToCANID(ptr+1, id, temp.Val);
  8144  0015D8  0E01               	movlw	1
  8145  0015DA  2427               	addwf	ECANReceiveMessage@ptr,w,c
  8146  0015DC  6E12               	movwf	__RegsToCANID@ptr,c
  8147  0015DE  0E00               	movlw	0
  8148  0015E0  2028               	addwfc	ECANReceiveMessage@ptr+1,w,c
  8149  0015E2  6E13               	movwf	__RegsToCANID@ptr+1,c
  8150  0015E4  C01C  F015         	movff	ECANReceiveMessage@id+1,__RegsToCANID@val+1
  8151  0015E8  C01B  F014         	movff	ECANReceiveMessage@id,__RegsToCANID@val
  8152  0015EC  C029  F016         	movff	ECANReceiveMessage@temp,__RegsToCANID@type
  8153  0015F0  ECBF  F009         	call	__RegsToCANID	;wreg free
  8154                           
  8155                           ;ECANPoll.c: 963: ptr += 6;
  8156  0015F4  0E06               	movlw	6
  8157  0015F6  2627               	addwf	ECANReceiveMessage@ptr,f,c
  8158  0015F8  0E00               	movlw	0
  8159  0015FA  2228               	addwfc	ECANReceiveMessage@ptr+1,f,c
  8160                           
  8161                           ;ECANPoll.c: 964: temp.Val = *dataLen;
  8162  0015FC  C01F  FFD9         	movff	ECANReceiveMessage@dataLen,fsr2l
  8163  001600  C020  FFDA         	movff	ECANReceiveMessage@dataLen+1,fsr2h
  8164  001604  50DF               	movf	indf2,w,c
  8165  001606  6E29               	movwf	ECANReceiveMessage@temp,c
  8166                           
  8167                           ;ECANPoll.c: 965: for ( i = 0; i < temp.Val; i++ )
  8168  001608  6E23               	movwf	??_ECANReceiveMessage& (0+255),c
  8169  00160A  0E00               	movlw	0
  8170  00160C  6E26               	movwf	ECANReceiveMessage@i,c
  8171  00160E  5023               	movf	??_ECANReceiveMessage& (0+255),w,c
  8172  001610  D00F               	goto	i2l1315
  8173  001612                     i2l1307:
  8174                           
  8175                           ;ECANPoll.c: 966: *data++ = *ptr++;
  8176  001612  C027  FFD9         	movff	ECANReceiveMessage@ptr,fsr2l
  8177  001616  C028  FFDA         	movff	ECANReceiveMessage@ptr+1,fsr2h
  8178  00161A  C01D  FFE1         	movff	ECANReceiveMessage@data,fsr1l
  8179  00161E  C01E  FFE2         	movff	ECANReceiveMessage@data+1,fsr1h
  8180  001622  CFDF FFE7          	movff	indf2,indf1
  8181  001626  4A27               	infsnz	ECANReceiveMessage@ptr,f,c
  8182  001628  2A28               	incf	ECANReceiveMessage@ptr+1,f,c
  8183  00162A  4A1D               	infsnz	ECANReceiveMessage@data,f,c
  8184  00162C  2A1E               	incf	ECANReceiveMessage@data+1,f,c
  8185  00162E  2A26               	incf	ECANReceiveMessage@i,f,c
  8186  001630                     i2l1315:
  8187  001630  5029               	movf	ECANReceiveMessage@temp,w,c
  8188  001632  5C26               	subwf	ECANReceiveMessage@i,w,c
  8189  001634  A0D8               	btfss	status,0,c
  8190  001636  D7ED               	goto	i2l1307
  8191                           
  8192                           ;ECANPoll.c: 969: if ( IRXIF )
  8193  001638  AE77               	btfss	3959,7,c	;volatile
  8194  00163A  D007               	goto	i2l1321
  8195                           
  8196                           ;ECANPoll.c: 970: {
  8197                           ;ECANPoll.c: 971: *msgFlags |= ECAN_RX_INVALID_MSG;
  8198  00163C  C021  FFD9         	movff	ECANReceiveMessage@msgFlags,fsr2l
  8199  001640  C022  FFDA         	movff	ECANReceiveMessage@msgFlags+1,fsr2h
  8200  001644  0E00               	movlw	0
  8201  001646  88DB               	bsf	plusw2,4,c
  8202                           
  8203                           ;ECANPoll.c: 972: IRXIF = 0;
  8204  001648  9E77               	bcf	3959,7,c	;volatile
  8205  00164A                     i2l1321:
  8206                           
  8207                           ;ECANPoll.c: 973: }
  8208                           ;ECANPoll.c: 976: *savedPtr &= 0x7f;
  8209  00164A  C024  FFD9         	movff	ECANReceiveMessage@savedPtr,fsr2l
  8210  00164E  C025  FFDA         	movff	ECANReceiveMessage@savedPtr+1,fsr2h
  8211  001652  0E7F               	movlw	127
  8212  001654  16DF               	andwf	indf2,f,c
  8213  001656  0012               	return	
  8214  001658                     __end_of_ECANReceiveMessage:
  8215                           	opt stack 0
  8216                           pclatu	equ	0xFFB
  8217                           pclath	equ	0xFFA
  8218                           tblptru	equ	0xFF8
  8219                           tblptrh	equ	0xFF7
  8220                           tblptrl	equ	0xFF6
  8221                           tablat	equ	0xFF5
  8222                           prodh	equ	0xFF4
  8223                           prodl	equ	0xFF3
  8224                           intcon	equ	0xFF2
  8225                           intcon2	equ	0xFF1
  8226                           intcon3	equ	0xFF0
  8227                           postinc0	equ	0xFEE
  8228                           postdec0	equ	0xFED
  8229                           fsr0h	equ	0xFEA
  8230                           fsr0l	equ	0xFE9
  8231                           wreg	equ	0xFE8
  8232                           indf1	equ	0xFE7
  8233                           postinc1	equ	0xFE6
  8234                           fsr1h	equ	0xFE2
  8235                           fsr1l	equ	0xFE1
  8236                           bsr	equ	0xFE0
  8237                           indf2	equ	0xFDF
  8238                           postinc2	equ	0xFDE
  8239                           postdec2	equ	0xFDD
  8240                           plusw2	equ	0xFDB
  8241                           fsr2h	equ	0xFDA
  8242                           fsr2l	equ	0xFD9
  8243                           status	equ	0xFD8
  8244                           
  8245 ;; *************** function __RegsToCANID *****************
  8246 ;; Defined at:
  8247 ;;		line 1154 in file "ECANPoll.c"
  8248 ;; Parameters:    Size  Location     Type
  8249 ;;  ptr             2   17[COMRAM] PTR unsigned char 
  8250 ;;		 -> RXB1CON(1), RXB0CON(1), 
  8251 ;;  val             2   19[COMRAM] PTR unsigned long 
  8252 ;;		 -> high_isr@CANRxNewMessage(14), 
  8253 ;;  type            1   21[COMRAM] unsigned char 
  8254 ;; Auto vars:     Size  Location     Type
  8255 ;;  Value           2   24[COMRAM] PTR struct _CAN_MESSAGE_
  8256 ;;		 -> high_isr@CANRxNewMessage(14), 
  8257 ;; Return value:  Size  Location     Type
  8258 ;;		None               void
  8259 ;; Registers used:
  8260 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8261 ;; Tracked objects:
  8262 ;;		On entry : 0/0
  8263 ;;		On exit  : 0/0
  8264 ;;		Unchanged: 0/0
  8265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8266 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8267 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8268 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8269 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8270 ;;Total ram usage:        9 bytes
  8271 ;; Hardware stack levels used:    1
  8272 ;; This function calls:
  8273 ;;		Nothing
  8274 ;; This function is called by:
  8275 ;;		_ECANReceiveMessage
  8276 ;; This function uses a non-reentrant model
  8277 ;;
  8278                           
  8279                           	psect	text35
  8280  00137E                     __ptext35:
  8281                           	opt stack 0
  8282  00137E                     __RegsToCANID:
  8283                           	opt stack 23
  8284                           
  8285                           ;ECANPoll.c: 1158: CAN_MESSAGE_ID *Value;
  8286                           ;ECANPoll.c: 1160: Value = (CAN_MESSAGE_ID*)val;
  8287                           
  8288                           ;incstack = 0
  8289  00137E  C015  F01A         	movff	__RegsToCANID@val+1,__RegsToCANID@Value+1
  8290  001382  C014  F019         	movff	__RegsToCANID@val,__RegsToCANID@Value
  8291                           
  8292                           ;ECANPoll.c: 1162: if ( type == 0 )
  8293  001386  6616               	tstfsz	__RegsToCANID@type,c
  8294  001388  D04A               	goto	i2l1991
  8295                           
  8296                           ;ECANPoll.c: 1163: {
  8297                           ;ECANPoll.c: 1165: Value->BYTES.BYTE_1 = (*ptr << 3);
  8298  00138A  C012  FFD9         	movff	__RegsToCANID@ptr,fsr2l
  8299  00138E  C013  FFDA         	movff	__RegsToCANID@ptr+1,fsr2h
  8300  001392  50DF               	movf	indf2,w,c
  8301  001394  6E17               	movwf	??__RegsToCANID& (0+255),c
  8302  001396  90D8               	bcf	status,0,c
  8303  001398  3617               	rlcf	??__RegsToCANID,f,c
  8304  00139A  90D8               	bcf	status,0,c
  8305  00139C  3617               	rlcf	??__RegsToCANID,f,c
  8306  00139E  90D8               	bcf	status,0,c
  8307  0013A0  3417               	rlcf	??__RegsToCANID,w,c
  8308  0013A2  C019  FFD9         	movff	__RegsToCANID@Value,fsr2l
  8309  0013A6  C01A  FFDA         	movff	__RegsToCANID@Value+1,fsr2h
  8310  0013AA  6EDF               	movwf	indf2,c
  8311                           
  8312                           ;ECANPoll.c: 1166: Value->BYTES.BYTE_2 = *ptr >> 5;
  8313  0013AC  EE20 F001          	lfsr	2,1
  8314  0013B0  5019               	movf	__RegsToCANID@Value,w,c
  8315  0013B2  26D9               	addwf	fsr2l,f,c
  8316  0013B4  501A               	movf	__RegsToCANID@Value+1,w,c
  8317  0013B6  22DA               	addwfc	fsr2h,f,c
  8318  0013B8  C012  FFE1         	movff	__RegsToCANID@ptr,fsr1l
  8319  0013BC  C013  FFE2         	movff	__RegsToCANID@ptr+1,fsr1h
  8320  0013C0  50E7               	movf	indf1,w,c
  8321  0013C2  6E17               	movwf	??__RegsToCANID& (0+255),c
  8322  0013C4  0E05               	movlw	5
  8323  0013C6  6E18               	movwf	(??__RegsToCANID+1)& (0+255),c
  8324  0013C8                     i2u106_45:
  8325  0013C8  90D8               	bcf	status,0,c
  8326  0013CA  3217               	rrcf	??__RegsToCANID,f,c
  8327  0013CC  2E18               	decfsz	(??__RegsToCANID+1)& (0+255),f,c
  8328  0013CE  D7FC               	goto	i2u106_45
  8329  0013D0  5017               	movf	??__RegsToCANID,w,c
  8330  0013D2  6EDF               	movwf	indf2,c
  8331                           
  8332                           ;ECANPoll.c: 1167: ptr++;
  8333  0013D4  4A12               	infsnz	__RegsToCANID@ptr,f,c
  8334  0013D6  2A13               	incf	__RegsToCANID@ptr+1,f,c
  8335                           
  8336                           ;ECANPoll.c: 1168: Value->BYTES.BYTE_1 |= (*ptr >> 5);
  8337  0013D8  C012  FFD9         	movff	__RegsToCANID@ptr,fsr2l
  8338  0013DC  C013  FFDA         	movff	__RegsToCANID@ptr+1,fsr2h
  8339  0013E0  50DF               	movf	indf2,w,c
  8340  0013E2  6E17               	movwf	??__RegsToCANID& (0+255),c
  8341  0013E4  0E05               	movlw	5
  8342  0013E6  6E18               	movwf	(??__RegsToCANID+1)& (0+255),c
  8343  0013E8                     i2u107_45:
  8344  0013E8  90D8               	bcf	status,0,c
  8345  0013EA  3217               	rrcf	??__RegsToCANID,f,c
  8346  0013EC  2E18               	decfsz	(??__RegsToCANID+1)& (0+255),f,c
  8347  0013EE  D7FC               	goto	i2u107_45
  8348  0013F0  C019  FFD9         	movff	__RegsToCANID@Value,fsr2l
  8349  0013F4  C01A  FFDA         	movff	__RegsToCANID@Value+1,fsr2h
  8350  0013F8  5017               	movf	??__RegsToCANID,w,c
  8351  0013FA  12DF               	iorwf	indf2,f,c
  8352                           
  8353                           ;ECANPoll.c: 1169: Value->BYTES.BYTE_3 = 0x00;
  8354  0013FC  EE20 F002          	lfsr	2,2
  8355  001400  5019               	movf	__RegsToCANID@Value,w,c
  8356  001402  26D9               	addwf	fsr2l,f,c
  8357  001404  501A               	movf	__RegsToCANID@Value+1,w,c
  8358  001406  22DA               	addwfc	fsr2h,f,c
  8359  001408  0E00               	movlw	0
  8360  00140A  6EDF               	movwf	indf2,c
  8361                           
  8362                           ;ECANPoll.c: 1170: Value->BYTES.BYTE_4 = 0x00;
  8363  00140C  EE20 F003          	lfsr	2,3
  8364  001410  5019               	movf	__RegsToCANID@Value,w,c
  8365  001412  26D9               	addwf	fsr2l,f,c
  8366  001414  501A               	movf	__RegsToCANID@Value+1,w,c
  8367  001416  22DA               	addwfc	fsr2h,f,c
  8368  001418  0E00               	movlw	0
  8369  00141A  6EDF               	movwf	indf2,c
  8370                           
  8371                           ;ECANPoll.c: 1171: }
  8372  00141C  0012               	return	
  8373  00141E                     i2l1991:
  8374                           
  8375                           ;ECANPoll.c: 1172: else
  8376                           ;ECANPoll.c: 1173: {
  8377                           ;ECANPoll.c: 1175: Value->BYTES.BYTE_3 = (*ptr << 5);
  8378  00141E  EE20 F002          	lfsr	2,2
  8379  001422  5019               	movf	__RegsToCANID@Value,w,c
  8380  001424  26D9               	addwf	fsr2l,f,c
  8381  001426  501A               	movf	__RegsToCANID@Value+1,w,c
  8382  001428  22DA               	addwfc	fsr2h,f,c
  8383  00142A  C012  FFE1         	movff	__RegsToCANID@ptr,fsr1l
  8384  00142E  C013  FFE2         	movff	__RegsToCANID@ptr+1,fsr1h
  8385  001432  50E7               	movf	indf1,w,c
  8386  001434  6E17               	movwf	??__RegsToCANID& (0+255),c
  8387  001436  0E05               	movlw	5
  8388  001438  6E18               	movwf	(??__RegsToCANID+1)& (0+255),c
  8389  00143A                     i2u108_45:
  8390  00143A  90D8               	bcf	status,0,c
  8391  00143C  3617               	rlcf	??__RegsToCANID,f,c
  8392  00143E  2E18               	decfsz	(??__RegsToCANID+1)& (0+255),f,c
  8393  001440  D7FC               	goto	i2u108_45
  8394  001442  5017               	movf	??__RegsToCANID,w,c
  8395  001444  6EDF               	movwf	indf2,c
  8396                           
  8397                           ;ECANPoll.c: 1176: Value->BYTES.BYTE_4 = (*ptr >> 3);
  8398  001446  EE20 F003          	lfsr	2,3
  8399  00144A  5019               	movf	__RegsToCANID@Value,w,c
  8400  00144C  26D9               	addwf	fsr2l,f,c
  8401  00144E  501A               	movf	__RegsToCANID@Value+1,w,c
  8402  001450  22DA               	addwfc	fsr2h,f,c
  8403  001452  C012  FFE1         	movff	__RegsToCANID@ptr,fsr1l
  8404  001456  C013  FFE2         	movff	__RegsToCANID@ptr+1,fsr1h
  8405  00145A  50E7               	movf	indf1,w,c
  8406  00145C  6E17               	movwf	??__RegsToCANID& (0+255),c
  8407  00145E  90D8               	bcf	status,0,c
  8408  001460  3217               	rrcf	??__RegsToCANID,f,c
  8409  001462  90D8               	bcf	status,0,c
  8410  001464  3217               	rrcf	??__RegsToCANID,f,c
  8411  001466  90D8               	bcf	status,0,c
  8412  001468  3017               	rrcf	??__RegsToCANID,w,c
  8413  00146A  6EDF               	movwf	indf2,c
  8414                           
  8415                           ;ECANPoll.c: 1177: ptr++;
  8416  00146C  4A12               	infsnz	__RegsToCANID@ptr,f,c
  8417  00146E  2A13               	incf	__RegsToCANID@ptr+1,f,c
  8418                           
  8419                           ;ECANPoll.c: 1178: Value->BYTES.BYTE_3 |= (*ptr & 0x03);
  8420  001470  C012  FFD9         	movff	__RegsToCANID@ptr,fsr2l
  8421  001474  C013  FFDA         	movff	__RegsToCANID@ptr+1,fsr2h
  8422  001478  50DF               	movf	indf2,w,c
  8423  00147A  6E17               	movwf	??__RegsToCANID& (0+255),c
  8424  00147C  0E03               	movlw	3
  8425  00147E  1617               	andwf	??__RegsToCANID,f,c
  8426  001480  EE20 F002          	lfsr	2,2
  8427  001484  5019               	movf	__RegsToCANID@Value,w,c
  8428  001486  26D9               	addwf	fsr2l,f,c
  8429  001488  501A               	movf	__RegsToCANID@Value+1,w,c
  8430  00148A  22DA               	addwfc	fsr2h,f,c
  8431  00148C  5017               	movf	??__RegsToCANID,w,c
  8432  00148E  12DF               	iorwf	indf2,f,c
  8433                           
  8434                           ;ECANPoll.c: 1180: Value->BYTES.BYTE_3 |= ((*ptr & 0xe0) >> 3);
  8435  001490  C012  FFD9         	movff	__RegsToCANID@ptr,fsr2l
  8436  001494  C013  FFDA         	movff	__RegsToCANID@ptr+1,fsr2h
  8437  001498  50DF               	movf	indf2,w,c
  8438  00149A  6E17               	movwf	??__RegsToCANID& (0+255),c
  8439  00149C  90D8               	bcf	status,0,c
  8440  00149E  3217               	rrcf	??__RegsToCANID,f,c
  8441  0014A0  90D8               	bcf	status,0,c
  8442  0014A2  3217               	rrcf	??__RegsToCANID,f,c
  8443  0014A4  90D8               	bcf	status,0,c
  8444  0014A6  3217               	rrcf	??__RegsToCANID,f,c
  8445  0014A8  0E1C               	movlw	28
  8446  0014AA  1617               	andwf	??__RegsToCANID,f,c
  8447  0014AC  EE20 F002          	lfsr	2,2
  8448  0014B0  5019               	movf	__RegsToCANID@Value,w,c
  8449  0014B2  26D9               	addwf	fsr2l,f,c
  8450  0014B4  501A               	movf	__RegsToCANID@Value+1,w,c
  8451  0014B6  22DA               	addwfc	fsr2h,f,c
  8452  0014B8  5017               	movf	??__RegsToCANID,w,c
  8453  0014BA  12DF               	iorwf	indf2,f,c
  8454                           
  8455                           ;ECANPoll.c: 1181: ptr++;
  8456  0014BC  4A12               	infsnz	__RegsToCANID@ptr,f,c
  8457  0014BE  2A13               	incf	__RegsToCANID@ptr+1,f,c
  8458                           
  8459                           ;ECANPoll.c: 1182: Value->BYTES.BYTE_2 = *ptr;
  8460  0014C0  C012  FFD9         	movff	__RegsToCANID@ptr,fsr2l
  8461  0014C4  C013  FFDA         	movff	__RegsToCANID@ptr+1,fsr2h
  8462  0014C8  EE10 F001          	lfsr	1,1
  8463  0014CC  5019               	movf	__RegsToCANID@Value,w,c
  8464  0014CE  26E1               	addwf	fsr1l,f,c
  8465  0014D0  501A               	movf	__RegsToCANID@Value+1,w,c
  8466  0014D2  22E2               	addwfc	fsr1h,f,c
  8467  0014D4  CFDF FFE7          	movff	indf2,indf1
  8468                           
  8469                           ;ECANPoll.c: 1183: ptr++;
  8470  0014D8  4A12               	infsnz	__RegsToCANID@ptr,f,c
  8471  0014DA  2A13               	incf	__RegsToCANID@ptr+1,f,c
  8472                           
  8473                           ;ECANPoll.c: 1184: Value->BYTES.BYTE_1 = *ptr;
  8474  0014DC  C012  FFD9         	movff	__RegsToCANID@ptr,fsr2l
  8475  0014E0  C013  FFDA         	movff	__RegsToCANID@ptr+1,fsr2h
  8476  0014E4  C019  FFE1         	movff	__RegsToCANID@Value,fsr1l
  8477  0014E8  C01A  FFE2         	movff	__RegsToCANID@Value+1,fsr1h
  8478  0014EC  CFDF FFE7          	movff	indf2,indf1
  8479  0014F0  0012               	return	
  8480  0014F2                     __end_of__RegsToCANID:
  8481                           	opt stack 0
  8482  0000                     pclatu	equ	0xFFB
  8483                           pclath	equ	0xFFA
  8484                           tblptru	equ	0xFF8
  8485                           tblptrh	equ	0xFF7
  8486                           tblptrl	equ	0xFF6
  8487                           tablat	equ	0xFF5
  8488                           prodh	equ	0xFF4
  8489                           prodl	equ	0xFF3
  8490                           intcon	equ	0xFF2
  8491                           intcon2	equ	0xFF1
  8492                           intcon3	equ	0xFF0
  8493                           postinc0	equ	0xFEE
  8494                           postdec0	equ	0xFED
  8495                           fsr0h	equ	0xFEA
  8496                           fsr0l	equ	0xFE9
  8497                           wreg	equ	0xFE8
  8498                           indf1	equ	0xFE7
  8499                           postinc1	equ	0xFE6
  8500                           fsr1h	equ	0xFE2
  8501                           fsr1l	equ	0xFE1
  8502                           bsr	equ	0xFE0
  8503                           indf2	equ	0xFDF
  8504                           postinc2	equ	0xFDE
  8505                           postdec2	equ	0xFDD
  8506                           plusw2	equ	0xFDB
  8507                           fsr2h	equ	0xFDA
  8508                           fsr2l	equ	0xFD9
  8509                           status	equ	0xFD8
  8510                           pclatu	equ	0xFFB
  8511                           pclath	equ	0xFFA
  8512                           tblptru	equ	0xFF8
  8513                           tblptrh	equ	0xFF7
  8514                           tblptrl	equ	0xFF6
  8515                           tablat	equ	0xFF5
  8516                           prodh	equ	0xFF4
  8517                           prodl	equ	0xFF3
  8518                           intcon	equ	0xFF2
  8519                           intcon2	equ	0xFF1
  8520                           intcon3	equ	0xFF0
  8521                           postinc0	equ	0xFEE
  8522                           postdec0	equ	0xFED
  8523                           fsr0h	equ	0xFEA
  8524                           fsr0l	equ	0xFE9
  8525                           wreg	equ	0xFE8
  8526                           indf1	equ	0xFE7
  8527                           postinc1	equ	0xFE6
  8528                           fsr1h	equ	0xFE2
  8529                           fsr1l	equ	0xFE1
  8530                           bsr	equ	0xFE0
  8531                           indf2	equ	0xFDF
  8532                           postinc2	equ	0xFDE
  8533                           postdec2	equ	0xFDD
  8534                           plusw2	equ	0xFDB
  8535                           fsr2h	equ	0xFDA
  8536                           fsr2l	equ	0xFD9
  8537                           status	equ	0xFD8
  8538                           
  8539                           	psect	rparam
  8540  0000                     pclatu	equ	0xFFB
  8541                           pclath	equ	0xFFA
  8542                           tblptru	equ	0xFF8
  8543                           tblptrh	equ	0xFF7
  8544                           tblptrl	equ	0xFF6
  8545                           tablat	equ	0xFF5
  8546                           prodh	equ	0xFF4
  8547                           prodl	equ	0xFF3
  8548                           intcon	equ	0xFF2
  8549                           intcon2	equ	0xFF1
  8550                           intcon3	equ	0xFF0
  8551                           postinc0	equ	0xFEE
  8552                           postdec0	equ	0xFED
  8553                           fsr0h	equ	0xFEA
  8554                           fsr0l	equ	0xFE9
  8555                           wreg	equ	0xFE8
  8556                           indf1	equ	0xFE7
  8557                           postinc1	equ	0xFE6
  8558                           fsr1h	equ	0xFE2
  8559                           fsr1l	equ	0xFE1
  8560                           bsr	equ	0xFE0
  8561                           indf2	equ	0xFDF
  8562                           postinc2	equ	0xFDE
  8563                           postdec2	equ	0xFDD
  8564                           plusw2	equ	0xFDB
  8565                           fsr2h	equ	0xFDA
  8566                           fsr2l	equ	0xFD9
  8567                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         302
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     69      70
    BANK0           160     88     101
    BANK1           256      0     144
    BANK2           256      0     144
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    _RegsToCANID@ptr	PTR unsigned char  size(2) Largest target is 1
		 -> RXB1CON(ABS[1]), RXB0CON(ABS[1]), 

    _RegsToCANID@val	PTR unsigned long  size(2) Largest target is 14
		 -> high_isr@CANRxNewMessage(COMRAM[14]), 

    _RegsToCANID@Value	PTR struct _CAN_MESSAGE_ID size(2) Largest target is 14
		 -> high_isr@CANRxNewMessage(COMRAM[14]), 

    _CANIDToRegs@ptr	PTR unsigned char  size(2) Largest target is 1
		 -> TXB2CON(ABS[1]), TXB1CON(ABS[1]), TXB0CON(ABS[1]), 

    _CANIDToRegs@Value	PTR struct _CAN_MESSAGE_ID size(2) Largest target is 4
		 -> _CANIDToRegs@val(BANK0[4]), 

    ECANReceiveMessage@data	PTR unsigned char  size(2) Largest target is 14
		 -> high_isr@CANRxNewMessage(COMRAM[14]), 

    ECANReceiveMessage@id	PTR unsigned long  size(2) Largest target is 14
		 -> high_isr@CANRxNewMessage(COMRAM[14]), 

    ECANReceiveMessage@dataLen	PTR unsigned char  size(2) Largest target is 14
		 -> high_isr@CANRxNewMessage(COMRAM[14]), 

    ECANReceiveMessage@savedPtr	PTR unsigned char  size(2) Largest target is 1
		 -> RXB1CON(ABS[1]), RXB0CON(ABS[1]), 

    ECANReceiveMessage@ptr	PTR unsigned char  size(2) Largest target is 1
		 -> RXB1CON(ABS[1]), RXB0CON(ABS[1]), 

    ECANReceiveMessage@msgFlags	PTR enum E19298 size(2) Largest target is 14
		 -> high_isr@CANRxNewMessage(COMRAM[14]), 

    ECANSendMessage@data	PTR unsigned char  size(2) Largest target is 14
		 -> main@TempCANTxMsg(BANK0[14]), 

    ECANSendMessage@tempPtr	PTR unsigned char  size(2) Largest target is 1
		 -> TXB2CON(ABS[1]), TXB1CON(ABS[1]), TXB0CON(ABS[1]), 

    ECANSendMessage@ptr	PTR unsigned char  size(2) Largest target is 1
		 -> TXB2CON(ABS[1]), TXB1CON(ABS[1]), TXB0CON(ABS[1]), 

    ECANSendMessage@pb	PTR unsigned char [9] size(2) Largest target is 1
		 -> TXB2CON(ABS[1]), TXB1CON(ABS[1]), TXB0CON(ABS[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    _high_isr->_ECANReceiveMessage
    _ECANReceiveMessage->__RegsToCANID

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_UpdateBoardVoltages
    _UpdateBoardVoltages->___fttol
    ___lwtoft->___ftpack
    ___fttol->___ftmul
    ___ftmul->___lwtoft
    _WriteISPPACRegister->_Write_I2C
    _ReadISPPACRegister->_Write_I2C
    _Write_I2C->_Idle_I2C
    _Read_I2C->_Idle_I2C
    _GetActuatorPosition->___lwdiv
    _ECANSendMessage->__CANIDToRegs
    _ECANInitialize->_ECANSetOperationMode

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _low_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _low_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _low_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _low_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _low_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _low_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _low_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _low_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _low_isr in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                43    43      0    9940
                                             47 BANK0     41    41      0
                      _CANRxFifoInit
                      _CANTxFifoInit
                      _ConfigureGPIO
                _ConfigureInterrupts
                _ConfigureOscillator
                    _ConfigureTimers
                    _ECANFiltersInit
                     _ECANInitialize
                    _ECANSendMessage
                _GetActuatorPosition
                       _GetCANRxFifo
                       _GetCANTxFifo
                       _PutCANTxFifo
                _UpdateBoardVoltages
 ---------------------------------------------------------------------------------
 (1) _UpdateBoardVoltages                                  4     4      0    5607
                                             43 BANK0      4     4      0
                 _ReadISPPACRegister
                _WriteISPPACRegister
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             5     2      3    2120
                                              8 BANK0      5     2      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     380
                                             28 BANK0     15    11      4
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    2654
                                             13 BANK0     15     9      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    1970
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (2) _WriteISPPACRegister                                  2     1      1     386
                                              2 BANK0      2     1      1
                      _Configure_I2C
                           _Idle_I2C
                         _NotAck_I2C
                          _Start_I2C
                           _Stop_I2C
                          _Write_I2C
 ---------------------------------------------------------------------------------
 (2) _ReadISPPACRegister                                   2     2      0      67
                                              2 BANK0      2     2      0
                      _Configure_I2C
                           _Idle_I2C
                         _NotAck_I2C
                           _Read_I2C
                          _Start_I2C
                           _Stop_I2C
                          _Write_I2C
 ---------------------------------------------------------------------------------
 (3) _Write_I2C                                            1     1      0      22
                                              1 BANK0      1     1      0
                           _Idle_I2C
 ---------------------------------------------------------------------------------
 (3) _Stop_I2C                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Start_I2C                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Read_I2C                                             0     0      0       0
                           _Idle_I2C
 ---------------------------------------------------------------------------------
 (4) _Idle_I2C                                             1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _NotAck_I2C                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Configure_I2C                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PutCANTxFifo                                        16     2     14     342
                                              0 BANK0     16     2     14
 ---------------------------------------------------------------------------------
 (1) _GetCANTxFifo                                        30    16     14      46
                                              0 BANK0     30    16     14
 ---------------------------------------------------------------------------------
 (1) _GetCANRxFifo                                        30    16     14      46
                                              0 BANK0     30    16     14
 ---------------------------------------------------------------------------------
 (1) _GetActuatorPosition                                  2     2      0     405
                                              8 BANK0      2     2      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     290
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _ECANSendMessage                                     34    26      8    1515
                                             11 BANK0     34    26      8
                       __CANIDToRegs
 ---------------------------------------------------------------------------------
 (2) __CANIDToRegs                                        11     4      7     668
                                              0 BANK0     11     4      7
 ---------------------------------------------------------------------------------
 (1) _ECANInitialize                                       0     0      0      44
               _ECANSetOperationMode
 ---------------------------------------------------------------------------------
 (2) _ECANSetOperationMode                                 1     1      0      44
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ECANFiltersInit                                      4     4      0      45
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _ConfigureTimers                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureInterrupts                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureGPIO                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CANTxFifoInit                                        1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _CANRxFifoInit                                        1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _low_isr                                             18    18      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _high_isr                                            28    28      0    1283
                                             41 COMRAM    28    28      0
                 _ECANReceiveMessage
                       _PutCANRxFifo
 ---------------------------------------------------------------------------------
 (7) _PutCANRxFifo                                        16     2     14      86
                                             17 COMRAM    16     2     14
 ---------------------------------------------------------------------------------
 (7) _ECANReceiveMessage                                  15     7      8    1046
                                             26 COMRAM    15     7      8
                       __RegsToCANID
 ---------------------------------------------------------------------------------
 (8) __RegsToCANID                                         9     4      5     489
                                             17 COMRAM     9     4      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CANRxFifoInit
   _CANTxFifoInit
   _ConfigureGPIO
   _ConfigureInterrupts
   _ConfigureOscillator
   _ConfigureTimers
   _ECANFiltersInit
   _ECANInitialize
     _ECANSetOperationMode
   _ECANSendMessage
     __CANIDToRegs
   _GetActuatorPosition
     ___lwdiv
   _GetCANRxFifo
   _GetCANTxFifo
   _PutCANTxFifo
   _UpdateBoardVoltages
     _ReadISPPACRegister
       _Configure_I2C
       _Idle_I2C
       _NotAck_I2C
       _Read_I2C
         _Idle_I2C
       _Start_I2C
       _Stop_I2C
       _Write_I2C
         _Idle_I2C
     _WriteISPPACRegister
       _Configure_I2C
       _Idle_I2C
       _NotAck_I2C
       _Start_I2C
       _Stop_I2C
       _Write_I2C
         _Idle_I2C
     ___ftmul
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack

 _low_isr (ROOT)

 _high_isr (ROOT)
   _ECANReceiveMessage
     __RegsToCANID
   _PutCANRxFifo

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      90      10       56.3%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      90       8       56.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     58      65       5       63.1%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     45      46       1       73.7%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1CB       6        0.0%
DATA                 0      0     1CB       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Wed Feb 25 14:48:13 2015

                   _SSPSTATbits 000FC7                              l86 07CA                              l99 0730  
                            bsr 000FE0                     __CFG_BORV$3 000000               ??_ECANFiltersInit 0060  
                  __CFG_CP0$OFF 000000                    __CFG_CP1$OFF 000000                    __CFG_CP2$OFF 000000  
                  __CFG_CP3$OFF 000000           __end_of_CANRxFifoInit 1FFC                     main@TempVar 009B  
           _UpdateBoardVoltages 081C                             l101 0782                             l110 07BC  
                           l102 0784                             l111 07C8                             l103 0790  
                           l104 0792                             l105 079E                             l106 07A0  
                           l107 07AC                             l108 07AE                             l301 20C8  
                           l109 07BA                             l310 1D42                             l307 1CC4  
                           l408 10DA                             l273 20AE                             l282 208A  
                           l295 20D0                             l289 20D8                    __CFG_CPB$OFF 000000  
                  __CFG_CPD$OFF 000000                             fsr0 000FE9                             prod 000FF3  
                           wreg 000FE8           __end_of_CANTxFifoInit 1FBA    __size_of_GetActuatorPosition 0088  
                          l1031 1C24                            l3011 12DC                            l3021 1320  
                          l3023 133A                            l3015 12FA                            l3041 1BC2  
                          l3025 1342                            l2305 0312                            l2313 03CA  
                          l3051 1C10                            l3043 1BCA                            l2403 06F0  
                          l2331 047E                            l2243 017A                            l3029 136C  
                          l3039 1BB0                            l2415 0754                            l2351 0548  
                          l2281 027E                            l2273 0244                            l2621 1C9E  
                          l2383 0650                            l2367 05F2                            l2713 1056  
                          l2625 1CBE                            l2377 062E                            l2393 06A4  
                          l2289 02B6                            l2299 02EE                            l2741 1168  
                          l2733 1106                            l2727 10DE                            l2655 18DE  
                          l2841 2096                            l2921 1704                            l2913 168E  
                          l2659 18FE                            l2667 1918                            l2691 1822  
                          l2923 1736                            l2915 16A4                            l2749 1192  
                          l2757 11C4                            l2925 174C                            l2917 16D6  
                          l2909 1674                            l2687 1802                            l2935 1784  
                          l2951 0EAE                            l2929 1762                            l2945 0E6A  
                          l2699 183C                            l2877 2038                            l2965 0F20  
                          l2975 0F84                            l2889 0CFC                            l2969 0F4C  
                          l2993 121C                            l2979 0FB0                            u2001 193C  
                          u2021 17C8                            u2051 182E                            u1411 0202  
                          u2061 1860                            u2401 11F0                            _LATE 000F8D  
                          u1611 053C                            u2420 1248                            u2245 0CAA  
                          u2341 0E40                            u2255 0CE0                            u1551 03E4  
                          u2265 0D1A                            u2361 0E84                            u2425 123E  
                          u1641 05E6                            u1901 1C64                            u1581 0472  
                          u2517 00C6                            _IPR1 000F9F                            _IPR2 000FA2  
                          u2527 00D6                            _PIE1 000F9D                            _IPR3 000FA5  
                          _PIE2 000FA0                            _IPR4 000FB8                            u2537 00E6  
                          _PIE3 000FA3                            _IPR5 000F78                            _PIE4 000FB6  
                          u1691 0698                            u2547 00F6                            _PIE5 000F76  
                          u2557 0834                            u2567 092E                            u1961 18A4  
                          u2577 09CE                            u1881 07E2                            u2587 0A6E  
                          u2597 0B6A                            u1991 190A                            i1l24 0070  
                          i2l20 1B4A                            _PIR1 000F9E                            _PIR2 000FA1  
                          _PIR3 000FA4                            _PIR4 000FB7                            _PIR5 000F77  
              ??_ECANInitialize 0061            ?_UpdateBoardVoltages 0001                            _main 00BA  
                  ___ftpack@arg 0060                    ___ftpack@exp 0063                            fsr0h 000FEA  
                          fsr1h 000FE2                            fsr0l 000FE9                            fsr2h 000FDA  
                          indf1 000FE7                            fsr1l 000FE1                            indf2 000FDF  
                          fsr2l 000FD9                            pclat 000FFA                            prodh 000FF4  
                          prodl 000FF3                            start 00B6                   __CFG_IESO$OFF 000000  
                 __CFG_FOSC$HS1 000000             _ConfigureInterrupts 1E98                   __CFG_MCLRE$ON 000000  
                  ___ftmul@cntr 007A                    ___ftmul@sign 007B       ECANReceiveMessage@dataLen 001F  
                  ___fttol@exp1 008A                    ___fttol@lval 0086                __RegsToCANID@val 0014  
              __RegsToCANID@ptr 0012           __size_of_GetCANRxFifo 00DC                   __CFG_RETEN$ON 000000  
         __size_of_GetCANTxFifo 00DC                           ?_main 0001                 __end_of___ftmul 0FFE  
               __end_of___fttol 137E                 __end_of___lwdiv 1C2E                           i2l419 1524  
                         i2l428 15AA                           _IRXIF 007BBF                           _TMR0H 000FD7  
                         _TMR0L 000FD6                           _PORTA 000F80                           _TRISA 000F92  
                         _TRISB 000F93                           _TRISC 000F94                           _TRISD 000F95  
                         _TRISE 000F96            ?_ConfigureInterrupts 0001             _ConfigureOscillator 20B6  
                 __CFG_WRT0$OFF 000000                   __CFG_WRT1$OFF 000000                   __CFG_WRT2$OFF 000000  
                 __CFG_WRT3$OFF 000000                  __CFG_EBTR0$OFF 000000                  __CFG_FCMEN$OFF 000000  
                __CFG_EBTR1$OFF 000000                  __CFG_EBTR2$OFF 000000                  __CFG_EBTR3$OFF 000000  
                 __CFG_WRTB$OFF 000000                   __CFG_WRTC$OFF 000000                   __CFG_WRTD$OFF 000000  
                __CFG_EBTRB$OFF 000000                   ___ftpack@sign 0064                 __end_of_low_isr 00B6  
           _WriteISPPACRegister 1F30                           tablat 000FF5           ??_UpdateBoardVoltages 008B  
                         plusw2 000FDB                           status 000FD8            ?_ConfigureOscillator 0001  
              __end_of_Idle_I2C 20A8                    _GetCANRxFifo 186E                    _GetCANTxFifo 1792  
          _ECANSetOperationMode 2028                 _ConfigureTimers 2064                 __initialization 1FFC  
                  __end_of_main 081C                __end_of_Read_I2C 20B6            ?_WriteISPPACRegister 0062  
             ??_ECANSendMessage 0073                          ??_main 008F                   ___fttol@sign1 0085  
                    _NotAck_I2C 20C4                   __activetblptr 000000               __RegsToCANID@type 0016  
         ??_ConfigureInterrupts 0060                  __CFG_PLLCFG$ON 000000      ECANReceiveMessage@msgFlags 0021  
                main@MotorOrder 0098                __end_of_Stop_I2C 20D6                          _ADCON1 000FC1  
    ECANReceiveMessage@savedPtr 0024                          _CANCON 000F6F                          _ADRESH 000FC4  
                        _ADRESL 000FC3                          _ANCON0 000F5D                          _ANCON1 000F5C  
                        _CIOCON 000F70                __end_of___ftpack 1792                          _MDSEL0 007B96  
                        _MDSEL1 007B97                 __CFG_BBSIZ$BB2K 000000                          i2l1321 164A  
                        i2l1307 1612                          i2l1315 1630                          i2l1261 1512  
                        i2l1271 153E                          i2l1277 155C                          i2l1297 15D0  
                        i2l2195 1DAA                          i2l1991 141E                          _INTCON 000FF2  
              __end_of___lwtoft 1F30                          _RXB0IF 007BB8                          _RXB1IF 007BB9  
                __CFG_WDTPS$128 000000          ECANReceiveMessage@data 001D                          i2u5_45 151A  
                        i2u5_47 151C                          _SSPADD 000FC8                          _SSPBUF 000FC9  
        ECANReceiveMessage@temp 0029           ??_ConfigureOscillator 0060              _ReadISPPACRegister 1DC8  
         ?_ECANSetOperationMode 0001              __CANIDToRegs@Value 0069                  __CFG_PWRTEN$ON 000000  
                __CFG_XINST$OFF 000000                __end_of_high_isr 1B84                  __CFG_STVREN$ON 000000  
           ?_ReadISPPACRegister 0001                       ??___ftmul 0073                       ??___fttol 0080  
         ??_WriteISPPACRegister 0063                       ??___lwdiv 0064                          clear_0 2002  
                        clear_1 200E                          clear_2 201A                 main@NewReqOrder 0099  
         ___ftmul@f3_as_product 0077                       ??_low_isr 0001                          tblptrh 000FF7  
                        tblptrl 000FF6                          tblptru 000FF8              __size_of_Start_I2C 0008  
                 ?_PutCANRxFifo 0012                   ?_PutCANTxFifo 0060            ??_ReadISPPACRegister 0062  
       __end_of_ConfigureTimers 207E                      __accesstop 0060         __end_of__initialization 2022  
            __size_of_Write_I2C 0018                 _ECANFiltersInit 1A10                      ___ftmul@f1 006D  
                    ___ftmul@f2 0070                    _BoardVoltage 00B8                      ___fttol@f1 007C  
                __pcstackCOMRAM 0001             _GetActuatorPosition 1CC2                      ___lwtoft@c 0068  
                 ?__RegsToCANID 0012     __size_of_ECANReceiveMessage 0166                     ?_NotAck_I2C 0001  
                ??_PutCANRxFifo 0020                  ??_PutCANTxFifo 006E                       ?_Idle_I2C 0001  
          ?_GetActuatorPosition 0001              __RegsToCANID@Value 0019           __end_of_ConfigureGPIO 1E98  
         __end_of_Configure_I2C 2064                      __pbssBANK0 00B8                      __pbssBANK1 0100  
                    __pbssBANK2 0200   ReadISPPACRegister@LocalAdress 0062                       ?_Read_I2C 0001  
        ??_ECANSetOperationMode 0060               __end_of_Start_I2C 20DE                 main@MotorMoving 0097  
      ECANSetOperationMode@mode 0060            __ECANRxFilterHitInfo 0046                       ?_Stop_I2C 0001  
                       _CANSTAT 000F6E                       ?___ftpack 0060                  ??__RegsToCANID 0017  
                       _BRGCON1 000E43                         _BRGCON2 000E44                         _BRGCON3 000E45  
             __end_of_Write_I2C 2096                       ?___lwtoft 0068                         _INTCON2 000FF1  
                       _INTCON3 000FF0                __CFG_CANMX$PORTB 000000                     _TickCounter 00C4  
         ??_GetActuatorPosition 0068                      ??_Idle_I2C 0060                         _RXB0CON 000F60  
                       _RXB1CON 000F30                         _RXB0FUL 007B07                         _RXB1FUL 007987  
                       _TXB0CON 000F20                         _TXB1CON 000F10                         _TXB2CON 000F00  
                       _SSPCON1 000FC6                         _SSPCON2 000FC5                       ?_high_isr 0001  
                       _SSPSTAT 000FC7         __end_of_ECANFiltersInit 1ACE                      ??_Read_I2C 0061  
              ?_ConfigureTimers 0001          __size_of_CANRxFifoInit 0042             __size_of_NotAck_I2C 000A  
               _ECANSendMessage 0FFE                         __Hparam 0000                         __Lparam 0000  
                     _CANRxFifo 0200                       _CANTxFifo 0100                         ___ftmul 0E26  
                       ___fttol 11D6          __size_of_CANTxFifoInit 0042                         ___lwdiv 1B84  
                    ??_Stop_I2C 0060          PutCANRxFifo@PutMessage 0012                         __pcinit 1FFC  
                    ??___ftpack 0065                         __ramtop 0F00                         __ptext0 00BA  
                       __ptext1 081C                         __ptext2 1EE8                         __ptext3 11D6  
                       __ptext4 0E26                         __ptext5 1658                         __ptext6 1F30  
                       __ptext7 1DC8                         __ptext8 207E                         __ptext9 20CE  
                    ??___lwtoft 006B                       _T0CONbits 000FD5               __CFG_MSSPMSK$MSK7 000000  
                       _low_isr 0018     __end_of_UpdateBoardVoltages 0C46                      ??_high_isr 002A  
                __pintcode_body 1ACE            end_of_initialization 2022                         int_func 1ACE  
             ECANSendMessage@id 006B               ECANSendMessage@pb 0074            __end_of_PutCANRxFifo 1DC8  
          __end_of_PutCANTxFifo 1CC2                         postdec0 000FED                         postdec2 000FDD  
       __size_of_ECANInitialize 00C6                         postinc0 000FEE                         postinc1 000FE6  
                       postinc2 000FDE     __end_of_ConfigureInterrupts 1EE8                       _RXM0EXIDM 0077CB  
                     _PORTCbits 000F82                   _CANRxFifoInit 1FBA                   _CANTxFifoInit 1F78  
   __end_of_ConfigureOscillator 20C4         __end_of_ECANSendMessage 11D6                ?_ECANFiltersInit 0001  
                 ?__CANIDToRegs 0060            __end_of__RegsToCANID 14F2     __end_of_WriteISPPACRegister 1F78  
                   ___ftmul@exp 0076       GetCANRxFifo@LocalCANRXMsg 0070                main@TempCANRxMsg 009C  
              main@TempCANTxMsg 00AA                    ??_NotAck_I2C 0060                  ?_CANRxFifoInit 0001  
           start_initialization 1FFC                  ?_CANTxFifoInit 0001     __size_of_ReadISPPACRegister 0074  
             __size_of_Idle_I2C 0012          PutCANTxFifo@PutMessage 0060  WriteISPPACRegister@LocalAdress 0063  
                ??__CANIDToRegs 0067               __size_of_Read_I2C 000E           ECANReceiveMessage@ptr 0027  
            __end_of_NotAck_I2C 20CE   GetActuatorPosition@adc_result 0068               __CANIDToRegs@type 0066  
    __end_of_ECANReceiveMessage 1658                       _Start_I2C 20D6             ECANFiltersInit@mask 0062  
             __size_of_Stop_I2C 0008               __size_of___ftpack 013A                     __pbssCOMRAM 0046  
             __size_of___lwtoft 0048                   __pcstackBANK0 0060                       _Write_I2C 207E  
              ?_ECANSendMessage 006B               __size_of_high_isr 1B7C           __size_of_PutCANRxFifo 007E  
         __size_of_PutCANTxFifo 0094                   ?_GetCANRxFifo 0060                   ?_GetCANTxFifo 0060  
              ___lwdiv@dividend 0060   __size_of_ECANSetOperationMode 0020                  _ECANInitialize 194A  
                     __pintcode 0008                        ?___ftmul 006D                        ?___fttol 007C  
                      ?___lwdiv 0060          __size_of_ConfigureGPIO 005C                 ??_CANRxFifoInit 0060  
                   __pintcodelo 0018          __size_of_Configure_I2C 001C                      ?_Start_I2C 0001  
   __end_of_GetActuatorPosition 1D4A                 ??_CANTxFifoInit 0060                        ?_low_isr 0001  
                    ?_Write_I2C 0001                ___lwdiv@quotient 0065                    _PutCANRxFifo 1D4A  
         __size_of__RegsToCANID 0174                    _PutCANTxFifo 1C2E                        _LATBbits 000F8A  
                      _LATCbits 000F8B                        _LATDbits 000F8C                  ??_GetCANRxFifo 006E  
                ??_GetCANTxFifo 006E          __end_of_ECANInitialize 1A10                        i2u106_45 13C8  
                      i2u107_45 13E8                        i2u108_45 143A                        i2u134_41 1B3A  
                      i2u136_41 1D78                        _PIR5bits 000F77                ECANSendMessage@i 008A  
              ECANSendMessage@j 0086                        _RCONbits 000FD0        __size_of_ConfigureTimers 001A  
                      _RXB0OVFL 007B8F                        _RXB1OVFL 007B8E                        _RXF0SIDH 000EE0  
                      _RXF0SIDL 000EE1                        _RXF1SIDH 000EE4                        _RXF1SIDL 000EE5  
                      _RXF2SIDH 000EE8                        _RXF2SIDL 000EE9                        _RXF3SIDH 000EEC  
                      _RXF3SIDL 000EED                        _RXF4SIDH 000EF0                        _RXF4SIDL 000EF1  
                      _RXF5SIDH 000EF4                        _RXF5SIDL 000EF5                ECANPoll@RXBODBEN 007B02  
                      _RXM0SIDH 000EF8                        _RXBODBEN 007B02                        _RXM0SIDL 000EF9  
                      _RXM1SIDH 000EFC                        _RXM1SIDL 000EFD         high_isr@CANRxNewMessage 0038  
            main@NewReqPosition 0096            main@MotorReqPosition 009A            __end_of__CANIDToRegs 0E26  
                    _ADCON0bits 000FC2                      _ADCON1bits 000FC1                      _ADCON2bits 000FC0  
              __CFG_SOSCSEL$DIG 000000                    __RegsToCANID 137E                        _Idle_I2C 2096  
                 _ConfigureGPIO 1E3C                   _Configure_I2C 2048                        _Read_I2C 20A8  
  __size_of_UpdateBoardVoltages 042A                 ?_ECANInitialize 0001                        __Hrparam 0000  
          ECANReceiveMessage@id 001B                        __Lrparam 0000                __CANIDToRegs@val 0062  
              __CANIDToRegs@ptr 0060              __CFG_BOREN$SBORDIS 000000                        _Stop_I2C 20CE  
              __size_of___ftmul 01D8                __size_of___fttol 01A8                __size_of___lwdiv 00AA  
                   ??_Start_I2C 0060                        ___ftpack 1658                        ___lwtoft 1EE8  
  __size_of_ConfigureInterrupts 0050                 ___lwdiv@divisor 0062                     ??_Write_I2C 0061  
               ___lwdiv@counter 0067                __size_of_low_isr 009E                        __ptext10 20D6  
                      __ptext11 20A8                        __ptext20 0FFE                        __ptext12 2096  
                      __ptext21 0C46                        __ptext13 20C4                        __ptext30 1FBA  
                      __ptext22 194A                        __ptext14 2048                        __ptext23 2028  
                      __ptext15 1C2E                        __ptext24 1A10                        __ptext16 1792  
                      __ptext33 1D4A                        __ptext25 2064                        __ptext17 186E  
                      __ptext34 14F2                        __ptext26 20B6                        __ptext18 1CC2  
                      __ptext35 137E                        __ptext27 1E98                        __ptext19 1B84  
                      __ptext28 1E3C                        __ptext29 1F78                  ?_ConfigureGPIO 0001  
                      _high_isr 0008                  ?_Configure_I2C 0001                   __size_of_main 0762  
  __size_of_ConfigureOscillator 000E        __size_of_ECANFiltersInit 00BE             ECANSendMessage@data 006F  
           ECANSendMessage@temp 0089       GetCANTxFifo@LocalCANTXMsg 0070       ReadISPPACRegister@I2CData 0063  
  __size_of_WriteISPPACRegister 0048                     _RXB0FILHIT0 007B00             __CFG_INTOSCSEL$HIGH 000000  
             ??_ConfigureTimers 0060              __CFG_WDTEN$SWDTDIS 000000            __end_of_GetCANRxFifo 194A  
                    _INTCONbits 000FF2    WriteISPPACRegister@LocalData 0062            __end_of_GetCANTxFifo 186E  
           ECANReceiveMessage@i 0026      __end_of_ReadISPPACRegister 1E3C              _ECANReceiveMessage 14F2  
              ecanpoll@RXBODBEN 007B02                        intlevel1 0000                        intlevel2 0000  
           ?_ECANReceiveMessage 001B                     _TXB0CONbits 000F20         ECANSendMessage@msgFlags 0072  
                    _OSCCONbits 000FD3              ECANSendMessage@ptr 008B           __size_of__CANIDToRegs 01E0  
        ECANSendMessage@dataLen 0071            ??_ECANReceiveMessage 0023    __end_of_ECANSetOperationMode 2048  
               ??_ConfigureGPIO 0060                      _RXM1EXIDEN 0077EB                 ??_Configure_I2C 0060  
                   _SSPCON1bits 000FC6                     _SSPCON2bits 000FC5          ECANSendMessage@tempPtr 0087  
           __CFG_BORPWR$ZPBORMV 000000                    __CANIDToRegs 0C46               Write_I2C@data_out 0061  
      __size_of_ECANSendMessage 01D8  
